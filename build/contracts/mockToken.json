{
  "contractName": "mockToken",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value_",
          "type": "uint256"
        }
      ],
      "name": "transferByContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.3+commit.9bfce1f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value_\",\"type\":\"uint256\"}],\"name\":\"transferByContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/mocks/mockToken.sol\":\"mockToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/mocks/mockToken.sol\":{\"keccak256\":\"0x2b2ec5c86c4a44a0fa4a81487765c49ff10f0af5941e242b98c87f9c54bf0baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17f9f174931b307ae9e589d987815c9715278f9c7bcd5aa4be8502fd7d4d51d4\",\"dweb:/ipfs/QmTJFE1ub3SnmFMPG2RogK4UuWvMo3fzoVk7Be4DCMtsia\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x048b9e08a5bb1f222d99e612416f744d17096e6b7dd6b0709ab13497754e9cb4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48268fd79790b5a92008bc3d8018261897347b2700d62b6283fb38f9e5913683\",\"dweb:/ipfs/QmfVQLh4zm3M7tb8D8y1TtaAK8n2XAgCb3ghz3NeaU2jvZ\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060408051808201825260088152676d6f636b47414d4560c01b6020808301918252835180850190945260058452646d47414d4560d81b9084015281519192916200005f916003916200021c565b508051620000759060049060208401906200021c565b50506005805460ff1916601217905550620000a0336ec097ce7bc90715b34b9f1000000000620000a6565b620002b8565b6001600160a01b03821662000102576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6200011060008383620001b5565b6200012c81600254620001ba60201b620006d81790919060201c565b6002556001600160a01b038216600090815260208181526040909120546200015f918390620006d8620001ba821b17901c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b60008282018381101562000215576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200025f57805160ff19168380011785556200028f565b828001600101855582156200028f579182015b828111156200028f57825182559160200191906001019062000272565b506200029d929150620002a1565b5090565b5b808211156200029d5760008155600101620002a2565b610c5680620002c86000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c806370a0823111610081578063a9059cbb1161005b578063a9059cbb146102cb578063dd62ed3e14610304578063e2b8e7d31461033f576100d4565b806370a082311461025757806395d89b411461028a578063a457c2d714610292576100d4565b806323b872dd116100b257806323b872dd146101bd578063313ce56714610200578063395093511461021e576100d4565b806306fdde03146100d9578063095ea7b31461015657806318160ddd146101a3575b600080fd5b6100e1610384565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561011b578181015183820152602001610103565b50505050905090810190601f1680156101485780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61018f6004803603604081101561016c57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610438565b604080519115158252519081900360200190f35b6101ab610455565b60408051918252519081900360200190f35b61018f600480360360608110156101d357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135909116906040013561045b565b6102086104fc565b6040805160ff9092168252519081900360200190f35b61018f6004803603604081101561023457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610505565b6101ab6004803603602081101561026d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610560565b6100e1610588565b61018f600480360360408110156102a857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610607565b61018f600480360360408110156102e157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561067c565b6101ab6004803603604081101561031a57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610690565b6103826004803603606081101561035557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356106c8565b005b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561042e5780601f106104035761010080835404028352916020019161042e565b820191906000526020600020905b81548152906001019060200180831161041157829003601f168201915b5050505050905090565b600061044c610445610753565b8484610757565b50600192915050565b60025490565b600061046884848461089e565b6104f284610474610753565b6104ed85604051806060016040528060288152602001610b8b6028913973ffffffffffffffffffffffffffffffffffffffff8a166000908152600160205260408120906104bf610753565b73ffffffffffffffffffffffffffffffffffffffff1681526020810191909152604001600020549190610a6e565b610757565b5060019392505050565b60055460ff1690565b600061044c610512610753565b846104ed8560016000610523610753565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c1681529252902054906106d8565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561042e5780601f106104035761010080835404028352916020019161042e565b600061044c610614610753565b846104ed85604051806060016040528060258152602001610bfc602591396001600061063e610753565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d16815292529020549190610a6e565b600061044c610689610753565b848461089e565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6106d383838361089e565b505050565b60008282018381101561074c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b73ffffffffffffffffffffffffffffffffffffffff83166107c3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610bd86024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661082f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610b436022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff831661090a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610bb36025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610976576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610b206023913960400191505060405180910390fd5b6109818383836106d3565b6109cb81604051806060016040528060268152602001610b656026913973ffffffffffffffffffffffffffffffffffffffff86166000908152602081905260409020549190610a6e565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610a0790826106d8565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610b17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610adc578181015183820152602001610ac4565b50505050905090810190601f168015610b095780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220546710cd86c6ed6621545f0b676d88f1734383c879f71d9acf5aa60b1445c45164736f6c63430007030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100d45760003560e01c806370a0823111610081578063a9059cbb1161005b578063a9059cbb146102cb578063dd62ed3e14610304578063e2b8e7d31461033f576100d4565b806370a082311461025757806395d89b411461028a578063a457c2d714610292576100d4565b806323b872dd116100b257806323b872dd146101bd578063313ce56714610200578063395093511461021e576100d4565b806306fdde03146100d9578063095ea7b31461015657806318160ddd146101a3575b600080fd5b6100e1610384565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561011b578181015183820152602001610103565b50505050905090810190601f1680156101485780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61018f6004803603604081101561016c57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610438565b604080519115158252519081900360200190f35b6101ab610455565b60408051918252519081900360200190f35b61018f600480360360608110156101d357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020810135909116906040013561045b565b6102086104fc565b6040805160ff9092168252519081900360200190f35b61018f6004803603604081101561023457600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610505565b6101ab6004803603602081101561026d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610560565b6100e1610588565b61018f600480360360408110156102a857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610607565b61018f600480360360408110156102e157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561067c565b6101ab6004803603604081101561031a57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610690565b6103826004803603606081101561035557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356106c8565b005b60038054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561042e5780601f106104035761010080835404028352916020019161042e565b820191906000526020600020905b81548152906001019060200180831161041157829003601f168201915b5050505050905090565b600061044c610445610753565b8484610757565b50600192915050565b60025490565b600061046884848461089e565b6104f284610474610753565b6104ed85604051806060016040528060288152602001610b8b6028913973ffffffffffffffffffffffffffffffffffffffff8a166000908152600160205260408120906104bf610753565b73ffffffffffffffffffffffffffffffffffffffff1681526020810191909152604001600020549190610a6e565b610757565b5060019392505050565b60055460ff1690565b600061044c610512610753565b846104ed8560016000610523610753565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918c1681529252902054906106d8565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b60048054604080516020601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561042e5780601f106104035761010080835404028352916020019161042e565b600061044c610614610753565b846104ed85604051806060016040528060258152602001610bfc602591396001600061063e610753565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918d16815292529020549190610a6e565b600061044c610689610753565b848461089e565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6106d383838361089e565b505050565b60008282018381101561074c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b3390565b73ffffffffffffffffffffffffffffffffffffffff83166107c3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610bd86024913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821661082f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610b436022913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b73ffffffffffffffffffffffffffffffffffffffff831661090a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180610bb36025913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610976576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610b206023913960400191505060405180910390fd5b6109818383836106d3565b6109cb81604051806060016040528060268152602001610b656026913973ffffffffffffffffffffffffffffffffffffffff86166000908152602081905260409020549190610a6e565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082209390935590841681522054610a0790826106d8565b73ffffffffffffffffffffffffffffffffffffffff8084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610b17576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610adc578181015183820152602001610ac4565b50505050905090810190601f168015610b095780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220546710cd86c6ed6621545f0b676d88f1734383c879f71d9acf5aa60b1445c45164736f6c63430007030033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "129:257:11:-:0;;;163:86;;;;;;;;;-1:-1:-1;1956:138:119;;;;;;;;;;;-1:-1:-1;;;1956:138:119;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1956:138:119;;;;2023:13;;1956:138;;;2023:13;;:5;;:13;:::i;:::-;-1:-1:-1;2046:17:119;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;2073:9:119;:14;;-1:-1:-1;;2073:14:119;2085:2;2073:14;;;-1:-1:-1;216:25:11::1;222:10;234:6;216:5;:25::i;:::-;129:257:::0;;7783:370:119;-1:-1:-1;;;;;7866:21:119;;7858:65;;;;;-1:-1:-1;;;7858:65:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;7934:49;7963:1;7967:7;7976:6;7934:20;:49::i;:::-;8009:24;8026:6;8009:12;;:16;;;;;;:24;;;;:::i;:::-;7994:12;:39;-1:-1:-1;;;;;8064:18:119;;:9;:18;;;;;;;;;;;;:30;;8087:6;;8064:22;;;;;:30;;:::i;:::-;-1:-1:-1;;;;;8043:18:119;;:9;:18;;;;;;;;;;;:51;;;;8109:37;;;;;;;8043:18;;:9;;8109:37;;;;;;;;;;7783:370;;:::o;10644:92::-;;;;:::o;882:176:99:-;940:7;971:5;;;994:6;;;;986:46;;;;;-1:-1:-1;;;986:46:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;882:176;-1:-1:-1;;;882:176:99:o;129:257:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;129:257:11;;;-1:-1:-1;129:257:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "129:257:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2159:81:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4195:166;;;;;;;;;;;;;;;;-1:-1:-1;4195:166:119;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3202:98;;;:::i;:::-;;;;;;;;;;;;;;;;4828:317;;;;;;;;;;;;;;;;-1:-1:-1;4828:317:119;;;;;;;;;;;;;;;;;;:::i;3061:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5540:215;;;;;;;;;;;;;;;;-1:-1:-1;5540:215:119;;;;;;;;;:::i;3358:117::-;;;;;;;;;;;;;;;;-1:-1:-1;3358:117:119;;;;:::i;2353:85::-;;;:::i;6242:266::-;;;;;;;;;;;;;;;;-1:-1:-1;6242:266:119;;;;;;;;;:::i;3678:172::-;;;;;;;;;;;;;;;;-1:-1:-1;3678:172:119;;;;;;;;;:::i;3908:149::-;;;;;;;;;;;;;;;;-1:-1:-1;3908:149:119;;;;;;;;;;;:::i;255:128:11:-;;;;;;;;;;;;;;;;-1:-1:-1;255:128:11;;;;;;;;;;;;;;;;;;:::i;:::-;;2159:81:119;2228:5;2221:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2196:13;;2221:12;;2228:5;;2221:12;;2228:5;2221:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2159:81;:::o;4195:166::-;4278:4;4294:39;4303:12;:10;:12::i;:::-;4317:7;4326:6;4294:8;:39::i;:::-;-1:-1:-1;4350:4:119;4195:166;;;;:::o;3202:98::-;3281:12;;3202:98;:::o;4828:317::-;4934:4;4950:36;4960:6;4968:9;4979:6;4950:9;:36::i;:::-;4996:121;5005:6;5013:12;:10;:12::i;:::-;5027:89;5065:6;5027:89;;;;;;;;;;;;;;;;;:19;;;;;;;:11;:19;;;;;;5047:12;:10;:12::i;:::-;5027:33;;;;;;;;;;;;;-1:-1:-1;5027:33:119;;;:89;:37;:89::i;:::-;4996:8;:121::i;:::-;-1:-1:-1;5134:4:119;4828:317;;;;;:::o;3061:81::-;3126:9;;;;3061:81;:::o;5540:215::-;5628:4;5644:83;5653:12;:10;:12::i;:::-;5667:7;5676:50;5715:10;5676:11;:25;5688:12;:10;:12::i;:::-;5676:25;;;;;;;;;;;;;;;;;;-1:-1:-1;5676:25:119;;;:34;;;;;;;;;;;:38;:50::i;3358:117::-;3450:18;;3424:7;3450:18;;;;;;;;;;;;3358:117::o;2353:85::-;2424:7;2417:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2392:13;;2417:14;;2424:7;;2417:14;;2424:7;2417:14;;;;;;;;;;;;;;;;;;;;;;;;6242:266;6335:4;6351:129;6360:12;:10;:12::i;:::-;6374:7;6383:96;6422:15;6383:96;;;;;;;;;;;;;;;;;:11;:25;6395:12;:10;:12::i;:::-;6383:25;;;;;;;;;;;;;;;;;;-1:-1:-1;6383:25:119;;;:34;;;;;;;;;;;:96;:38;:96::i;3678:172::-;3764:4;3780:42;3790:12;:10;:12::i;:::-;3804:9;3815:6;3780:9;:42::i;3908:149::-;4023:18;;;;3997:7;4023:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3908:149::o;255:128:11:-;346:29;356:5;363:3;368:6;346:9;:29::i;:::-;255:128;;;:::o;882:176:99:-;940:7;971:5;;;994:6;;;;986:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1050:1;882:176;-1:-1:-1;;;882:176:99:o;598:104:13:-;685:10;598:104;:::o;9306:340:119:-;9407:19;;;9399:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9485:21;;;9477:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9556:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9607:32;;;;;;;;;;;;;;;;;9306:340;;;:::o;6982:530::-;7087:20;;;7079:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7167:23;;;7159:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7241:47;7262:6;7270:9;7281:6;7241:20;:47::i;:::-;7319:71;7341:6;7319:71;;;;;;;;;;;;;;;;;:17;;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;7299:17;;;;:9;:17;;;;;;;;;;;:91;;;;7423:20;;;;;;;:32;;7448:6;7423:24;:32::i;:::-;7400:20;;;;:9;:20;;;;;;;;;;;;:55;;;;7470:35;;;;;;;7400:20;;7470:35;;;;;;;;;;;;;6982:530;;;:::o;1754:187:99:-;1840:7;1875:12;1867:6;;;;1859:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1910:5:99;;;1754:187::o",
  "source": "// SPDX-License-Identifier: MIT\r\nimport '../openzeppelin/contracts/token/ERC20/ERC20.sol';\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\n\r\ncontract mockToken is ERC20{\r\n    constructor() ERC20(\"mockGAME\",\"mGAME\" ) {\r\n         _mint(msg.sender, 10**36);\r\n    }\r\n    function transferByContract(address from_, address to_, uint256 value_) public {\r\n         _transfer(from_, to_, value_);\r\n    }\r\n}",
  "sourcePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/mocks/mockToken.sol",
  "ast": {
    "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/mocks/mockToken.sol",
    "exportedSymbols": {
      "Context": [
        2171
      ],
      "ERC20": [
        8644
      ],
      "IERC20": [
        9214
      ],
      "SafeMath": [
        5149
      ],
      "mockToken": [
        2146
      ]
    },
    "id": 2147,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "../openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2110,
        "nodeType": "ImportDirective",
        "scope": 2147,
        "sourceUnit": 8645,
        "src": "33:57:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2111,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "92:31:11"
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2112,
              "name": "ERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8644,
              "src": "151:5:11",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$8644",
                "typeString": "contract ERC20"
              }
            },
            "id": 2113,
            "nodeType": "InheritanceSpecifier",
            "src": "151:5:11"
          }
        ],
        "contractDependencies": [
          2171,
          8644,
          9214
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2146,
        "linearizedBaseContracts": [
          2146,
          8644,
          9214,
          2171
        ],
        "name": "mockToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2128,
              "nodeType": "Block",
              "src": "204:45:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2121,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "222:3:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "222:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        },
                        "id": 2125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 2123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "234:2:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3336",
                          "id": 2124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "238:2:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_36_by_1",
                            "typeString": "int_const 36"
                          },
                          "value": "36"
                        },
                        "src": "234:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                          "typeString": "int_const 1000...(29 digits omitted)...0000"
                        }
                      ],
                      "id": 2120,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8520,
                      "src": "216:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "216:25:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2127,
                  "nodeType": "ExpressionStatement",
                  "src": "216:25:11"
                }
              ]
            },
            "id": 2129,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "6d6f636b47414d45",
                    "id": 2116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "183:10:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_61b6d1b0890e37e14c3367cc60ad280a89de2d14acabab53c46c9e4bcf2ad9ee",
                      "typeString": "literal_string \"mockGAME\""
                    },
                    "value": "mockGAME"
                  },
                  {
                    "hexValue": "6d47414d45",
                    "id": 2117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "194:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e55eecd3aaff6aa7708b56ee6ebfde3f48177572b5272b433f82410f3f74e889",
                      "typeString": "literal_string \"mGAME\""
                    },
                    "value": "mGAME"
                  }
                ],
                "id": 2118,
                "modifierName": {
                  "id": 2115,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8644,
                  "src": "177:5:11",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$8644_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "177:26:11"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "174:2:11"
            },
            "returnParameters": {
              "id": 2119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "204:0:11"
            },
            "scope": 2146,
            "src": "163:86:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2144,
              "nodeType": "Block",
              "src": "334:49:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2139,
                        "name": "from_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2131,
                        "src": "356:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2140,
                        "name": "to_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2133,
                        "src": "363:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2141,
                        "name": "value_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2135,
                        "src": "368:6:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2138,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8465,
                      "src": "346:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "346:29:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2143,
                  "nodeType": "ExpressionStatement",
                  "src": "346:29:11"
                }
              ]
            },
            "functionSelector": "e2b8e7d3",
            "id": 2145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferByContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2131,
                  "mutability": "mutable",
                  "name": "from_",
                  "nodeType": "VariableDeclaration",
                  "scope": 2145,
                  "src": "283:13:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "283:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2133,
                  "mutability": "mutable",
                  "name": "to_",
                  "nodeType": "VariableDeclaration",
                  "scope": 2145,
                  "src": "298:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "298:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2135,
                  "mutability": "mutable",
                  "name": "value_",
                  "nodeType": "VariableDeclaration",
                  "scope": 2145,
                  "src": "311:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "311:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "282:44:11"
            },
            "returnParameters": {
              "id": 2137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "334:0:11"
            },
            "scope": 2146,
            "src": "255:128:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2147,
        "src": "129:257:11"
      }
    ],
    "src": "33:353:11"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/mocks/mockToken.sol",
      "exportedSymbols": {
        "Context": [
          2171
        ],
        "ERC20": [
          8644
        ],
        "IERC20": [
          9214
        ],
        "SafeMath": [
          5149
        ],
        "mockToken": [
          2146
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "SourceUnit": 8645,
          "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC20/ERC20.sol",
          "file": "../openzeppelin/contracts/token/ERC20/ERC20.sol",
          "scope": 2147,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2110,
        "name": "ImportDirective",
        "src": "33:57:11"
      },
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.6",
            ".0",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 2111,
        "name": "PragmaDirective",
        "src": "92:31:11"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            2171,
            8644,
            9214
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            2146,
            8644,
            9214,
            2171
          ],
          "name": "mockToken",
          "scope": 2147
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC20",
                  "referencedDeclaration": 8644,
                  "type": "contract ERC20"
                },
                "id": 2112,
                "name": "UserDefinedTypeName",
                "src": "151:5:11"
              }
            ],
            "id": 2113,
            "name": "InheritanceSpecifier",
            "src": "151:5:11"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 2146,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2114,
                "name": "ParameterList",
                "src": "174:2:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2119,
                "name": "ParameterList",
                "src": "204:0:11"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 8644,
                      "type": "type(contract ERC20)",
                      "value": "ERC20"
                    },
                    "id": 2115,
                    "name": "Identifier",
                    "src": "177:5:11"
                  },
                  {
                    "attributes": {
                      "hexvalue": "6d6f636b47414d45",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"mockGAME\"",
                      "value": "mockGAME"
                    },
                    "id": 2116,
                    "name": "Literal",
                    "src": "183:10:11"
                  },
                  {
                    "attributes": {
                      "hexvalue": "6d47414d45",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"mGAME\"",
                      "value": "mGAME"
                    },
                    "id": 2117,
                    "name": "Literal",
                    "src": "194:7:11"
                  }
                ],
                "id": 2118,
                "name": "ModifierInvocation",
                "src": "177:26:11"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                                  "typeString": "int_const 1000...(29 digits omitted)...0000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8520,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 2120,
                            "name": "Identifier",
                            "src": "216:5:11"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 2121,
                                "name": "Identifier",
                                "src": "222:3:11"
                              }
                            ],
                            "id": 2122,
                            "name": "MemberAccess",
                            "src": "222:10:11"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
                                "typeString": "int_const 1000...(29 digits omitted)...0000"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "operator": "**",
                              "type": "int_const 1000...(29 digits omitted)...0000"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "hexvalue": "3130",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 10",
                                  "value": "10"
                                },
                                "id": 2123,
                                "name": "Literal",
                                "src": "234:2:11"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "3336",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 36",
                                  "value": "36"
                                },
                                "id": 2124,
                                "name": "Literal",
                                "src": "238:2:11"
                              }
                            ],
                            "id": 2125,
                            "name": "BinaryOperation",
                            "src": "234:6:11"
                          }
                        ],
                        "id": 2126,
                        "name": "FunctionCall",
                        "src": "216:25:11"
                      }
                    ],
                    "id": 2127,
                    "name": "ExpressionStatement",
                    "src": "216:25:11"
                  }
                ],
                "id": 2128,
                "name": "Block",
                "src": "204:45:11"
              }
            ],
            "id": 2129,
            "name": "FunctionDefinition",
            "src": "163:86:11"
          },
          {
            "attributes": {
              "functionSelector": "e2b8e7d3",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "transferByContract",
              "scope": 2146,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "from_",
                      "scope": 2145,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2130,
                        "name": "ElementaryTypeName",
                        "src": "283:7:11"
                      }
                    ],
                    "id": 2131,
                    "name": "VariableDeclaration",
                    "src": "283:13:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to_",
                      "scope": 2145,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2132,
                        "name": "ElementaryTypeName",
                        "src": "298:7:11"
                      }
                    ],
                    "id": 2133,
                    "name": "VariableDeclaration",
                    "src": "298:11:11"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "value_",
                      "scope": 2145,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2134,
                        "name": "ElementaryTypeName",
                        "src": "311:7:11"
                      }
                    ],
                    "id": 2135,
                    "name": "VariableDeclaration",
                    "src": "311:14:11"
                  }
                ],
                "id": 2136,
                "name": "ParameterList",
                "src": "282:44:11"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2137,
                "name": "ParameterList",
                "src": "334:0:11"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8465,
                              "type": "function (address,address,uint256)",
                              "value": "_transfer"
                            },
                            "id": 2138,
                            "name": "Identifier",
                            "src": "346:9:11"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2131,
                              "type": "address",
                              "value": "from_"
                            },
                            "id": 2139,
                            "name": "Identifier",
                            "src": "356:5:11"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2133,
                              "type": "address",
                              "value": "to_"
                            },
                            "id": 2140,
                            "name": "Identifier",
                            "src": "363:3:11"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2135,
                              "type": "uint256",
                              "value": "value_"
                            },
                            "id": 2141,
                            "name": "Identifier",
                            "src": "368:6:11"
                          }
                        ],
                        "id": 2142,
                        "name": "FunctionCall",
                        "src": "346:29:11"
                      }
                    ],
                    "id": 2143,
                    "name": "ExpressionStatement",
                    "src": "346:29:11"
                  }
                ],
                "id": 2144,
                "name": "Block",
                "src": "334:49:11"
              }
            ],
            "id": 2145,
            "name": "FunctionDefinition",
            "src": "255:128:11"
          }
        ],
        "id": 2146,
        "name": "ContractDefinition",
        "src": "129:257:11"
      }
    ],
    "id": 2147,
    "name": "SourceUnit",
    "src": "33:353:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.3+commit.9bfce1f6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-14T01:48:59.797Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}