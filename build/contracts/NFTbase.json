{
  "contractName": "NFTbase",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BURNER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "METADATA_ADMIN",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_tokenURIs",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "hasMinted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newuri",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "setURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newuri",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenid",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.3+commit.9bfce1f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"METADATA_ADMIN\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_tokenURIs\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"hasMinted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newuri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenid\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"}},\"title\":\"ERC1155Mock This mock just publicizes internal functions for testing purposes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/NFTbase.sol\":\"NFTbase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/Admin.sol\":{\"keccak256\":\"0xcba0bdc2565d4c03d6112c881f732435b13c8d057907d2d534b6f62e24a67a94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba449bf809707d7a844c4ce365e613ded345dccc92146f5097ca17ae1d60b958\",\"dweb:/ipfs/QmXyFy5PEYVYGbYUK6quGS2Uf4pDjuoyLYG4W9AXw1g2uc\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/NFTbase.sol\":{\"keccak256\":\"0x6ddfb2a4a96456b424e040ee6b7e1f3c308c2658ae896b7cc6210c0823c27755\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44a54706b12fd1ccd4b02a140ac37edcb1bfd37402223d73adfee1440ff87719\",\"dweb:/ipfs/QmYpW6ktKZzXhdJ9n4NTDmav6WHfxRBspD3drjunWs2gqG\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x37ff88aa5ca8f533e31b9e1cb5354816b15bb7d41c904ea1c8f5dd5a78d6da25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3731db435ced7084f2cb3947e708371c10a2e3f654dcfe2a237fc8fbdafbe5f\",\"dweb:/ipfs/QmUyiwkuiP2fYBVaTwwY82sJKxJyPQaBqAtS4uG6iaUSP7\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x5bf492ea76e279b8ea67bc480bd846279dc50a4f6312f745a792a256b5162433\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dfcf0fe9dc6677741198d4a51ced5095459f0c05365d8fe8f03e61159bfde99\",\"dweb:/ipfs/QmUq71YNeu1QBZbdY6hD5v49KvuG8xiWZf2SeTPfR3dqGN\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x697f392eb11e06caae9adb810755040c9d3491468bb863c588a9fd81bf8a59bc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbe979721c07e2c15445ec5dbd83432f60b8d8e1e60eaef396dfd72efba5969e\",\"dweb:/ipfs/QmX6qzE6S7cWBLwfh3AZpkvyGvyHTqnGmMoxHiJDH8o1Ja\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x61321d2c86346045bf394885ee3afeecc65f9daad2694bc19110967588fd7b5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1703b877203e0447ede72dcf73f1c4f2089b415bd1c44877904128a64fafed5b\",\"dweb:/ipfs/QmaZoYDo2FWtKcwCc9zuabU6zri8KV9xJrhU614d93sLid\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC1155/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xd918cca1b659f588a6d12d05fd7196179a8b1eac9133d7f77da7ef3133e13256\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c75d578f42e2e2e427b934e6c41cc759be2d0a52155868308e915328c8feb2b\",\"dweb:/ipfs/QmbFNHtWAoNhe82Hy6yKTePWJRczqzp1APSBfLS9XfAN6e\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x2690a9b7f4f7489b8d25a4fc6bffc02ec3971fb41ed6c8b59adef2833bdab07c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8148c99452b6793ac9599abdc8bdaf4eeb47f34590beea8aa01089be14e2990c\",\"dweb:/ipfs/QmNdenmZ4EDfH9TuBas3pHeGuZvDNo2rsfgUj6ka8vuH37\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xae0992eb1ec30fd1ecdf2e04a6036decfc9797bf11dc1ec84b546b74318d5ec2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b61f99a64e999682ad7bfbb3a1c762a20a0a5b30f9f2011693fa857969af61f\",\"dweb:/ipfs/QmZystFY76wkWCf7V3yKh3buZuKVKbswiE7y6yU62kk3zi\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x16b5422892fbdd9648f12e59de85b42efd57d76b6d6b2358cb46e0f6d4a71aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ef38821a4ee756757dc1ce9074ef6096d1b5c760627e92c0852d788dc636ea7\",\"dweb:/ipfs/QmdGwP6BtRMcp4VVJUWwTmXEjYmL52A8WZpBdFJYmzc9pJ\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002ad238038062002ad2833981810160405260208110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052506200010191506301ffc9a760e01b9050620001cc565b62000113636cdb3d1360e11b620001cc565b620001256303a24d0760e21b620001cc565b6200013b60006200013562000251565b62000255565b6200015960008051602062002ab28339815191526200013562000251565b6200017760008051602062002a928339815191526200013562000251565b62000193600060008051602062002a9283398151915262000265565b620001af600060008051602062002ab283398151915262000265565b8051620001c4906006906020840190620003b9565b505062000455565b6001600160e01b031980821614156200022c576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b3390565b620002618282620002b7565b5050565b600082815260056020526040808220600201549051839285917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a460009182526005602052604090912060020155565b6000828152600560209081526040909120620002de9183906200185c62000332821b17901c565b156200026157620002ee62000251565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000349836001600160a01b03841662000352565b90505b92915050565b6000620003608383620003a1565b62000398575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200034c565b5060006200034c565b60009081526001919091016020526040902054151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003fc57805160ff19168380011785556200042c565b828001600101855582156200042c579182015b828111156200042c5782518255916020019190600101906200040f565b506200043a9291506200043e565b5090565b5b808211156200043a57600081556001016200043f565b61262d80620004656000396000f3fe608060405234801561001057600080fd5b506004361061018c5760003560e01c806367db3b8f116100e3578063ca15c8731161008c578063e985e9c511610066578063e985e9c5146108eb578063f242432a14610919578063fe6d8124146109e45761018c565b8063ca15c87314610885578063d547741f146108a2578063e5b95595146108ce5761018c565b8063a217fddf116100bd578063a217fddf14610847578063a22cb4651461084f578063b1de303e1461087d5761018c565b806367db3b8f146107345780639010d07c146107dc57806391d148541461081b5761018c565b8063248a9ca31161014557806336568abe1161011f57806336568abe146104eb5780634e1273f41461051757806355f804b31461068e5761018c565b8063248a9ca3146102d95780632eb2c2d6146102f65780632f2ff15d146104bf5761018c565b80630bb78ec1116101765780630bb78ec1146102225780630e89341c146102b4578063118c4f13146102d15761018c565b8062fdd58e1461019157806301ffc9a7146101cf575b600080fd5b6101bd600480360360408110156101a757600080fd5b506001600160a01b0381351690602001356109ec565b60408051918252519081900360200190f35b61020e600480360360208110156101e557600080fd5b50357fffffffff0000000000000000000000000000000000000000000000000000000016610a5e565b604080519115158252519081900360200190f35b61023f6004803603602081101561023857600080fd5b5035610a99565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610279578181015183820152602001610261565b50505050905090810190601f1680156102a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61023f600480360360208110156102ca57600080fd5b5035610b52565b6101bd610e2e565b6101bd600480360360208110156102ef57600080fd5b5035610e52565b6104bd600480360360a081101561030c57600080fd5b6001600160a01b03823581169260208101359091169181019060608101604082013564010000000081111561034057600080fd5b82018360208201111561035257600080fd5b8035906020019184602083028401116401000000008311171561037457600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156103c457600080fd5b8201836020820111156103d657600080fd5b803590602001918460208302840111640100000000831117156103f857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561044857600080fd5b82018360208201111561045a57600080fd5b8035906020019184600183028401116401000000008311171561047c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e67945050505050565b005b6104bd600480360360408110156104d557600080fd5b50803590602001356001600160a01b0316611165565b6104bd6004803603604081101561050157600080fd5b50803590602001356001600160a01b03166111d1565b61063e6004803603604081101561052d57600080fd5b81019060208101813564010000000081111561054857600080fd5b82018360208201111561055a57600080fd5b8035906020019184602083028401116401000000008311171561057c57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156105cc57600080fd5b8201836020820111156105de57600080fd5b8035906020019184602083028401116401000000008311171561060057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611232945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561067a578181015183820152602001610662565b505050509050019250505060405180910390f35b6104bd600480360360208110156106a457600080fd5b8101906020810181356401000000008111156106bf57600080fd5b8201836020820111156106d157600080fd5b803590602001918460018302840111640100000000831117156106f357600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506113b0945050505050565b6104bd6004803603604081101561074a57600080fd5b81019060208101813564010000000081111561076557600080fd5b82018360208201111561077757600080fd5b8035906020019184600183028401116401000000008311171561079957600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506113f6915050565b6107ff600480360360408110156107f257600080fd5b508035906020013561144d565b604080516001600160a01b039092168252519081900360200190f35b61020e6004803603604081101561083157600080fd5b50803590602001356001600160a01b031661146c565b6101bd611484565b6104bd6004803603604081101561086557600080fd5b506001600160a01b0381351690602001351515611489565b6101bd611596565b6101bd6004803603602081101561089b57600080fd5b50356115ba565b6104bd600480360360408110156108b857600080fd5b50803590602001356001600160a01b03166115d1565b61020e600480360360208110156108e457600080fd5b503561162a565b61020e6004803603604081101561090157600080fd5b506001600160a01b038135811691602001351661163f565b6104bd600480360360a081101561092f57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561096f57600080fd5b82018360208201111561098157600080fd5b803590602001918460018302840111640100000000831117156109a357600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061166d945050505050565b6101bd611838565b60006001600160a01b038316610a335760405162461bcd60e51b815260040180806020018281038252602b815260200180612419602b913960400191505060405180910390fd5b5060008181526001602090815260408083206001600160a01b03861684529091529020545b92915050565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081526020819052604090205460ff165b919050565b60076020908152600091825260409182902080548351601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018616150201909316929092049182018490048402810184019094528084529091830182828015610b4a5780601f10610b1f57610100808354040283529160200191610b4a565b820191906000526020600020905b815481529060010190602001808311610b2d57829003601f168201915b505050505081565b6000818152600760209081526040918290208054835160026001831615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190921691909104601f81018490048402820184019094528381526060938493919291830182828015610c085780601f10610bdd57610100808354040283529160200191610c08565b820191906000526020600020905b815481529060010190602001808311610beb57829003601f168201915b505060065493945050505060027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001841615020190911604610c4f579050610a94565b805115610d3e576006816040516020018083805460018160011615610100020316600290048015610cb75780601f10610c95576101008083540402835291820191610cb7565b820191906000526020600020905b815481529060010190602001808311610ca3575b5050825160208401908083835b60208310610d0157805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610cc4565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050610a94565b6006610d4984611871565b6040516020018083805460018160011615610100020316600290048015610da75780601f10610d85576101008083540402835291820191610da7565b820191906000526020600020905b815481529060010190602001808311610d93575b5050825160208401908083835b60208310610df157805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610db4565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b7f9667e80708b6eeeb0053fa0cca44e028ff548e2a9f029edfeac87c118b08b7c881565b60009081526005602052604090206002015490565b8151835114610ea75760405162461bcd60e51b81526004018080602001828103825260288152602001806125a16028913960400191505060405180910390fd5b6001600160a01b038416610eec5760405162461bcd60e51b81526004018080602001828103825260258152602001806124ce6025913960400191505060405180910390fd5b610ef461199e565b6001600160a01b0316856001600160a01b03161480610f1f5750610f1f85610f1a61199e565b61163f565b610f5a5760405162461bcd60e51b81526004018080602001828103825260328152602001806124f36032913960400191505060405180910390fd5b6000610f6461199e565b9050610f7481878787878761115d565b60005b8451811015611075576000858281518110610f8e57fe5b602002602001015190506000858381518110610fa657fe5b60200260200101519050611013816040518060600160405280602a8152602001612525602a91396001600086815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020546119a39092919063ffffffff16565b60008381526001602090815260408083206001600160a01b038e811685529252808320939093558a168152205461104a9082611a3a565b60009283526001602081815260408086206001600160a01b038d168752909152909320555001610f77565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156110fb5781810151838201526020016110e3565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561113a578181015183820152602001611122565b5050505090500194505050505060405180910390a461115d818787878787611a94565b505050505050565b6000828152600560205260409020600201546111889061118361199e565b61146c565b6111c35760405162461bcd60e51b815260040180806020018281038252602f8152602001806123ea602f913960400191505060405180910390fd5b6111cd8282611d44565b5050565b6111d961199e565b6001600160a01b0316816001600160a01b0316146112285760405162461bcd60e51b815260040180806020018281038252602f8152602001806125c9602f913960400191505060405180910390fd5b6111cd8282611dad565b606081518351146112745760405162461bcd60e51b81526004018080602001828103825260298152602001806125786029913960400191505060405180910390fd5b6060835167ffffffffffffffff8111801561128e57600080fd5b506040519080825280602002602001820160405280156112b8578160200160208202803683370190505b50905060005b84518110156113a85760006001600160a01b03168582815181106112de57fe5b60200260200101516001600160a01b0316141561132c5760405162461bcd60e51b81526004018080602001828103825260318152602001806124446031913960400191505060405180910390fd5b6001600085838151811061133c57fe5b60200260200101518152602001908152602001600020600086838151811061136057fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061139557fe5b60209081029190910101526001016112be565b509392505050565b6113da7ff6e33f9720e4529cb1c710e3344dc00830589a3239198ffa39b07117085d250e3361146c565b6113e357600080fd5b80516111cd9060069060208401906121f1565b6114207ff6e33f9720e4529cb1c710e3344dc00830589a3239198ffa39b07117085d250e3361146c565b61142957600080fd5b60008181526007602090815260409091208351611448928501906121f1565b505050565b60008281526005602052604081206114659083611e16565b9392505050565b60008281526005602052604081206114659083611e22565b600081565b816001600160a01b031661149b61199e565b6001600160a01b031614156114e15760405162461bcd60e51b815260040180806020018281038252602981526020018061254f6029913960400191505060405180910390fd5b80600360006114ee61199e565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169215159290921790915561155061199e565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b7ff6e33f9720e4529cb1c710e3344dc00830589a3239198ffa39b07117085d250e81565b6000818152600560205260408120610a5890611e37565b6000828152600560205260409020600201546115ef9061118361199e565b6112285760405162461bcd60e51b815260040180806020018281038252603081526020018061249e6030913960400191505060405180910390fd5b60009081526002602052604090205460ff1690565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205460ff1690565b6001600160a01b0384166116b25760405162461bcd60e51b81526004018080602001828103825260258152602001806124ce6025913960400191505060405180910390fd5b6116ba61199e565b6001600160a01b0316856001600160a01b031614806116e057506116e085610f1a61199e565b61171b5760405162461bcd60e51b81526004018080602001828103825260298152602001806124756029913960400191505060405180910390fd5b600061172561199e565b905061174581878761173688611e42565b61173f88611e42565b8761115d565b61178c836040518060600160405280602a8152602001612525602a913960008781526001602090815260408083206001600160a01b038d16845290915290205491906119a3565b60008581526001602090815260408083206001600160a01b038b811685529252808320939093558716815220546117c39084611a3a565b60008581526001602090815260408083206001600160a01b03808b168086529184529382902094909455805188815291820187905280518a8416938616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a461115d818787878787611e86565b7ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc981565b6000611465836001600160a01b038416612028565b6060816118b2575060408051808201909152600181527f30000000000000000000000000000000000000000000000000000000000000006020820152610a94565b8160005b81156118ca57600101600a820491506118b6565b60608167ffffffffffffffff811180156118e357600080fd5b506040519080825280601f01601f19166020018201604052801561190e576020820181803683370190505b5085935090507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82015b831561199557600a840660300160f81b8282806001900393508151811061195b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a84049350611938565b50949350505050565b335b90565b60008184841115611a325760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156119f75781810151838201526020016119df565b50505050905090810190601f168015611a245780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015611465576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b611aa6846001600160a01b0316612072565b1561115d57836001600160a01b031663bc197c8187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015611b34578181015183820152602001611b1c565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015611b73578181015183820152602001611b5b565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015611baf578181015183820152602001611b97565b50505050905090810190601f168015611bdc5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015611c0157600080fd5b505af1925050508015611c2657506040513d6020811015611c2157600080fd5b505160015b611cbb57611c3261228a565b80611c3d5750611c84565b60405162461bcd60e51b81526020600482018181528351602484015283518493919283926044019190850190808383600083156119f75781810151838201526020016119df565b60405162461bcd60e51b815260040180806020018281038252603481526020018061236c6034913960400191505060405180910390fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c810000000000000000000000000000000000000000000000000000000014611d3b5760405162461bcd60e51b81526004018080602001828103825260288152602001806123c26028913960400191505060405180910390fd5b50505050505050565b6000828152600560205260409020611d5c908261185c565b156111cd57611d6961199e565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152600560205260409020611dc59082612078565b156111cd57611dd261199e565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000611465838361208d565b6000611465836001600160a01b0384166120f1565b6000610a5882612109565b604080516001808252818301909252606091829190602080830190803683370190505090508281600081518110611e7557fe5b602090810291909101015292915050565b611e98846001600160a01b0316612072565b1561115d57836001600160a01b031663f23a6e6187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611f27578181015183820152602001611f0f565b50505050905090810190601f168015611f545780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015611f7757600080fd5b505af1925050508015611f9c57506040513d6020811015611f9757600080fd5b505160015b611fa857611c3261228a565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e610000000000000000000000000000000000000000000000000000000014611d3b5760405162461bcd60e51b81526004018080602001828103825260288152602001806123c26028913960400191505060405180910390fd5b600061203483836120f1565b61206a57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a58565b506000610a58565b3b151590565b6000611465836001600160a01b03841661210d565b815460009082106120cf5760405162461bcd60e51b81526004018080602001828103825260228152602001806123a06022913960400191505060405180910390fd5b8260000182815481106120de57fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b600081815260018301602052604081205480156121e75783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808301919081019060009087908390811061215e57fe5b906000526020600020015490508087600001848154811061217b57fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806121ab57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610a58565b6000915050610a58565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061223257805160ff191683800117855561225f565b8280016001018555821561225f579182015b8281111561225f578251825591602001919060010190612244565b5061226b92915061226f565b5090565b5b8082111561226b5760008155600101612270565b60e01c90565b600060443d101561229a576119a0565b600481823e6308c379a06122ae8251612284565b146122b8576119a0565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3d016004823e80513d67ffffffffffffffff816024840111818411171561230657505050506119a0565b8284019250825191508082111561232057505050506119a0565b503d83016020828401011115612338575050506119a0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01681016020016040529150509056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220ed5986194005a18cf590a8a91ec821005d4323fff94abac05a979102297a991c64736f6c63430007030033f0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc9f6e33f9720e4529cb1c710e3344dc00830589a3239198ffa39b07117085d250e",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018c5760003560e01c806367db3b8f116100e3578063ca15c8731161008c578063e985e9c511610066578063e985e9c5146108eb578063f242432a14610919578063fe6d8124146109e45761018c565b8063ca15c87314610885578063d547741f146108a2578063e5b95595146108ce5761018c565b8063a217fddf116100bd578063a217fddf14610847578063a22cb4651461084f578063b1de303e1461087d5761018c565b806367db3b8f146107345780639010d07c146107dc57806391d148541461081b5761018c565b8063248a9ca31161014557806336568abe1161011f57806336568abe146104eb5780634e1273f41461051757806355f804b31461068e5761018c565b8063248a9ca3146102d95780632eb2c2d6146102f65780632f2ff15d146104bf5761018c565b80630bb78ec1116101765780630bb78ec1146102225780630e89341c146102b4578063118c4f13146102d15761018c565b8062fdd58e1461019157806301ffc9a7146101cf575b600080fd5b6101bd600480360360408110156101a757600080fd5b506001600160a01b0381351690602001356109ec565b60408051918252519081900360200190f35b61020e600480360360208110156101e557600080fd5b50357fffffffff0000000000000000000000000000000000000000000000000000000016610a5e565b604080519115158252519081900360200190f35b61023f6004803603602081101561023857600080fd5b5035610a99565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610279578181015183820152602001610261565b50505050905090810190601f1680156102a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61023f600480360360208110156102ca57600080fd5b5035610b52565b6101bd610e2e565b6101bd600480360360208110156102ef57600080fd5b5035610e52565b6104bd600480360360a081101561030c57600080fd5b6001600160a01b03823581169260208101359091169181019060608101604082013564010000000081111561034057600080fd5b82018360208201111561035257600080fd5b8035906020019184602083028401116401000000008311171561037457600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156103c457600080fd5b8201836020820111156103d657600080fd5b803590602001918460208302840111640100000000831117156103f857600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561044857600080fd5b82018360208201111561045a57600080fd5b8035906020019184600183028401116401000000008311171561047c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610e67945050505050565b005b6104bd600480360360408110156104d557600080fd5b50803590602001356001600160a01b0316611165565b6104bd6004803603604081101561050157600080fd5b50803590602001356001600160a01b03166111d1565b61063e6004803603604081101561052d57600080fd5b81019060208101813564010000000081111561054857600080fd5b82018360208201111561055a57600080fd5b8035906020019184602083028401116401000000008311171561057c57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156105cc57600080fd5b8201836020820111156105de57600080fd5b8035906020019184602083028401116401000000008311171561060057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611232945050505050565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561067a578181015183820152602001610662565b505050509050019250505060405180910390f35b6104bd600480360360208110156106a457600080fd5b8101906020810181356401000000008111156106bf57600080fd5b8201836020820111156106d157600080fd5b803590602001918460018302840111640100000000831117156106f357600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506113b0945050505050565b6104bd6004803603604081101561074a57600080fd5b81019060208101813564010000000081111561076557600080fd5b82018360208201111561077757600080fd5b8035906020019184600183028401116401000000008311171561079957600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506113f6915050565b6107ff600480360360408110156107f257600080fd5b508035906020013561144d565b604080516001600160a01b039092168252519081900360200190f35b61020e6004803603604081101561083157600080fd5b50803590602001356001600160a01b031661146c565b6101bd611484565b6104bd6004803603604081101561086557600080fd5b506001600160a01b0381351690602001351515611489565b6101bd611596565b6101bd6004803603602081101561089b57600080fd5b50356115ba565b6104bd600480360360408110156108b857600080fd5b50803590602001356001600160a01b03166115d1565b61020e600480360360208110156108e457600080fd5b503561162a565b61020e6004803603604081101561090157600080fd5b506001600160a01b038135811691602001351661163f565b6104bd600480360360a081101561092f57600080fd5b6001600160a01b03823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561096f57600080fd5b82018360208201111561098157600080fd5b803590602001918460018302840111640100000000831117156109a357600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061166d945050505050565b6101bd611838565b60006001600160a01b038316610a335760405162461bcd60e51b815260040180806020018281038252602b815260200180612419602b913960400191505060405180910390fd5b5060008181526001602090815260408083206001600160a01b03861684529091529020545b92915050565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081526020819052604090205460ff165b919050565b60076020908152600091825260409182902080548351601f60027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff61010060018616150201909316929092049182018490048402810184019094528084529091830182828015610b4a5780601f10610b1f57610100808354040283529160200191610b4a565b820191906000526020600020905b815481529060010190602001808311610b2d57829003601f168201915b505050505081565b6000818152600760209081526040918290208054835160026001831615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190921691909104601f81018490048402820184019094528381526060938493919291830182828015610c085780601f10610bdd57610100808354040283529160200191610c08565b820191906000526020600020905b815481529060010190602001808311610beb57829003601f168201915b505060065493945050505060027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6101006001841615020190911604610c4f579050610a94565b805115610d3e576006816040516020018083805460018160011615610100020316600290048015610cb75780601f10610c95576101008083540402835291820191610cb7565b820191906000526020600020905b815481529060010190602001808311610ca3575b5050825160208401908083835b60208310610d0157805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610cc4565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050610a94565b6006610d4984611871565b6040516020018083805460018160011615610100020316600290048015610da75780601f10610d85576101008083540402835291820191610da7565b820191906000526020600020905b815481529060010190602001808311610d93575b5050825160208401908083835b60208310610df157805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101610db4565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b7f9667e80708b6eeeb0053fa0cca44e028ff548e2a9f029edfeac87c118b08b7c881565b60009081526005602052604090206002015490565b8151835114610ea75760405162461bcd60e51b81526004018080602001828103825260288152602001806125a16028913960400191505060405180910390fd5b6001600160a01b038416610eec5760405162461bcd60e51b81526004018080602001828103825260258152602001806124ce6025913960400191505060405180910390fd5b610ef461199e565b6001600160a01b0316856001600160a01b03161480610f1f5750610f1f85610f1a61199e565b61163f565b610f5a5760405162461bcd60e51b81526004018080602001828103825260328152602001806124f36032913960400191505060405180910390fd5b6000610f6461199e565b9050610f7481878787878761115d565b60005b8451811015611075576000858281518110610f8e57fe5b602002602001015190506000858381518110610fa657fe5b60200260200101519050611013816040518060600160405280602a8152602001612525602a91396001600086815260200190815260200160002060008d6001600160a01b03166001600160a01b03168152602001908152602001600020546119a39092919063ffffffff16565b60008381526001602090815260408083206001600160a01b038e811685529252808320939093558a168152205461104a9082611a3a565b60009283526001602081815260408086206001600160a01b038d168752909152909320555001610f77565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b838110156110fb5781810151838201526020016110e3565b50505050905001838103825284818151815260200191508051906020019060200280838360005b8381101561113a578181015183820152602001611122565b5050505090500194505050505060405180910390a461115d818787878787611a94565b505050505050565b6000828152600560205260409020600201546111889061118361199e565b61146c565b6111c35760405162461bcd60e51b815260040180806020018281038252602f8152602001806123ea602f913960400191505060405180910390fd5b6111cd8282611d44565b5050565b6111d961199e565b6001600160a01b0316816001600160a01b0316146112285760405162461bcd60e51b815260040180806020018281038252602f8152602001806125c9602f913960400191505060405180910390fd5b6111cd8282611dad565b606081518351146112745760405162461bcd60e51b81526004018080602001828103825260298152602001806125786029913960400191505060405180910390fd5b6060835167ffffffffffffffff8111801561128e57600080fd5b506040519080825280602002602001820160405280156112b8578160200160208202803683370190505b50905060005b84518110156113a85760006001600160a01b03168582815181106112de57fe5b60200260200101516001600160a01b0316141561132c5760405162461bcd60e51b81526004018080602001828103825260318152602001806124446031913960400191505060405180910390fd5b6001600085838151811061133c57fe5b60200260200101518152602001908152602001600020600086838151811061136057fe5b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000205482828151811061139557fe5b60209081029190910101526001016112be565b509392505050565b6113da7ff6e33f9720e4529cb1c710e3344dc00830589a3239198ffa39b07117085d250e3361146c565b6113e357600080fd5b80516111cd9060069060208401906121f1565b6114207ff6e33f9720e4529cb1c710e3344dc00830589a3239198ffa39b07117085d250e3361146c565b61142957600080fd5b60008181526007602090815260409091208351611448928501906121f1565b505050565b60008281526005602052604081206114659083611e16565b9392505050565b60008281526005602052604081206114659083611e22565b600081565b816001600160a01b031661149b61199e565b6001600160a01b031614156114e15760405162461bcd60e51b815260040180806020018281038252602981526020018061254f6029913960400191505060405180910390fd5b80600360006114ee61199e565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169215159290921790915561155061199e565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b7ff6e33f9720e4529cb1c710e3344dc00830589a3239198ffa39b07117085d250e81565b6000818152600560205260408120610a5890611e37565b6000828152600560205260409020600201546115ef9061118361199e565b6112285760405162461bcd60e51b815260040180806020018281038252603081526020018061249e6030913960400191505060405180910390fd5b60009081526002602052604090205460ff1690565b6001600160a01b03918216600090815260036020908152604080832093909416825291909152205460ff1690565b6001600160a01b0384166116b25760405162461bcd60e51b81526004018080602001828103825260258152602001806124ce6025913960400191505060405180910390fd5b6116ba61199e565b6001600160a01b0316856001600160a01b031614806116e057506116e085610f1a61199e565b61171b5760405162461bcd60e51b81526004018080602001828103825260298152602001806124756029913960400191505060405180910390fd5b600061172561199e565b905061174581878761173688611e42565b61173f88611e42565b8761115d565b61178c836040518060600160405280602a8152602001612525602a913960008781526001602090815260408083206001600160a01b038d16845290915290205491906119a3565b60008581526001602090815260408083206001600160a01b038b811685529252808320939093558716815220546117c39084611a3a565b60008581526001602090815260408083206001600160a01b03808b168086529184529382902094909455805188815291820187905280518a8416938616927fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6292908290030190a461115d818787878787611e86565b7ff0887ba65ee2024ea881d91b74c2450ef19e1557f03bed3ea9f16b037cbe2dc981565b6000611465836001600160a01b038416612028565b6060816118b2575060408051808201909152600181527f30000000000000000000000000000000000000000000000000000000000000006020820152610a94565b8160005b81156118ca57600101600a820491506118b6565b60608167ffffffffffffffff811180156118e357600080fd5b506040519080825280601f01601f19166020018201604052801561190e576020820181803683370190505b5085935090507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82015b831561199557600a840660300160f81b8282806001900393508151811061195b57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a84049350611938565b50949350505050565b335b90565b60008184841115611a325760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156119f75781810151838201526020016119df565b50505050905090810190601f168015611a245780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015611465576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b611aa6846001600160a01b0316612072565b1561115d57836001600160a01b031663bc197c8187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b03168152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b83811015611b34578181015183820152602001611b1c565b50505050905001848103835286818151815260200191508051906020019060200280838360005b83811015611b73578181015183820152602001611b5b565b50505050905001848103825285818151815260200191508051906020019080838360005b83811015611baf578181015183820152602001611b97565b50505050905090810190601f168015611bdc5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015611c0157600080fd5b505af1925050508015611c2657506040513d6020811015611c2157600080fd5b505160015b611cbb57611c3261228a565b80611c3d5750611c84565b60405162461bcd60e51b81526020600482018181528351602484015283518493919283926044019190850190808383600083156119f75781810151838201526020016119df565b60405162461bcd60e51b815260040180806020018281038252603481526020018061236c6034913960400191505060405180910390fd5b7fffffffff0000000000000000000000000000000000000000000000000000000081167fbc197c810000000000000000000000000000000000000000000000000000000014611d3b5760405162461bcd60e51b81526004018080602001828103825260288152602001806123c26028913960400191505060405180910390fd5b50505050505050565b6000828152600560205260409020611d5c908261185c565b156111cd57611d6961199e565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152600560205260409020611dc59082612078565b156111cd57611dd261199e565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000611465838361208d565b6000611465836001600160a01b0384166120f1565b6000610a5882612109565b604080516001808252818301909252606091829190602080830190803683370190505090508281600081518110611e7557fe5b602090810291909101015292915050565b611e98846001600160a01b0316612072565b1561115d57836001600160a01b031663f23a6e6187878686866040518663ffffffff1660e01b815260040180866001600160a01b03168152602001856001600160a01b0316815260200184815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611f27578181015183820152602001611f0f565b50505050905090810190601f168015611f545780820380516001836020036101000a031916815260200191505b509650505050505050602060405180830381600087803b158015611f7757600080fd5b505af1925050508015611f9c57506040513d6020811015611f9757600080fd5b505160015b611fa857611c3261228a565b7fffffffff0000000000000000000000000000000000000000000000000000000081167ff23a6e610000000000000000000000000000000000000000000000000000000014611d3b5760405162461bcd60e51b81526004018080602001828103825260288152602001806123c26028913960400191505060405180910390fd5b600061203483836120f1565b61206a57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a58565b506000610a58565b3b151590565b6000611465836001600160a01b03841661210d565b815460009082106120cf5760405162461bcd60e51b81526004018080602001828103825260228152602001806123a06022913960400191505060405180910390fd5b8260000182815481106120de57fe5b9060005260206000200154905092915050565b60009081526001919091016020526040902054151590565b5490565b600081815260018301602052604081205480156121e75783547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808301919081019060009087908390811061215e57fe5b906000526020600020015490508087600001848154811061217b57fe5b6000918252602080832090910192909255828152600189810190925260409020908401905586548790806121ab57fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610a58565b6000915050610a58565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061223257805160ff191683800117855561225f565b8280016001018555821561225f579182015b8281111561225f578251825591602001919060010190612244565b5061226b92915061226f565b5090565b5b8082111561226b5760008155600101612270565b60e01c90565b600060443d101561229a576119a0565b600481823e6308c379a06122ae8251612284565b146122b8576119a0565b6040517ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3d016004823e80513d67ffffffffffffffff816024840111818411171561230657505050506119a0565b8284019250825191508082111561232057505050506119a0565b503d83016020828401011115612338575050506119a0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01681016020016040529150509056fe455243313135353a207472616e7366657220746f206e6f6e2045524331313535526563656976657220696d706c656d656e746572456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74455243313135353a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2062617463682062616c616e636520717565727920666f7220746865207a65726f2061646472657373455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373455243313135353a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220ed5986194005a18cf590a8a91ec821005d4323fff94abac05a979102297a991c64736f6c63430007030033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:992:148",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:148",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "71:31:148",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:27:148",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "89:3:148",
                        "type": "",
                        "value": "224"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "94:5:148"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "85:3:148"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "85:15:148"
                  },
                  "variableNames": [
                    {
                      "name": "newValue",
                      "nodeType": "YulIdentifier",
                      "src": "73:8:148"
                    }
                  ]
                }
              ]
            },
            "name": "shift_right_224_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "48:5:148",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "newValue",
                "nodeType": "YulTypedName",
                "src": "58:8:148",
                "type": ""
              }
            ],
            "src": "14:88:148"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "154:836:148",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "194:9:148",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "196:5:148"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [],
                        "functionName": {
                          "name": "returndatasize",
                          "nodeType": "YulIdentifier",
                          "src": "170:14:148"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "170:16:148"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "188:4:148",
                        "type": "",
                        "value": "0x44"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "167:2:148"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "167:26:148"
                  },
                  "nodeType": "YulIf",
                  "src": "164:2:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "ret",
                        "nodeType": "YulIdentifier",
                        "src": "227:3:148"
                      },
                      {
                        "name": "ret",
                        "nodeType": "YulIdentifier",
                        "src": "232:3:148"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "237:1:148",
                        "type": "",
                        "value": "4"
                      }
                    ],
                    "functionName": {
                      "name": "returndatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "212:14:148"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "212:27:148"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "212:27:148"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "312:9:148",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "314:5:148"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "ret",
                                    "nodeType": "YulIdentifier",
                                    "src": "292:3:148"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "286:5:148"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "286:10:148"
                              }
                            ],
                            "functionName": {
                              "name": "shift_right_224_unsigned",
                              "nodeType": "YulIdentifier",
                              "src": "261:24:148"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "261:36:148"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "299:10:148",
                            "type": "",
                            "value": "0x08c379a0"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "258:2:148"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "258:52:148"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "251:6:148"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "251:60:148"
                  },
                  "nodeType": "YulIf",
                  "src": "248:2:148"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "330:21:148",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "348:2:148",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "342:5:148"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "342:9:148"
                  },
                  "variables": [
                    {
                      "name": "data",
                      "nodeType": "YulTypedName",
                      "src": "334:4:148",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "375:4:148"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "381:1:148",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "388:14:148"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "388:16:148"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "406:66:148",
                            "type": "",
                            "value": "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "384:3:148"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "384:89:148"
                      }
                    ],
                    "functionName": {
                      "name": "returndatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "360:14:148"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "360:114:148"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "360:114:148"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "483:25:148",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "503:4:148"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "497:5:148"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "497:11:148"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "487:6:148",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "517:26:148",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "returndatasize",
                      "nodeType": "YulIdentifier",
                      "src": "527:14:148"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:16:148"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "521:2:148",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "552:28:148",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "562:18:148",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "556:2:148",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "638:9:148",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "640:5:148"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "598:6:148"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "606:2:148"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "595:2:148"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "595:14:148"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "618:6:148"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "626:4:148",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "614:3:148"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "614:17:148"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "633:2:148"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "611:2:148"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "611:25:148"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "592:2:148"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "592:45:148"
                  },
                  "nodeType": "YulIf",
                  "src": "589:2:148"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "656:28:148",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "671:4:148"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "677:6:148"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "667:3:148"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "667:17:148"
                  },
                  "variables": [
                    {
                      "name": "msg",
                      "nodeType": "YulTypedName",
                      "src": "660:3:148",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "693:24:148",
                  "value": {
                    "arguments": [
                      {
                        "name": "msg",
                        "nodeType": "YulIdentifier",
                        "src": "713:3:148"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "707:5:148"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "707:10:148"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "697:6:148",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "744:9:148",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "746:5:148"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "732:6:148"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "740:2:148"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "729:2:148"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "729:14:148"
                  },
                  "nodeType": "YulIf",
                  "src": "726:2:148"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "826:9:148",
                    "statements": [
                      {
                        "nodeType": "YulLeave",
                        "src": "828:5:148"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "msg",
                                "nodeType": "YulIdentifier",
                                "src": "776:3:148"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "781:6:148"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "772:3:148"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "772:16:148"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "790:4:148",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "768:3:148"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "768:27:148"
                      },
                      {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "801:4:148"
                          },
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "returndatasize",
                              "nodeType": "YulIdentifier",
                              "src": "807:14:148"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "807:16:148"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "797:3:148"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "797:27:148"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "765:2:148"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "765:60:148"
                  },
                  "nodeType": "YulIf",
                  "src": "762:2:148"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "851:2:148",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "msg",
                                "nodeType": "YulIdentifier",
                                "src": "863:3:148"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "876:6:148"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "884:2:148",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "872:3:148"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "872:15:148"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "889:66:148",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "868:3:148"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "868:88:148"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "859:3:148"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "859:98:148"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "959:4:148",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "855:3:148"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "855:109:148"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "844:6:148"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "844:121:148"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "844:121:148"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "974:10:148",
                  "value": {
                    "name": "msg",
                    "nodeType": "YulIdentifier",
                    "src": "981:3:148"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "974:3:148"
                    }
                  ]
                }
              ]
            },
            "name": "try_decode_error_message",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "146:3:148",
                "type": ""
              }
            ],
            "src": "107:883:148"
          }
        ]
      },
      "contents": "{\n    { }\n    function shift_right_224_unsigned(value) -> newValue\n    { newValue := shr(224, value) }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        returndatacopy(ret, ret, 4)\n        if iszero(eq(shift_right_224_unsigned(mload(ret)), 0x08c379a0)) { leave }\n        let data := mload(64)\n        returndatacopy(data, 4, add(returndatasize(), 0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc))\n        let offset := mload(data)\n        let _1 := returndatasize()\n        let _2 := 0xffffffffffffffff\n        if or(gt(offset, _2), gt(add(offset, 0x24), _1)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _2) { leave }\n        if gt(add(add(msg, length), 0x20), add(data, returndatasize())) { leave }\n        mstore(64, add(add(msg, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20))\n        ret := msg\n    }\n}",
      "id": 148,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "312:1182:2:-:0;;;410:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;410:132:2;;;;;;;;;;-1:-1:-1;410:132:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;410:132:2;;-1:-1:-1;759:40:95;;-1:-1:-1;;;;778:20:95;-1:-1:-1;759:18:95;:40::i;:::-;2127:41:113;-1:-1:-1;;;2127:18:113;:41::i;:::-;2268:54;-1:-1:-1;;;2268:18:113;:54::i;:::-;610:44:0;1770:4:19;641:12:0;:10;:12::i;:::-;610:10;:44::i;:::-;665:40;-1:-1:-1;;;;;;;;;;;692:12:0;:10;:12::i;665:40::-;716:32;-1:-1:-1;;;;;;;;;;;735:12:0;:10;:12::i;716:32::-;759:41;1770:4:19;-1:-1:-1;;;;;;;;;;;759:13:0;:41::i;:::-;811:49;1770:4:19;-1:-1:-1;;;;;;;;;;;811:13:0;:49::i;:::-;462:14:2;;::::1;::::0;:8:::1;::::0;:14:::1;::::0;::::1;::::0;::::1;:::i;:::-;;410:132:::0;312:1182;;1490:198:95;-1:-1:-1;;;;;;1573:25:95;;;;;1565:66;;;;;-1:-1:-1;;;1565:66:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1641:33:95;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1641:40:95;1677:4;1641:40;;;1490:198::o;598:104:13:-;685:10;598:104;:::o;6586:110:19:-;6664:25;6675:4;6681:7;6664:10;:25::i;:::-;6586:110;;:::o;6821:196::-;6932:12;;;;:6;:12;;;;;;:22;;;6909:57;;6956:9;;6939:4;;6909:57;;6932:12;6909:57;6976:12;;;;:6;:12;;;;;;:22;;:34;6821:196::o;7023:184::-;7096:12;;;;:6;:12;;;;;;;;:33;;7121:7;;7096:24;;;;;:33;;:::i;:::-;7092:109;;;7177:12;:10;:12::i;:::-;-1:-1:-1;;;;;7150:40:19;7168:7;-1:-1:-1;;;;;7150:40:19;7162:4;7150:40;;;;;;;;;;7023:184;;:::o;6429:141:143:-;6499:4;6522:41;6527:3;-1:-1:-1;;;;;6547:14:143;;6522:4;:41::i;:::-;6515:48;;6429:141;;;;;:::o;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:143;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:143;2015:12;;3805:127;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;312:1182:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;312:1182:2;;;-1:-1:-1;312:1182:2;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "312:1182:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2868:220:113;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2868:220:113;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;956:140:95;;;;;;;;;;;;;;;;-1:-1:-1;956:140:95;;;;:::i;:::-;;;;;;;;;;;;;;;;;;550:44:2;;;;;;;;;;;;;;;;-1:-1:-1;550:44:2;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;839:652;;;;;;;;;;;;;;;;-1:-1:-1;839:652:2;;:::i;304:52:0:-;;;:::i;4280:112:19:-;;;;;;;;;;;;;;;;-1:-1:-1;4280:112:19;;:::i;5587:1184:113:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5587:1184:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5587:1184:113;;;;;;;;-1:-1:-1;5587:1184:113;;-1:-1:-1;;5587:1184:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5587:1184:113;;;;;;;;-1:-1:-1;5587:1184:113;;-1:-1:-1;;5587:1184:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5587:1184:113;;-1:-1:-1;5587:1184:113;;-1:-1:-1;;;;;5587:1184:113:i;:::-;;4642:223:19;;;;;;;;;;;;;;;;-1:-1:-1;4642:223:19;;;;;;-1:-1:-1;;;;;4642:223:19;;:::i;5816:205::-;;;;;;;;;;;;;;;;-1:-1:-1;5816:205:19;;;;;;-1:-1:-1;;;;;5816:205:19;;:::i;3337:615:113:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3337:615:113;;;;;;;;-1:-1:-1;3337:615:113;;-1:-1:-1;;3337:615:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3337:615:113;;-1:-1:-1;3337:615:113;;-1:-1:-1;;;;;3337:615:113:i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;728:103:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;728:103:2;;-1:-1:-1;728:103:2;;-1:-1:-1;;;;;728:103:2:i;603:117::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;603:117:2;;-1:-1:-1;;603:117:2;;;-1:-1:-1;603:117:2;;-1:-1:-1;;603:117:2:i;3963:136:19:-;;;;;;;;;;;;;;;;-1:-1:-1;3963:136:19;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;3963:136:19;;;;;;;;;;;;;;2948:137;;;;;;;;;;;;;;;;-1:-1:-1;2948:137:19;;;;;;-1:-1:-1;;;;;2948:137:19;;:::i;1725:49::-;;;:::i;4020:306:113:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4020:306:113;;;;;;;;;;:::i;170:68:0:-;;;:::i;3253:125:19:-;;;;;;;;;;;;;;;;-1:-1:-1;3253:125:19;;:::i;5099:226::-;;;;;;;;;;;;;;;;-1:-1:-1;5099:226:19;;;;;;-1:-1:-1;;;;;5099:226:19;;:::i;3093:88:113:-;;;;;;;;;;;;;;;;-1:-1:-1;3093:88:113;;:::i;4393:158::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4393:158:113;;;;;;;;;;:::i;4618:897::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4618:897:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4618:897:113;;-1:-1:-1;4618:897:113;;-1:-1:-1;;;;;4618:897:113:i;245:52:0:-;;;:::i;2868:220:113:-;2946:7;-1:-1:-1;;;;;2973:21:113;;2965:77;;;;-1:-1:-1;;;2965:77:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3059:13:113;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;3059:22:113;;;;;;;;;;2868:220;;;;;:::o;956:140:95:-;1056:33;;;1033:4;1056:33;;;;;;;;;;;;;956:140;;;;:::o;550:44:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;839:652::-;942:19;;;;:10;:19;;;;;;;;;916:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;890:13;;;;916:45;;942:19;916:45;;942:19;916:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1043:8:2;1037:22;916:45;;-1:-1:-1;;;;1037:22:2;;;;;;;;;;;;;1033:76;;1088:9;-1:-1:-1;1081:16:2;;1033:76;1213:23;;:27;1209:112;;1288:8;1298:9;1271:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1271:37:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1257:52;;;;;1209:112;1453:8;1463:18;:7;:16;:18::i;:::-;1436:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1436:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1422:61;;;839:652;;;:::o;304:52:0:-;337:19;304:52;:::o;4280:112:19:-;4337:7;4363:12;;;:6;:12;;;;;:22;;;;4280:112::o;5587:1184:113:-;5841:7;:14;5827:3;:10;:28;5819:81;;;;-1:-1:-1;;;5819:81:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5918:16:113;;5910:66;;;;-1:-1:-1;;;5910:66:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6015:12;:10;:12::i;:::-;-1:-1:-1;;;;;6007:20:113;:4;-1:-1:-1;;;;;6007:20:113;;:60;;;;6031:36;6048:4;6054:12;:10;:12::i;:::-;6031:16;:36::i;:::-;5986:157;;;;-1:-1:-1;;;5986:157:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6154:16;6173:12;:10;:12::i;:::-;6154:31;;6196:60;6217:8;6227:4;6233:2;6237:3;6242:7;6251:4;6196:20;:60::i;:::-;6272:9;6267:349;6291:3;:10;6287:1;:14;6267:349;;;6322:10;6335:3;6339:1;6335:6;;;;;;;;;;;;;;6322:19;;6355:14;6372:7;6380:1;6372:10;;;;;;;;;;;;;;6355:27;;6419:123;6460:6;6419:123;;;;;;;;;;;;;;;;;:9;:13;6429:2;6419:13;;;;;;;;;;;:19;6433:4;-1:-1:-1;;;;;6419:19:113;-1:-1:-1;;;;;6419:19:113;;;;;;;;;;;;;:23;;:123;;;;;:::i;:::-;6397:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6397:19:113;;;;;;;;;;:145;;;;6576:17;;;;;;:29;;6598:6;6576:21;:29::i;:::-;6556:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;6556:17:113;;;;;;;;;;:49;-1:-1:-1;6303:3:113;6267:349;;;;6661:2;-1:-1:-1;;;;;6631:47:113;6655:4;-1:-1:-1;;;;;6631:47:113;6645:8;-1:-1:-1;;;;;6631:47:113;;6665:3;6670:7;6631:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6689:75;6725:8;6735:4;6741:2;6745:3;6750:7;6759:4;6689:35;:75::i;:::-;5587:1184;;;;;;:::o;4642:223:19:-;4733:12;;;;:6;:12;;;;;:22;;;4725:45;;4757:12;:10;:12::i;:::-;4725:7;:45::i;:::-;4717:105;;;;-1:-1:-1;;;4717:105:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4833:25;4844:4;4850:7;4833:10;:25::i;:::-;4642:223;;:::o;5816:205::-;5913:12;:10;:12::i;:::-;-1:-1:-1;;;;;5902:23:19;:7;-1:-1:-1;;;;;5902:23:19;;5894:83;;;;-1:-1:-1;;;5894:83:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5988:26;6000:4;6006:7;5988:11;:26::i;3337:615:113:-;3494:16;3553:3;:10;3534:8;:15;:29;3526:83;;;;-1:-1:-1;;;3526:83:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3620:30;3667:8;:15;3653:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3653:30:113;;3620:63;;3699:9;3694:221;3718:8;:15;3714:1;:19;3694:221;;;3785:1;-1:-1:-1;;;;;3762:25:113;:8;3771:1;3762:11;;;;;;;;;;;;;;-1:-1:-1;;;;;3762:25:113;;;3754:87;;;;-1:-1:-1;;;3754:87:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3874:9;:17;3884:3;3888:1;3884:6;;;;;;;;;;;;;;3874:17;;;;;;;;;;;:30;3892:8;3901:1;3892:11;;;;;;;;;;;;;;-1:-1:-1;;;;;3874:30:113;-1:-1:-1;;;;;3874:30:113;;;;;;;;;;;;;3855:13;3869:1;3855:16;;;;;;;;;;;;;;;;;:49;3735:3;;3694:221;;;-1:-1:-1;3932:13:113;3337:615;-1:-1:-1;;;3337:615:113:o;728:103:2:-;411:35:0;211:27;435:10;411:7;:35::i;:::-;403:44;;;;;;806:17:2;;::::1;::::0;:8:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;603:117::-:0;411:35:0;211:27;435:10;411:7;:35::i;:::-;403:44;;;;;;689:14:2::1;::::0;;;:10:::1;:14;::::0;;;;;;;:23;;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;;603:117:::0;;:::o;3963:136:19:-;4036:7;4062:12;;;:6;:12;;;;;:30;;4086:5;4062:23;:30::i;:::-;4055:37;3963:136;-1:-1:-1;;;3963:136:19:o;2948:137::-;3017:4;3040:12;;;:6;:12;;;;;:38;;3070:7;3040:29;:38::i;1725:49::-;1770:4;1725:49;:::o;4020:306:113:-;4138:8;-1:-1:-1;;;;;4122:24:113;:12;:10;:12::i;:::-;-1:-1:-1;;;;;4122:24:113;;;4114:78;;;;-1:-1:-1;;;4114:78:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4248:8;4203:18;:32;4222:12;:10;:12::i;:::-;-1:-1:-1;;;;;4203:32:113;;;;;;;;;;;;;;;;;-1:-1:-1;4203:32:113;;;:42;;;;;;;;;;;;:53;;;;;;;;;;;;;;4286:12;:10;:12::i;:::-;-1:-1:-1;;;;;4271:48:113;;4310:8;4271:48;;;;;;;;;;;;;;;;;;;;4020:306;;:::o;170:68:0:-;211:27;170:68;:::o;3253:125:19:-;3316:7;3342:12;;;:6;:12;;;;;:29;;:27;:29::i;5099:226::-;5191:12;;;;:6;:12;;;;;:22;;;5183:45;;5215:12;:10;:12::i;5183:45::-;5175:106;;;;-1:-1:-1;;;5175:106:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3093:88:113;3141:4;3163:11;;;:7;:11;;;;;;;;;3093:88::o;4393:158::-;-1:-1:-1;;;;;4507:27:113;;;4484:4;4507:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;4393:158::o;4618:897::-;-1:-1:-1;;;;;4833:16:113;;4825:66;;;;-1:-1:-1;;;4825:66:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4930:12;:10;:12::i;:::-;-1:-1:-1;;;;;4922:20:113;:4;-1:-1:-1;;;;;4922:20:113;;:60;;;;4946:36;4963:4;4969:12;:10;:12::i;4946:36::-;4901:148;;;;-1:-1:-1;;;4901:148:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5060:16;5079:12;:10;:12::i;:::-;5060:31;;5102:96;5123:8;5133:4;5139:2;5143:21;5161:2;5143:17;:21::i;:::-;5166:25;5184:6;5166:17;:25::i;:::-;5193:4;5102:20;:96::i;:::-;5231:77;5255:6;5231:77;;;;;;;;;;;;;;;;;:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5231:19:113;;;;;;;;;;;:77;:23;:77::i;:::-;5209:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5209:19:113;;;;;;;;;;:99;;;;5338:17;;;;;;:29;;5360:6;5338:21;:29::i;:::-;5318:13;;;;:9;:13;;;;;;;;-1:-1:-1;;;;;5318:17:113;;;;;;;;;;;;;:49;;;;5383:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5440:68;5471:8;5481:4;5487:2;5491;5495:6;5503:4;5440:30;:68::i;245:52:0:-;278:19;245:52;:::o;6429:141:143:-;6499:4;6522:41;6527:3;-1:-1:-1;;;;;6547:14:143;;6522:4;:41::i;210:723:145:-;266:13;483:10;479:51;;-1:-1:-1;509:10:145;;;;;;;;;;;;;;;;;;;479:51;554:5;539:12;593:75;600:9;;593:75;;625:8;;655:2;647:10;;;;593:75;;;677:19;709:6;699:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;699:17:145;-1:-1:-1;769:5:145;;-1:-1:-1;677:39:145;-1:-1:-1;742:10:145;;;784:112;791:9;;784:112;;857:2;850:4;:9;845:2;:14;834:27;;816:6;823:7;;;;;;;816:15;;;;;;;;;;;:45;;;;;;;;;;-1:-1:-1;883:2:145;875:10;;;;784:112;;;-1:-1:-1;919:6:145;210:723;-1:-1:-1;;;;210:723:145:o;598:104:13:-;685:10;598:104;;:::o;1754:187:99:-;1840:7;1875:12;1867:6;;;;1859:29;;;;-1:-1:-1;;;1859:29:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1910:5:99;;;1754:187::o;882:176::-;940:7;971:5;;;994:6;;;;986:46;;;;;-1:-1:-1;;;986:46:99;;;;;;;;;;;;;;;;;;;;;;;;;;;13490:778:113;13734:15;:2;-1:-1:-1;;;;;13734:13:113;;:15::i;:::-;13730:532;;;13786:2;-1:-1:-1;;;;;13769:43:113;;13813:8;13823:4;13829:3;13834:7;13843:4;13769:79;;;;;;;;;;;;;-1:-1:-1;;;;;13769:79:113;;;;;;-1:-1:-1;;;;;13769:79:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13769:79:113;;;13765:487;;;;:::i;:::-;;;;;;;;14121:14;;-1:-1:-1;;;14121:14:113;;;;;;;;;;;;;;;;;14128:6;;14121:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13765:487;14175:62;;-1:-1:-1;;;14175:62:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13765:487;13897:64;;;13909:52;13897:64;13893:161;;13985:50;;-1:-1:-1;;;13985:50:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13893:161;13849:219;13490:778;;;;;;:::o;7023:184:19:-;7096:12;;;;:6;:12;;;;;:33;;7121:7;7096:24;:33::i;:::-;7092:109;;;7177:12;:10;:12::i;:::-;-1:-1:-1;;;;;7150:40:19;7168:7;-1:-1:-1;;;;;7150:40:19;7162:4;7150:40;;;;;;;;;;7023:184;;:::o;7213:188::-;7287:12;;;;:6;:12;;;;;:36;;7315:7;7287:27;:36::i;:::-;7283:112;;;7371:12;:10;:12::i;:::-;-1:-1:-1;;;;;7344:40:19;7362:7;-1:-1:-1;;;;;7344:40:19;7356:4;7344:40;;;;;;;;;;7213:188;;:::o;7650:147:143:-;7724:7;7766:22;7770:3;7782:5;7766:3;:22::i;6966:156::-;7046:4;7069:46;7079:3;-1:-1:-1;;;;;7099:14:143;;7069:9;:46::i;7203:115::-;7266:7;7292:19;7300:3;7292:7;:19::i;14274:193:113:-;14393:16;;;14407:1;14393:16;;;;;;;;;14340;;;;14393;;;;;;;;;;;;-1:-1:-1;14393:16:113;14368:41;;14430:7;14419:5;14425:1;14419:8;;;;;;;;;;;;;;;;;:18;14455:5;14274:193;-1:-1:-1;;14274:193:113:o;12743:741::-;12962:15;:2;-1:-1:-1;;;;;12962:13:113;;:15::i;:::-;12958:520;;;13014:2;-1:-1:-1;;;;;12997:38:113;;13036:8;13046:4;13052:2;13056:6;13064:4;12997:72;;;;;;;;;;;;;-1:-1:-1;;;;;12997:72:113;;;;;;-1:-1:-1;;;;;12997:72:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12997:72:113;;;12993:475;;;;:::i;:::-;13118:59;;;13130:47;13118:59;13114:156;;13201:50;;-1:-1:-1;;;13201:50:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1640:404:143;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:143;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:143;2015:12;;726:413:139;1086:20;1124:8;;;726:413::o;6738:147:143:-;6811:4;6834:44;6842:3;-1:-1:-1;;;;;6862:14:143;;6834:7;:44::i;4452:201::-;4546:18;;4519:7;;4546:26;-1:-1:-1;4538:73:143;;;;-1:-1:-1;;;4538:73:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;3805:127::-;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;4013:107::-;4095:18;;4013:107::o;2212:1512::-;2278:4;2415:19;;;:12;;;:19;;;;;;2449:15;;2445:1273;;2878:18;;2830:14;;;;;2878:22;;;;2806:21;;2878:3;;:22;;3160;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;;;;;:38;;;;3378:23;;;3420:1;3378:12;;;:23;;;;;;3404:17;;;3378:43;;3527:17;;3378:3;;3527:17;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:88:148;89:3;85:15;;71:31::o;107:883::-;;188:4;170:16;167:26;164:2;;;196:5;;164:2;237:1;232:3;227;212:27;299:10;261:36;292:3;286:10;261:36;:::i;:::-;258:52;248:2;;314:5;;248:2;348;342:9;406:66;388:16;384:89;381:1;375:4;360:114;503:4;497:11;527:16;562:18;633:2;626:4;618:6;614:17;611:25;606:2;598:6;595:14;592:45;589:2;;;640:5;;;;;;589:2;677:6;671:4;667:17;656:28;;713:3;707:10;693:24;;740:2;732:6;729:14;726:2;;;746:5;;;;;;726:2;;807:16;801:4;797:27;790:4;781:6;776:3;772:16;768:27;765:60;762:2;;;828:5;;;;;762:2;884;872:15;889:66;868:88;859:98;;959:4;855:109;851:2;844:121;863:3;-1:-1:-1;;154:836:148;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\nimport \"./openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\r\nimport \"./openzeppelin/contracts/utils/Strings.sol\";\r\nimport \"./Admin.sol\";\r\n\r\n/**\r\n * @title ERC1155Mock\r\n * This mock just publicizes internal functions for testing purposes\r\n */\r\ncontract NFTbase is ERC1155, Admin {\r\n    string _baseURI;\r\n    using Strings for uint256;\r\n\r\n    constructor(string memory uri) ERC1155() {\r\n        _baseURI = uri;\r\n        // solhint-disable-previous-line no-empty-blocks\r\n    }\r\n\r\n    mapping(uint256 => string) public _tokenURIs;\r\n\r\n    function setURI(string memory newuri, uint256 id) public isMetadataAdmin() {\r\n        _tokenURIs[id] = newuri;\r\n    }\r\n\r\n    function setBaseURI(string memory newuri) public isMetadataAdmin() {\r\n        _baseURI = newuri;\r\n    }\r\n\r\n    function uri(uint256 tokenid) public view returns (string memory) {\r\n        string memory _tokenURI = _tokenURIs[tokenid];\r\n\r\n        // If there is no base URI, return the token URI.\r\n        if (bytes(_baseURI).length == 0) {\r\n            return _tokenURI;\r\n        }\r\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\r\n        if (bytes(_tokenURI).length > 0) {\r\n            return string(abi.encodePacked(_baseURI, _tokenURI));\r\n        }\r\n        // If there is a baseURI but no tokenURI, concatenate the tokenID to the baseURI.\r\n        return string(abi.encodePacked(_baseURI, tokenid.toString()));\r\n    }\r\n}\r\n",
  "sourcePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/NFTbase.sol",
  "ast": {
    "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/NFTbase.sol",
    "exportedSymbols": {
      "AccessControl": [
        3618
      ],
      "Address": [
        12295
      ],
      "Admin": [
        76
      ],
      "Context": [
        2171
      ],
      "ERC1155": [
        7846
      ],
      "ERC165": [
        4778
      ],
      "EnumerableSet": [
        13365
      ],
      "IERC1155": [
        8085
      ],
      "IERC1155MetadataURI": [
        8100
      ],
      "IERC1155Receiver": [
        8141
      ],
      "IERC165": [
        4790
      ],
      "NFTbase": [
        393
      ],
      "SafeMath": [
        5149
      ],
      "Strings": [
        13542
      ]
    },
    "id": 394,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 281,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:2"
      },
      {
        "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC1155/ERC1155.sol",
        "file": "./openzeppelin/contracts/token/ERC1155/ERC1155.sol",
        "id": 282,
        "nodeType": "ImportDirective",
        "scope": 394,
        "sourceUnit": 7847,
        "src": "68:60:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/utils/Strings.sol",
        "file": "./openzeppelin/contracts/utils/Strings.sol",
        "id": 283,
        "nodeType": "ImportDirective",
        "scope": 394,
        "sourceUnit": 13543,
        "src": "130:52:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/Admin.sol",
        "file": "./Admin.sol",
        "id": 284,
        "nodeType": "ImportDirective",
        "scope": 394,
        "sourceUnit": 77,
        "src": "184:21:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 286,
              "name": "ERC1155",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7846,
              "src": "332:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1155_$7846",
                "typeString": "contract ERC1155"
              }
            },
            "id": 287,
            "nodeType": "InheritanceSpecifier",
            "src": "332:7:2"
          },
          {
            "baseName": {
              "id": 288,
              "name": "Admin",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 76,
              "src": "341:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Admin_$76",
                "typeString": "contract Admin"
              }
            },
            "id": 289,
            "nodeType": "InheritanceSpecifier",
            "src": "341:5:2"
          }
        ],
        "contractDependencies": [
          76,
          2171,
          3618,
          4778,
          4790,
          7846,
          8085
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 285,
          "nodeType": "StructuredDocumentation",
          "src": "209:101:2",
          "text": " @title ERC1155Mock\n This mock just publicizes internal functions for testing purposes"
        },
        "fullyImplemented": true,
        "id": 393,
        "linearizedBaseContracts": [
          393,
          76,
          3618,
          7846,
          8085,
          4778,
          4790,
          2171
        ],
        "name": "NFTbase",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 291,
            "mutability": "mutable",
            "name": "_baseURI",
            "nodeType": "VariableDeclaration",
            "scope": 393,
            "src": "354:15:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 290,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "354:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 294,
            "libraryName": {
              "id": 292,
              "name": "Strings",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13542,
              "src": "382:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Strings_$13542",
                "typeString": "library Strings"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "376:26:2",
            "typeName": {
              "id": 293,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "394:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 305,
              "nodeType": "Block",
              "src": "451:91:2",
              "statements": [
                {
                  "expression": {
                    "id": 303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 301,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 291,
                      "src": "462:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 302,
                      "name": "uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 296,
                      "src": "473:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "462:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 304,
                  "nodeType": "ExpressionStatement",
                  "src": "462:14:2"
                }
              ]
            },
            "id": 306,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 299,
                "modifierName": {
                  "id": 298,
                  "name": "ERC1155",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 7846,
                  "src": "441:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC1155_$7846_$",
                    "typeString": "type(contract ERC1155)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "441:9:2"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 296,
                  "mutability": "mutable",
                  "name": "uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 306,
                  "src": "422:17:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 295,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "422:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "421:19:2"
            },
            "returnParameters": {
              "id": 300,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "451:0:2"
            },
            "scope": 393,
            "src": "410:132:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0bb78ec1",
            "id": 310,
            "mutability": "mutable",
            "name": "_tokenURIs",
            "nodeType": "VariableDeclaration",
            "scope": 393,
            "src": "550:44:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 309,
              "keyType": {
                "id": 307,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "558:7:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "550:26:2",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 308,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "569:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 325,
              "nodeType": "Block",
              "src": "678:42:2",
              "statements": [
                {
                  "expression": {
                    "id": 323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 319,
                        "name": "_tokenURIs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 310,
                        "src": "689:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 321,
                      "indexExpression": {
                        "id": 320,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 314,
                        "src": "700:2:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "689:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 322,
                      "name": "newuri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 312,
                      "src": "706:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "689:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 324,
                  "nodeType": "ExpressionStatement",
                  "src": "689:23:2"
                }
              ]
            },
            "functionSelector": "67db3b8f",
            "id": 326,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 317,
                "modifierName": {
                  "id": 316,
                  "name": "isMetadataAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 31,
                  "src": "660:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "660:17:2"
              }
            ],
            "name": "setURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 312,
                  "mutability": "mutable",
                  "name": "newuri",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "619:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 311,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "619:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 314,
                  "mutability": "mutable",
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 326,
                  "src": "641:10:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 313,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "641:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "618:34:2"
            },
            "returnParameters": {
              "id": 318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "678:0:2"
            },
            "scope": 393,
            "src": "603:117:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 337,
              "nodeType": "Block",
              "src": "795:36:2",
              "statements": [
                {
                  "expression": {
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 333,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 291,
                      "src": "806:8:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 334,
                      "name": "newuri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 328,
                      "src": "817:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "806:17:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "806:17:2"
                }
              ]
            },
            "functionSelector": "55f804b3",
            "id": 338,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 331,
                "modifierName": {
                  "id": 330,
                  "name": "isMetadataAdmin",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 31,
                  "src": "777:15:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "777:17:2"
              }
            ],
            "name": "setBaseURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 328,
                  "mutability": "mutable",
                  "name": "newuri",
                  "nodeType": "VariableDeclaration",
                  "scope": 338,
                  "src": "748:20:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "747:22:2"
            },
            "returnParameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "795:0:2"
            },
            "scope": 393,
            "src": "728:103:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 391,
              "nodeType": "Block",
              "src": "905:586:2",
              "statements": [
                {
                  "assignments": [
                    346
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 346,
                      "mutability": "mutable",
                      "name": "_tokenURI",
                      "nodeType": "VariableDeclaration",
                      "scope": 391,
                      "src": "916:23:2",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 345,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "916:6:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 350,
                  "initialValue": {
                    "baseExpression": {
                      "id": 347,
                      "name": "_tokenURIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 310,
                      "src": "942:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 349,
                    "indexExpression": {
                      "id": 348,
                      "name": "tokenid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 340,
                      "src": "953:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "942:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "916:45:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 353,
                            "name": "_baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "1043:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1037:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 351,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1037:5:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 354,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1037:15:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1037:22:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1063:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1037:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 361,
                  "nodeType": "IfStatement",
                  "src": "1033:76:2",
                  "trueBody": {
                    "id": 360,
                    "nodeType": "Block",
                    "src": "1066:43:2",
                    "statements": [
                      {
                        "expression": {
                          "id": 358,
                          "name": "_tokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 346,
                          "src": "1088:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 344,
                        "id": 359,
                        "nodeType": "Return",
                        "src": "1081:16:2"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 364,
                            "name": "_tokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 346,
                            "src": "1219:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1213:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 362,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1213:5:2",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1213:16:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1213:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1239:1:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1213:27:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 379,
                  "nodeType": "IfStatement",
                  "src": "1209:112:2",
                  "trueBody": {
                    "id": 378,
                    "nodeType": "Block",
                    "src": "1242:79:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 373,
                                  "name": "_baseURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 291,
                                  "src": "1288:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                {
                                  "id": 374,
                                  "name": "_tokenURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 346,
                                  "src": "1298:9:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 371,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1271:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 372,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1271:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 375,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1271:37:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1264:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 369,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "1264:6:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1264:45:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 344,
                        "id": 377,
                        "nodeType": "Return",
                        "src": "1257:52:2"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 384,
                            "name": "_baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 291,
                            "src": "1453:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 385,
                                "name": "tokenid",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 340,
                                "src": "1463:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 13541,
                              "src": "1463:16:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1463:18:2",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 382,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1436:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1436:16:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1436:46:2",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 381,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1429:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 380,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1429:6:2",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1429:54:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 344,
                  "id": 390,
                  "nodeType": "Return",
                  "src": "1422:61:2"
                }
              ]
            },
            "functionSelector": "0e89341c",
            "id": 392,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 340,
                  "mutability": "mutable",
                  "name": "tokenid",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "852:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "851:17:2"
            },
            "returnParameters": {
              "id": 344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 343,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 392,
                  "src": "890:13:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 342,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "890:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "889:15:2"
            },
            "scope": 393,
            "src": "839:652:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 394,
        "src": "312:1182:2"
      }
    ],
    "src": "33:1463:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/NFTbase.sol",
      "exportedSymbols": {
        "AccessControl": [
          3618
        ],
        "Address": [
          12295
        ],
        "Admin": [
          76
        ],
        "Context": [
          2171
        ],
        "ERC1155": [
          7846
        ],
        "ERC165": [
          4778
        ],
        "EnumerableSet": [
          13365
        ],
        "IERC1155": [
          8085
        ],
        "IERC1155MetadataURI": [
          8100
        ],
        "IERC1155Receiver": [
          8141
        ],
        "IERC165": [
          4790
        ],
        "NFTbase": [
          393
        ],
        "SafeMath": [
          5149
        ],
        "Strings": [
          13542
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.6",
            ".0",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 281,
        "name": "PragmaDirective",
        "src": "33:31:2"
      },
      {
        "attributes": {
          "SourceUnit": 7847,
          "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC1155/ERC1155.sol",
          "file": "./openzeppelin/contracts/token/ERC1155/ERC1155.sol",
          "scope": 394,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 282,
        "name": "ImportDirective",
        "src": "68:60:2"
      },
      {
        "attributes": {
          "SourceUnit": 13543,
          "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/utils/Strings.sol",
          "file": "./openzeppelin/contracts/utils/Strings.sol",
          "scope": 394,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 283,
        "name": "ImportDirective",
        "src": "130:52:2"
      },
      {
        "attributes": {
          "SourceUnit": 77,
          "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/Admin.sol",
          "file": "./Admin.sol",
          "scope": 394,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 284,
        "name": "ImportDirective",
        "src": "184:21:2"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            76,
            2171,
            3618,
            4778,
            4790,
            7846,
            8085
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            393,
            76,
            3618,
            7846,
            8085,
            4778,
            4790,
            2171
          ],
          "name": "NFTbase",
          "scope": 394
        },
        "children": [
          {
            "attributes": {
              "text": " @title ERC1155Mock\n This mock just publicizes internal functions for testing purposes"
            },
            "id": 285,
            "name": "StructuredDocumentation",
            "src": "209:101:2"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC1155",
                  "referencedDeclaration": 7846,
                  "type": "contract ERC1155"
                },
                "id": 286,
                "name": "UserDefinedTypeName",
                "src": "332:7:2"
              }
            ],
            "id": 287,
            "name": "InheritanceSpecifier",
            "src": "332:7:2"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Admin",
                  "referencedDeclaration": 76,
                  "type": "contract Admin"
                },
                "id": 288,
                "name": "UserDefinedTypeName",
                "src": "341:5:2"
              }
            ],
            "id": 289,
            "name": "InheritanceSpecifier",
            "src": "341:5:2"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_baseURI",
              "scope": 393,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "string",
                  "type": "string"
                },
                "id": 290,
                "name": "ElementaryTypeName",
                "src": "354:6:2"
              }
            ],
            "id": 291,
            "name": "VariableDeclaration",
            "src": "354:15:2"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "Strings",
                  "referencedDeclaration": 13542,
                  "type": "library Strings"
                },
                "id": 292,
                "name": "UserDefinedTypeName",
                "src": "382:7:2"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 293,
                "name": "ElementaryTypeName",
                "src": "394:7:2"
              }
            ],
            "id": 294,
            "name": "UsingForDirective",
            "src": "376:26:2"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 393,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "uri",
                      "scope": 306,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 295,
                        "name": "ElementaryTypeName",
                        "src": "422:6:2"
                      }
                    ],
                    "id": 296,
                    "name": "VariableDeclaration",
                    "src": "422:17:2"
                  }
                ],
                "id": 297,
                "name": "ParameterList",
                "src": "421:19:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 300,
                "name": "ParameterList",
                "src": "451:0:2"
              },
              {
                "attributes": {
                  "arguments": [
                    null
                  ]
                },
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7846,
                      "type": "type(contract ERC1155)",
                      "value": "ERC1155"
                    },
                    "id": 298,
                    "name": "Identifier",
                    "src": "441:7:2"
                  }
                ],
                "id": 299,
                "name": "ModifierInvocation",
                "src": "441:9:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 291,
                              "type": "string storage ref",
                              "value": "_baseURI"
                            },
                            "id": 301,
                            "name": "Identifier",
                            "src": "462:8:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 296,
                              "type": "string memory",
                              "value": "uri"
                            },
                            "id": 302,
                            "name": "Identifier",
                            "src": "473:3:2"
                          }
                        ],
                        "id": 303,
                        "name": "Assignment",
                        "src": "462:14:2"
                      }
                    ],
                    "id": 304,
                    "name": "ExpressionStatement",
                    "src": "462:14:2"
                  }
                ],
                "id": 305,
                "name": "Block",
                "src": "451:91:2"
              }
            ],
            "id": 306,
            "name": "FunctionDefinition",
            "src": "410:132:2"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "0bb78ec1",
              "mutability": "mutable",
              "name": "_tokenURIs",
              "scope": 393,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(uint256 => string)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(uint256 => string)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 307,
                    "name": "ElementaryTypeName",
                    "src": "558:7:2"
                  },
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 308,
                    "name": "ElementaryTypeName",
                    "src": "569:6:2"
                  }
                ],
                "id": 309,
                "name": "Mapping",
                "src": "550:26:2"
              }
            ],
            "id": 310,
            "name": "VariableDeclaration",
            "src": "550:44:2"
          },
          {
            "attributes": {
              "functionSelector": "67db3b8f",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setURI",
              "scope": 393,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "newuri",
                      "scope": 326,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 311,
                        "name": "ElementaryTypeName",
                        "src": "619:6:2"
                      }
                    ],
                    "id": 312,
                    "name": "VariableDeclaration",
                    "src": "619:20:2"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "id",
                      "scope": 326,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 313,
                        "name": "ElementaryTypeName",
                        "src": "641:7:2"
                      }
                    ],
                    "id": 314,
                    "name": "VariableDeclaration",
                    "src": "641:10:2"
                  }
                ],
                "id": 315,
                "name": "ParameterList",
                "src": "618:34:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 318,
                "name": "ParameterList",
                "src": "678:0:2"
              },
              {
                "attributes": {
                  "arguments": [
                    null
                  ]
                },
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 31,
                      "type": "modifier ()",
                      "value": "isMetadataAdmin"
                    },
                    "id": 316,
                    "name": "Identifier",
                    "src": "660:15:2"
                  }
                ],
                "id": 317,
                "name": "ModifierInvocation",
                "src": "660:17:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "string storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 310,
                                  "type": "mapping(uint256 => string storage ref)",
                                  "value": "_tokenURIs"
                                },
                                "id": 319,
                                "name": "Identifier",
                                "src": "689:10:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 314,
                                  "type": "uint256",
                                  "value": "id"
                                },
                                "id": 320,
                                "name": "Identifier",
                                "src": "700:2:2"
                              }
                            ],
                            "id": 321,
                            "name": "IndexAccess",
                            "src": "689:14:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 312,
                              "type": "string memory",
                              "value": "newuri"
                            },
                            "id": 322,
                            "name": "Identifier",
                            "src": "706:6:2"
                          }
                        ],
                        "id": 323,
                        "name": "Assignment",
                        "src": "689:23:2"
                      }
                    ],
                    "id": 324,
                    "name": "ExpressionStatement",
                    "src": "689:23:2"
                  }
                ],
                "id": 325,
                "name": "Block",
                "src": "678:42:2"
              }
            ],
            "id": 326,
            "name": "FunctionDefinition",
            "src": "603:117:2"
          },
          {
            "attributes": {
              "functionSelector": "55f804b3",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setBaseURI",
              "scope": 393,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "newuri",
                      "scope": 338,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 327,
                        "name": "ElementaryTypeName",
                        "src": "748:6:2"
                      }
                    ],
                    "id": 328,
                    "name": "VariableDeclaration",
                    "src": "748:20:2"
                  }
                ],
                "id": 329,
                "name": "ParameterList",
                "src": "747:22:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 332,
                "name": "ParameterList",
                "src": "795:0:2"
              },
              {
                "attributes": {
                  "arguments": [
                    null
                  ]
                },
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 31,
                      "type": "modifier ()",
                      "value": "isMetadataAdmin"
                    },
                    "id": 330,
                    "name": "Identifier",
                    "src": "777:15:2"
                  }
                ],
                "id": 331,
                "name": "ModifierInvocation",
                "src": "777:17:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 291,
                              "type": "string storage ref",
                              "value": "_baseURI"
                            },
                            "id": 333,
                            "name": "Identifier",
                            "src": "806:8:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 328,
                              "type": "string memory",
                              "value": "newuri"
                            },
                            "id": 334,
                            "name": "Identifier",
                            "src": "817:6:2"
                          }
                        ],
                        "id": 335,
                        "name": "Assignment",
                        "src": "806:17:2"
                      }
                    ],
                    "id": 336,
                    "name": "ExpressionStatement",
                    "src": "806:17:2"
                  }
                ],
                "id": 337,
                "name": "Block",
                "src": "795:36:2"
              }
            ],
            "id": 338,
            "name": "FunctionDefinition",
            "src": "728:103:2"
          },
          {
            "attributes": {
              "functionSelector": "0e89341c",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "uri",
              "scope": 393,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenid",
                      "scope": 392,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 339,
                        "name": "ElementaryTypeName",
                        "src": "852:7:2"
                      }
                    ],
                    "id": 340,
                    "name": "VariableDeclaration",
                    "src": "852:15:2"
                  }
                ],
                "id": 341,
                "name": "ParameterList",
                "src": "851:17:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 392,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 342,
                        "name": "ElementaryTypeName",
                        "src": "890:6:2"
                      }
                    ],
                    "id": 343,
                    "name": "VariableDeclaration",
                    "src": "890:13:2"
                  }
                ],
                "id": 344,
                "name": "ParameterList",
                "src": "889:15:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        346
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "_tokenURI",
                          "scope": 391,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "string",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "string",
                              "type": "string"
                            },
                            "id": 345,
                            "name": "ElementaryTypeName",
                            "src": "916:6:2"
                          }
                        ],
                        "id": 346,
                        "name": "VariableDeclaration",
                        "src": "916:23:2"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "string storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 310,
                              "type": "mapping(uint256 => string storage ref)",
                              "value": "_tokenURIs"
                            },
                            "id": 347,
                            "name": "Identifier",
                            "src": "942:10:2"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 340,
                              "type": "uint256",
                              "value": "tokenid"
                            },
                            "id": 348,
                            "name": "Identifier",
                            "src": "953:7:2"
                          }
                        ],
                        "id": 349,
                        "name": "IndexAccess",
                        "src": "942:19:2"
                      }
                    ],
                    "id": 350,
                    "name": "VariableDeclarationStatement",
                    "src": "916:45:2"
                  },
                  {
                    "attributes": {},
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "==",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bytes storage pointer",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_storage",
                                          "typeString": "string storage ref"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(bytes storage pointer)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "bytes"
                                        },
                                        "id": 351,
                                        "name": "ElementaryTypeName",
                                        "src": "1037:5:2"
                                      }
                                    ],
                                    "id": 352,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1037:5:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 291,
                                      "type": "string storage ref",
                                      "value": "_baseURI"
                                    },
                                    "id": 353,
                                    "name": "Identifier",
                                    "src": "1043:8:2"
                                  }
                                ],
                                "id": 354,
                                "name": "FunctionCall",
                                "src": "1037:15:2"
                              }
                            ],
                            "id": 355,
                            "name": "MemberAccess",
                            "src": "1037:22:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 356,
                            "name": "Literal",
                            "src": "1063:1:2"
                          }
                        ],
                        "id": 357,
                        "name": "BinaryOperation",
                        "src": "1037:27:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "functionReturnParameters": 344
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 346,
                                  "type": "string memory",
                                  "value": "_tokenURI"
                                },
                                "id": 358,
                                "name": "Identifier",
                                "src": "1088:9:2"
                              }
                            ],
                            "id": 359,
                            "name": "Return",
                            "src": "1081:16:2"
                          }
                        ],
                        "id": 360,
                        "name": "Block",
                        "src": "1066:43:2"
                      }
                    ],
                    "id": 361,
                    "name": "IfStatement",
                    "src": "1033:76:2"
                  },
                  {
                    "attributes": {},
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "length",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "bytes memory",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_string_memory_ptr",
                                          "typeString": "string memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(bytes storage pointer)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "bytes"
                                        },
                                        "id": 362,
                                        "name": "ElementaryTypeName",
                                        "src": "1213:5:2"
                                      }
                                    ],
                                    "id": 363,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1213:5:2"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 346,
                                      "type": "string memory",
                                      "value": "_tokenURI"
                                    },
                                    "id": 364,
                                    "name": "Identifier",
                                    "src": "1219:9:2"
                                  }
                                ],
                                "id": 365,
                                "name": "FunctionCall",
                                "src": "1213:16:2"
                              }
                            ],
                            "id": 366,
                            "name": "MemberAccess",
                            "src": "1213:23:2"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 367,
                            "name": "Literal",
                            "src": "1239:1:2"
                          }
                        ],
                        "id": 368,
                        "name": "BinaryOperation",
                        "src": "1213:27:2"
                      },
                      {
                        "children": [
                          {
                            "attributes": {
                              "functionReturnParameters": 344
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "string memory",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(string storage pointer)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "string"
                                        },
                                        "id": 369,
                                        "name": "ElementaryTypeName",
                                        "src": "1264:6:2"
                                      }
                                    ],
                                    "id": 370,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1264:6:2"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "bytes memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_string_storage",
                                              "typeString": "string storage ref"
                                            },
                                            {
                                              "typeIdentifier": "t_string_memory_ptr",
                                              "typeString": "string memory"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "member_name": "encodePacked",
                                          "type": "function () pure returns (bytes memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": -1,
                                              "type": "abi",
                                              "value": "abi"
                                            },
                                            "id": 371,
                                            "name": "Identifier",
                                            "src": "1271:3:2"
                                          }
                                        ],
                                        "id": 372,
                                        "name": "MemberAccess",
                                        "src": "1271:16:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 291,
                                          "type": "string storage ref",
                                          "value": "_baseURI"
                                        },
                                        "id": 373,
                                        "name": "Identifier",
                                        "src": "1288:8:2"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 346,
                                          "type": "string memory",
                                          "value": "_tokenURI"
                                        },
                                        "id": 374,
                                        "name": "Identifier",
                                        "src": "1298:9:2"
                                      }
                                    ],
                                    "id": 375,
                                    "name": "FunctionCall",
                                    "src": "1271:37:2"
                                  }
                                ],
                                "id": 376,
                                "name": "FunctionCall",
                                "src": "1264:45:2"
                              }
                            ],
                            "id": 377,
                            "name": "Return",
                            "src": "1257:52:2"
                          }
                        ],
                        "id": 378,
                        "name": "Block",
                        "src": "1242:79:2"
                      }
                    ],
                    "id": 379,
                    "name": "IfStatement",
                    "src": "1209:112:2"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 344
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "string memory",
                          "type_conversion": true
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "type": "type(string storage pointer)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "string"
                                },
                                "id": 380,
                                "name": "ElementaryTypeName",
                                "src": "1429:6:2"
                              }
                            ],
                            "id": 381,
                            "name": "ElementaryTypeNameExpression",
                            "src": "1429:6:2"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_storage",
                                      "typeString": "string storage ref"
                                    },
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -1,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 382,
                                    "name": "Identifier",
                                    "src": "1436:3:2"
                                  }
                                ],
                                "id": 383,
                                "name": "MemberAccess",
                                "src": "1436:16:2"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 291,
                                  "type": "string storage ref",
                                  "value": "_baseURI"
                                },
                                "id": 384,
                                "name": "Identifier",
                                "src": "1453:8:2"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "string memory",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "toString",
                                      "referencedDeclaration": 13541,
                                      "type": "function (uint256) pure returns (string memory)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 340,
                                          "type": "uint256",
                                          "value": "tokenid"
                                        },
                                        "id": 385,
                                        "name": "Identifier",
                                        "src": "1463:7:2"
                                      }
                                    ],
                                    "id": 386,
                                    "name": "MemberAccess",
                                    "src": "1463:16:2"
                                  }
                                ],
                                "id": 387,
                                "name": "FunctionCall",
                                "src": "1463:18:2"
                              }
                            ],
                            "id": 388,
                            "name": "FunctionCall",
                            "src": "1436:46:2"
                          }
                        ],
                        "id": 389,
                        "name": "FunctionCall",
                        "src": "1429:54:2"
                      }
                    ],
                    "id": 390,
                    "name": "Return",
                    "src": "1422:61:2"
                  }
                ],
                "id": 391,
                "name": "Block",
                "src": "905:586:2"
              }
            ],
            "id": 392,
            "name": "FunctionDefinition",
            "src": "839:652:2"
          }
        ],
        "id": 393,
        "name": "ContractDefinition",
        "src": "312:1182:2"
      }
    ],
    "id": 394,
    "name": "SourceUnit",
    "src": "33:1463:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.3+commit.9bfce1f6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-14T01:48:59.772Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      }
    },
    "title": "ERC1155Mock This mock just publicizes internal functions for testing purposes",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}