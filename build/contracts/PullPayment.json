{
  "contractName": "PullPayment",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "payee",
          "type": "address"
        }
      ],
      "name": "withdrawPayments",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dest",
          "type": "address"
        }
      ],
      "name": "payments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.3+commit.9bfce1f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dest\",\"type\":\"address\"}],\"name\":\"payments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"payee\",\"type\":\"address\"}],\"name\":\"withdrawPayments\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simple implementation of a https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment] strategy, where the paying contract doesn't interact directly with the receiver account, which must withdraw its payments itself. Pull-payments are often considered the best practice when it comes to sending Ether, security-wise. It prevents recipients from blocking execution, and eliminates reentrancy concerns. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]. To use, derive from the `PullPayment` contract, and use {_asyncTransfer} instead of Solidity's `transfer` function. Payees can query their due payments with {payments}, and retrieve them with {withdrawPayments}.\",\"kind\":\"dev\",\"methods\":{\"payments(address)\":{\"details\":\"Returns the payments owed to an address.\",\"params\":{\"dest\":\"The creditor's address.\"}},\"withdrawPayments(address)\":{\"details\":\"Withdraw accumulated payments, forwarding all gas to the recipient. Note that _any_ account can call this function, not just the `payee`. This means that contracts unaware of the `PullPayment` protocol can still receive funds this way, by having a separate account call {withdrawPayments}. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.\",\"params\":{\"payee\":\"Whose payments will be withdrawn.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/payment/PullPayment.sol\":\"PullPayment\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x382f4cf6a5351e88425044801bc7938f51fc53425dc8f20d6ecc483104e5387b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b2b5d2afc90586ea621b4f1a7710de05cf1fdaa190fe63b5d70774031c72ab3\",\"dweb:/ipfs/QmbZhm2SoMGUyTnBFPK1mSRm8PBLzzQaD5n22rikoZScgR\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/payment/PullPayment.sol\":{\"keccak256\":\"0x890c94740769083ee217939beb1a4602c687b7296757db2ed21f695b2ee07ed2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43bec721a8cc63565fcf2dcbbe53d6646b418f161936783aa95863f1b462907b\",\"dweb:/ipfs/QmTqNNqQoxhBNdwmG66wNxBG7mTkzBKVGdXBTCEaq1gnoy\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/payment/escrow/Escrow.sol\":{\"keccak256\":\"0xef0d3fc59950d6a45cbbdb63079a7037a043b723d9c0fd555968111da1e403cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9aafaf04f75f25230676763cf3775811aa6b878e6578484d97884e1f8fafe4b7\",\"dweb:/ipfs/QmPqvG5PHEeDEPffEi6rjpo3vJn4MY2SLSWquhWQ1AojvU\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\nimport \"./escrow/Escrow.sol\";\n\n/**\n * @dev Simple implementation of a\n * https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment]\n * strategy, where the paying contract doesn't interact directly with the\n * receiver account, which must withdraw its payments itself.\n *\n * Pull-payments are often considered the best practice when it comes to sending\n * Ether, security-wise. It prevents recipients from blocking execution, and\n * eliminates reentrancy concerns.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n *\n * To use, derive from the `PullPayment` contract, and use {_asyncTransfer}\n * instead of Solidity's `transfer` function. Payees can query their due\n * payments with {payments}, and retrieve them with {withdrawPayments}.\n */\nabstract contract PullPayment {\n    Escrow private _escrow;\n\n    constructor () {\n        _escrow = new Escrow();\n    }\n\n    /**\n     * @dev Withdraw accumulated payments, forwarding all gas to the recipient.\n     *\n     * Note that _any_ account can call this function, not just the `payee`.\n     * This means that contracts unaware of the `PullPayment` protocol can still\n     * receive funds this way, by having a separate account call\n     * {withdrawPayments}.\n     *\n     * WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n     * Make sure you trust the recipient, or are either following the\n     * checks-effects-interactions pattern or using {ReentrancyGuard}.\n     *\n     * @param payee Whose payments will be withdrawn.\n     */\n    function withdrawPayments(address payable payee) public virtual {\n        _escrow.withdraw(payee);\n    }\n\n    /**\n     * @dev Returns the payments owed to an address.\n     * @param dest The creditor's address.\n     */\n    function payments(address dest) public view returns (uint256) {\n        return _escrow.depositsOf(dest);\n    }\n\n    /**\n     * @dev Called by the payer to store the sent amount as credit to be pulled.\n     * Funds sent in this way are stored in an intermediate {Escrow} contract, so\n     * there is no danger of them being spent before withdrawal.\n     *\n     * @param dest The destination address of the funds.\n     * @param amount The amount to transfer.\n     */\n    function _asyncTransfer(address dest, uint256 amount) internal virtual {\n        _escrow.deposit{ value: amount }(dest);\n    }\n}\n",
  "sourcePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/payment/PullPayment.sol",
  "ast": {
    "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/payment/PullPayment.sol",
    "exportedSymbols": {
      "Address": [
        12295
      ],
      "Context": [
        2171
      ],
      "Escrow": [
        5654
      ],
      "Ownable": [
        3727
      ],
      "PullPayment": [
        5514
      ],
      "SafeMath": [
        5149
      ]
    },
    "id": 5515,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5455,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".2",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:102"
      },
      {
        "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/payment/escrow/Escrow.sol",
        "file": "./escrow/Escrow.sol",
        "id": 5456,
        "nodeType": "ImportDirective",
        "scope": 5515,
        "sourceUnit": 5655,
        "src": "66:29:102",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [
          5654
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 5457,
          "nodeType": "StructuredDocumentation",
          "src": "97:949:102",
          "text": " @dev Simple implementation of a\n https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment]\n strategy, where the paying contract doesn't interact directly with the\n receiver account, which must withdraw its payments itself.\n Pull-payments are often considered the best practice when it comes to sending\n Ether, security-wise. It prevents recipients from blocking execution, and\n eliminates reentrancy concerns.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n To use, derive from the `PullPayment` contract, and use {_asyncTransfer}\n instead of Solidity's `transfer` function. Payees can query their due\n payments with {payments}, and retrieve them with {withdrawPayments}."
        },
        "fullyImplemented": true,
        "id": 5514,
        "linearizedBaseContracts": [
          5514
        ],
        "name": "PullPayment",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 5459,
            "mutability": "mutable",
            "name": "_escrow",
            "nodeType": "VariableDeclaration",
            "scope": 5514,
            "src": "1083:22:102",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Escrow_$5654",
              "typeString": "contract Escrow"
            },
            "typeName": {
              "id": 5458,
              "name": "Escrow",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5654,
              "src": "1083:6:102",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Escrow_$5654",
                "typeString": "contract Escrow"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 5468,
              "nodeType": "Block",
              "src": "1127:39:102",
              "statements": [
                {
                  "expression": {
                    "id": 5466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5462,
                      "name": "_escrow",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5459,
                      "src": "1137:7:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Escrow_$5654",
                        "typeString": "contract Escrow"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 5464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1147:10:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_Escrow_$5654_$",
                          "typeString": "function () returns (contract Escrow)"
                        },
                        "typeName": {
                          "id": 5463,
                          "name": "Escrow",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 5654,
                          "src": "1151:6:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Escrow_$5654",
                            "typeString": "contract Escrow"
                          }
                        }
                      },
                      "id": 5465,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1147:12:102",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Escrow_$5654",
                        "typeString": "contract Escrow"
                      }
                    },
                    "src": "1137:22:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Escrow_$5654",
                      "typeString": "contract Escrow"
                    }
                  },
                  "id": 5467,
                  "nodeType": "ExpressionStatement",
                  "src": "1137:22:102"
                }
              ]
            },
            "id": 5469,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1124:2:102"
            },
            "returnParameters": {
              "id": 5461,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1127:0:102"
            },
            "scope": 5514,
            "src": "1112:54:102",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 5481,
              "nodeType": "Block",
              "src": "1879:40:102",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5478,
                        "name": "payee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5472,
                        "src": "1906:5:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 5475,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5459,
                        "src": "1889:7:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Escrow_$5654",
                          "typeString": "contract Escrow"
                        }
                      },
                      "id": 5477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdraw",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5653,
                      "src": "1889:16:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 5479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1889:23:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5480,
                  "nodeType": "ExpressionStatement",
                  "src": "1889:23:102"
                }
              ]
            },
            "documentation": {
              "id": 5470,
              "nodeType": "StructuredDocumentation",
              "src": "1172:638:102",
              "text": " @dev Withdraw accumulated payments, forwarding all gas to the recipient.\n Note that _any_ account can call this function, not just the `payee`.\n This means that contracts unaware of the `PullPayment` protocol can still\n receive funds this way, by having a separate account call\n {withdrawPayments}.\n WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n Make sure you trust the recipient, or are either following the\n checks-effects-interactions pattern or using {ReentrancyGuard}.\n @param payee Whose payments will be withdrawn."
            },
            "functionSelector": "31b3eb94",
            "id": 5482,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawPayments",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5472,
                  "mutability": "mutable",
                  "name": "payee",
                  "nodeType": "VariableDeclaration",
                  "scope": 5482,
                  "src": "1841:21:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 5471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1841:15:102",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1840:23:102"
            },
            "returnParameters": {
              "id": 5474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1879:0:102"
            },
            "scope": 5514,
            "src": "1815:104:102",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5495,
              "nodeType": "Block",
              "src": "2099:48:102",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5492,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5485,
                        "src": "2135:4:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 5490,
                        "name": "_escrow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5459,
                        "src": "2116:7:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Escrow_$5654",
                          "typeString": "contract Escrow"
                        }
                      },
                      "id": 5491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositsOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5591,
                      "src": "2116:18:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 5493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2116:24:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 5489,
                  "id": 5494,
                  "nodeType": "Return",
                  "src": "2109:31:102"
                }
              ]
            },
            "documentation": {
              "id": 5483,
              "nodeType": "StructuredDocumentation",
              "src": "1925:107:102",
              "text": " @dev Returns the payments owed to an address.\n @param dest The creditor's address."
            },
            "functionSelector": "e2982c21",
            "id": 5496,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payments",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5485,
                  "mutability": "mutable",
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 5496,
                  "src": "2055:12:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2055:7:102",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2054:14:102"
            },
            "returnParameters": {
              "id": 5489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5488,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 5496,
                  "src": "2090:7:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5487,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2090:7:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2089:9:102"
            },
            "scope": 5514,
            "src": "2037:110:102",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5512,
              "nodeType": "Block",
              "src": "2577:55:102",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 5509,
                        "name": "dest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5499,
                        "src": "2620:4:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 5504,
                          "name": "_escrow",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5459,
                          "src": "2587:7:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Escrow_$5654",
                            "typeString": "contract Escrow"
                          }
                        },
                        "id": 5506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 5621,
                        "src": "2587:15:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$",
                          "typeString": "function (address) payable external"
                        }
                      },
                      "id": 5508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 5507,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5501,
                          "src": "2611:6:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "2587:32:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$__$value",
                        "typeString": "function (address) payable external"
                      }
                    },
                    "id": 5510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2587:38:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5511,
                  "nodeType": "ExpressionStatement",
                  "src": "2587:38:102"
                }
              ]
            },
            "documentation": {
              "id": 5497,
              "nodeType": "StructuredDocumentation",
              "src": "2153:348:102",
              "text": " @dev Called by the payer to store the sent amount as credit to be pulled.\n Funds sent in this way are stored in an intermediate {Escrow} contract, so\n there is no danger of them being spent before withdrawal.\n @param dest The destination address of the funds.\n @param amount The amount to transfer."
            },
            "id": 5513,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_asyncTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5502,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5499,
                  "mutability": "mutable",
                  "name": "dest",
                  "nodeType": "VariableDeclaration",
                  "scope": 5513,
                  "src": "2530:12:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5498,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2530:7:102",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5501,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 5513,
                  "src": "2544:14:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5500,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2544:7:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2529:30:102"
            },
            "returnParameters": {
              "id": 5503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2577:0:102"
            },
            "scope": 5514,
            "src": "2506:126:102",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 5515,
        "src": "1047:1587:102"
      }
    ],
    "src": "33:2602:102"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/payment/PullPayment.sol",
      "exportedSymbols": {
        "Address": [
          12295
        ],
        "Context": [
          2171
        ],
        "Escrow": [
          5654
        ],
        "Ownable": [
          3727
        ],
        "PullPayment": [
          5514
        ],
        "SafeMath": [
          5149
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.6",
            ".2",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 5455,
        "name": "PragmaDirective",
        "src": "33:31:102"
      },
      {
        "attributes": {
          "SourceUnit": 5655,
          "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/payment/escrow/Escrow.sol",
          "file": "./escrow/Escrow.sol",
          "scope": 5515,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 5456,
        "name": "ImportDirective",
        "src": "66:29:102"
      },
      {
        "attributes": {
          "abstract": true,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            5654
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            5514
          ],
          "name": "PullPayment",
          "scope": 5515
        },
        "children": [
          {
            "attributes": {
              "text": " @dev Simple implementation of a\n https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment]\n strategy, where the paying contract doesn't interact directly with the\n receiver account, which must withdraw its payments itself.\n Pull-payments are often considered the best practice when it comes to sending\n Ether, security-wise. It prevents recipients from blocking execution, and\n eliminates reentrancy concerns.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n To use, derive from the `PullPayment` contract, and use {_asyncTransfer}\n instead of Solidity's `transfer` function. Payees can query their due\n payments with {payments}, and retrieve them with {withdrawPayments}."
            },
            "id": 5457,
            "name": "StructuredDocumentation",
            "src": "97:949:102"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_escrow",
              "scope": 5514,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract Escrow",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "Escrow",
                  "referencedDeclaration": 5654,
                  "type": "contract Escrow"
                },
                "id": 5458,
                "name": "UserDefinedTypeName",
                "src": "1083:6:102"
              }
            ],
            "id": 5459,
            "name": "VariableDeclaration",
            "src": "1083:22:102"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 5514,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 5460,
                "name": "ParameterList",
                "src": "1124:2:102"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 5461,
                "name": "ParameterList",
                "src": "1127:0:102"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract Escrow"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 5459,
                              "type": "contract Escrow",
                              "value": "_escrow"
                            },
                            "id": 5462,
                            "name": "Identifier",
                            "src": "1137:7:102"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract Escrow",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "function () returns (contract Escrow)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "Escrow",
                                      "referencedDeclaration": 5654,
                                      "type": "contract Escrow"
                                    },
                                    "id": 5463,
                                    "name": "UserDefinedTypeName",
                                    "src": "1151:6:102"
                                  }
                                ],
                                "id": 5464,
                                "name": "NewExpression",
                                "src": "1147:10:102"
                              }
                            ],
                            "id": 5465,
                            "name": "FunctionCall",
                            "src": "1147:12:102"
                          }
                        ],
                        "id": 5466,
                        "name": "Assignment",
                        "src": "1137:22:102"
                      }
                    ],
                    "id": 5467,
                    "name": "ExpressionStatement",
                    "src": "1137:22:102"
                  }
                ],
                "id": 5468,
                "name": "Block",
                "src": "1127:39:102"
              }
            ],
            "id": 5469,
            "name": "FunctionDefinition",
            "src": "1112:54:102"
          },
          {
            "attributes": {
              "functionSelector": "31b3eb94",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawPayments",
              "scope": 5514,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Withdraw accumulated payments, forwarding all gas to the recipient.\n Note that _any_ account can call this function, not just the `payee`.\n This means that contracts unaware of the `PullPayment` protocol can still\n receive funds this way, by having a separate account call\n {withdrawPayments}.\n WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities.\n Make sure you trust the recipient, or are either following the\n checks-effects-interactions pattern or using {ReentrancyGuard}.\n @param payee Whose payments will be withdrawn."
                },
                "id": 5470,
                "name": "StructuredDocumentation",
                "src": "1172:638:102"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "payee",
                      "scope": 5482,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 5471,
                        "name": "ElementaryTypeName",
                        "src": "1841:15:102"
                      }
                    ],
                    "id": 5472,
                    "name": "VariableDeclaration",
                    "src": "1841:21:102"
                  }
                ],
                "id": 5473,
                "name": "ParameterList",
                "src": "1840:23:102"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 5474,
                "name": "ParameterList",
                "src": "1879:0:102"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "withdraw",
                              "referencedDeclaration": 5653,
                              "type": "function (address payable) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5459,
                                  "type": "contract Escrow",
                                  "value": "_escrow"
                                },
                                "id": 5475,
                                "name": "Identifier",
                                "src": "1889:7:102"
                              }
                            ],
                            "id": 5477,
                            "name": "MemberAccess",
                            "src": "1889:16:102"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 5472,
                              "type": "address payable",
                              "value": "payee"
                            },
                            "id": 5478,
                            "name": "Identifier",
                            "src": "1906:5:102"
                          }
                        ],
                        "id": 5479,
                        "name": "FunctionCall",
                        "src": "1889:23:102"
                      }
                    ],
                    "id": 5480,
                    "name": "ExpressionStatement",
                    "src": "1889:23:102"
                  }
                ],
                "id": 5481,
                "name": "Block",
                "src": "1879:40:102"
              }
            ],
            "id": 5482,
            "name": "FunctionDefinition",
            "src": "1815:104:102"
          },
          {
            "attributes": {
              "functionSelector": "e2982c21",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "payments",
              "scope": 5514,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Returns the payments owed to an address.\n @param dest The creditor's address."
                },
                "id": 5483,
                "name": "StructuredDocumentation",
                "src": "1925:107:102"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "dest",
                      "scope": 5496,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 5484,
                        "name": "ElementaryTypeName",
                        "src": "2055:7:102"
                      }
                    ],
                    "id": 5485,
                    "name": "VariableDeclaration",
                    "src": "2055:12:102"
                  }
                ],
                "id": 5486,
                "name": "ParameterList",
                "src": "2054:14:102"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "",
                      "scope": 5496,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 5487,
                        "name": "ElementaryTypeName",
                        "src": "2090:7:102"
                      }
                    ],
                    "id": 5488,
                    "name": "VariableDeclaration",
                    "src": "2090:7:102"
                  }
                ],
                "id": 5489,
                "name": "ParameterList",
                "src": "2089:9:102"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 5489
                    },
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "depositsOf",
                              "referencedDeclaration": 5591,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5459,
                                  "type": "contract Escrow",
                                  "value": "_escrow"
                                },
                                "id": 5490,
                                "name": "Identifier",
                                "src": "2116:7:102"
                              }
                            ],
                            "id": 5491,
                            "name": "MemberAccess",
                            "src": "2116:18:102"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 5485,
                              "type": "address",
                              "value": "dest"
                            },
                            "id": 5492,
                            "name": "Identifier",
                            "src": "2135:4:102"
                          }
                        ],
                        "id": 5493,
                        "name": "FunctionCall",
                        "src": "2116:24:102"
                      }
                    ],
                    "id": 5494,
                    "name": "Return",
                    "src": "2109:31:102"
                  }
                ],
                "id": 5495,
                "name": "Block",
                "src": "2099:48:102"
              }
            ],
            "id": 5496,
            "name": "FunctionDefinition",
            "src": "2037:110:102"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_asyncTransfer",
              "scope": 5514,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Called by the payer to store the sent amount as credit to be pulled.\n Funds sent in this way are stored in an intermediate {Escrow} contract, so\n there is no danger of them being spent before withdrawal.\n @param dest The destination address of the funds.\n @param amount The amount to transfer."
                },
                "id": 5497,
                "name": "StructuredDocumentation",
                "src": "2153:348:102"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "dest",
                      "scope": 5513,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 5498,
                        "name": "ElementaryTypeName",
                        "src": "2530:7:102"
                      }
                    ],
                    "id": 5499,
                    "name": "VariableDeclaration",
                    "src": "2530:12:102"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "scope": 5513,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 5500,
                        "name": "ElementaryTypeName",
                        "src": "2544:7:102"
                      }
                    ],
                    "id": 5501,
                    "name": "VariableDeclaration",
                    "src": "2544:14:102"
                  }
                ],
                "id": 5502,
                "name": "ParameterList",
                "src": "2529:30:102"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 5503,
                "name": "ParameterList",
                "src": "2577:0:102"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "names": [
                                "value"
                              ],
                              "type": "function (address) payable external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "deposit",
                                  "referencedDeclaration": 5621,
                                  "type": "function (address) payable external"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 5459,
                                      "type": "contract Escrow",
                                      "value": "_escrow"
                                    },
                                    "id": 5504,
                                    "name": "Identifier",
                                    "src": "2587:7:102"
                                  }
                                ],
                                "id": 5506,
                                "name": "MemberAccess",
                                "src": "2587:15:102"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5501,
                                  "type": "uint256",
                                  "value": "amount"
                                },
                                "id": 5507,
                                "name": "Identifier",
                                "src": "2611:6:102"
                              }
                            ],
                            "id": 5508,
                            "name": "FunctionCallOptions",
                            "src": "2587:32:102"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 5499,
                              "type": "address",
                              "value": "dest"
                            },
                            "id": 5509,
                            "name": "Identifier",
                            "src": "2620:4:102"
                          }
                        ],
                        "id": 5510,
                        "name": "FunctionCall",
                        "src": "2587:38:102"
                      }
                    ],
                    "id": 5511,
                    "name": "ExpressionStatement",
                    "src": "2587:38:102"
                  }
                ],
                "id": 5512,
                "name": "Block",
                "src": "2577:55:102"
              }
            ],
            "id": 5513,
            "name": "FunctionDefinition",
            "src": "2506:126:102"
          }
        ],
        "id": 5514,
        "name": "ContractDefinition",
        "src": "1047:1587:102"
      }
    ],
    "id": 5515,
    "name": "SourceUnit",
    "src": "33:2602:102"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.3+commit.9bfce1f6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-14T01:48:59.869Z",
  "devdoc": {
    "details": "Simple implementation of a https://consensys.github.io/smart-contract-best-practices/recommendations/#favor-pull-over-push-for-external-calls[pull-payment] strategy, where the paying contract doesn't interact directly with the receiver account, which must withdraw its payments itself. Pull-payments are often considered the best practice when it comes to sending Ether, security-wise. It prevents recipients from blocking execution, and eliminates reentrancy concerns. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]. To use, derive from the `PullPayment` contract, and use {_asyncTransfer} instead of Solidity's `transfer` function. Payees can query their due payments with {payments}, and retrieve them with {withdrawPayments}.",
    "kind": "dev",
    "methods": {
      "payments(address)": {
        "details": "Returns the payments owed to an address.",
        "params": {
          "dest": "The creditor's address."
        }
      },
      "withdrawPayments(address)": {
        "details": "Withdraw accumulated payments, forwarding all gas to the recipient. Note that _any_ account can call this function, not just the `payee`. This means that contracts unaware of the `PullPayment` protocol can still receive funds this way, by having a separate account call {withdrawPayments}. WARNING: Forwarding all gas opens the door to reentrancy vulnerabilities. Make sure you trust the recipient, or are either following the checks-effects-interactions pattern or using {ReentrancyGuard}.",
        "params": {
          "payee": "Whose payments will be withdrawn."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}