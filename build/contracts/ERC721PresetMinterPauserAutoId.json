{
  "contractName": "ERC721PresetMinterPauserAutoId",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.3+commit.9bfce1f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{ERC721} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers  - token ID and URI autogeneration This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"constructor\":{\"details\":\"Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. Token URIs will be autogenerated based on `baseURI` and their token IDs. See {ERC721-tokenURI}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mint(address)\":{\"details\":\"Creates a new token for `to`. Its token ID will be automatically assigned (and available on the emitted {IERC721-Transfer} event), and the token URI autogenerated based on the base URI passed at construction. See {ERC721-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC721Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC721Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/presets/ERC721PresetMinterPauserAutoId.sol\":\"ERC721PresetMinterPauserAutoId\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x37ff88aa5ca8f533e31b9e1cb5354816b15bb7d41c904ea1c8f5dd5a78d6da25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3731db435ced7084f2cb3947e708371c10a2e3f654dcfe2a237fc8fbdafbe5f\",\"dweb:/ipfs/QmUyiwkuiP2fYBVaTwwY82sJKxJyPQaBqAtS4uG6iaUSP7\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x5bf492ea76e279b8ea67bc480bd846279dc50a4f6312f745a792a256b5162433\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dfcf0fe9dc6677741198d4a51ced5095459f0c05365d8fe8f03e61159bfde99\",\"dweb:/ipfs/QmUq71YNeu1QBZbdY6hD5v49KvuG8xiWZf2SeTPfR3dqGN\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd970f51e3a77790c2f02b5b1759827c3b897c3d98c407b3631e8af32e3dc93c\",\"dweb:/ipfs/QmPF85Amgbqjk3SNZKsPCsqCw8JfwYEPMnnhvMJUyX58je\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x3b21f2c8d626de3b9925ae33e972d8bf5c8b1bffb3f4ee94daeed7d0679036e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f8d45329fecbf0836ad7543330c3ecd0f8d0ffa42d4016278c3eb2215fdcdfe\",\"dweb:/ipfs/QmXWLT7GcnHtA5NiD6MFi2CV3EWJY4wv5mLNnypqYDrxL3\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/presets/ERC721PresetMinterPauserAutoId.sol\":{\"keccak256\":\"0xba76d375dde9e3dec5d3099fe1b9b59314e3171af2cffef1b94e584f57ccae8d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d34d18b458f58e9a1f8b5488e0f56a677b96faef322cdf88f36f66ebc2447e7d\",\"dweb:/ipfs/QmQczf18xKV7davWkepMmcDbwFVKAxpva25HCzmKQsmFB8\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x55b87fb876c0d37cfdf2937784f10515105f086c1aceb6f9c251965a3bc75f76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7424d132bbb5971763f194aed9ff0f9bcd18a6b02332fd5d892fe3b5ab4a7478\",\"dweb:/ipfs/QmbP9p1gRtK7x1eZqdFMLRaSriNhFUhJcfKTm6USYLL6LJ\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC721/ERC721Burnable.sol\":{\"keccak256\":\"0x3b9582c1b41be9bb437ad958e15d4d5665f74b976bb8da5f8546d7c7acd6c530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2baf19bcfcab819327a91ac6a5b1ffadb239081101973e70dcabf0ce01b2e63c\",\"dweb:/ipfs/QmYCPzCPP8wrsnP9N93SGPhoyUPpo5ovX5R5Es6wrmmA95\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC721/ERC721Pausable.sol\":{\"keccak256\":\"0x1c31a4c2ad1af9e25cd8f4ea941ebd6a6a932426183ab39c160cb8e51cfc704f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77dd2448bbeb4a8f6f3273042d02326fa6ba191827e5b37f6f68492b17d022c9\",\"dweb:/ipfs/QmRiAmuxtRcVRhXUymziiTD3r8SGcjxKN95ZLVKd2jtWjN\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5a9f5c29bd7cf0b345e14d97d5f685f68c07e1e5bfdd47e5bcec045e81b0b6ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://321cbaa1412fc8d013d8ad3fb5f98c0db7401ddacfb09b70828ea2cebe37397e\",\"dweb:/ipfs/Qmd3Hoc71w6rmxAR6A5VKW9at677VP1L5KDcJnyvu4ksu3\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xe6bd1b1218338b6f9fe17776f48623b4ac3d8a40405f74a44bc23c00abe2ca13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c354c3f6e9c487759aa7869be4fba68e0b2efc777b514d289c4cbd3ff8f7e1a\",\"dweb:/ipfs/QmdF9LcSYVmiUCL7JxLEYmSLrjga6zJsujfi6sgEJD4M1z\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xccb917776f826ac6b68bd5a15a5f711e3967848a52ba11e6104d9a4f593314a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://430255ad2229ced6d880e61a67bdc6e48dbbaed8354a7c1fe918cd8b8714a886\",\"dweb:/ipfs/QmTHY56odzqEpEC6v6tafaWMYY7vmULw25q5XHJLCCAeox\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x52146049d6709c870e8ddcd988b5155cb6c5d640cfcd8978aee52bc1ba2ec4eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada84513617b7c1b2f890b44503735abaec73a1acd030112a17aac7e6c66a4a1\",\"dweb:/ipfs/QmaiFwdio67iJrfjAdkMac24eJ5sS1qD7CZW6PhUU6KjiK\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xa6a15ddddcbf29d2922a1e0d4151b5d2d33da24b93cc9ebc12390e0d855532f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c119bcaecfa853d564ac88d312777f75fa1126a3bca88a3371adb0ad9f35cb0\",\"dweb:/ipfs/QmY9UPuXeSKq86Zh38fE43VGQPhKMN34mkuFSFqPcr6nvZ\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x21662e4254ce4ac8570b30cc7ab31435966b3cb778a56ba4d09276881cfb2437\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://acce8fe6adc670f9987a8b6aedc4cc0abcd0dcd2e152d649a12099d735bd7bad\",\"dweb:/ipfs/QmXAk17oK3daBmA8CGyVcU56L496jW3U6Ef1WkfHyB1JAV\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/utils/EnumerableMap.sol\":{\"keccak256\":\"0xf6bdf22fe038e5310b6f0372ecd01f221e2c0b248b45efc404542d94fcac9133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e798f3492180627d6616fa94925b61a9f105347eed9e895f3e18a0eb3dfcd3d\",\"dweb:/ipfs/QmQcTro5nv3Lopf4c4rEe1BuykCfPsjRsJmysdNXtHNUdt\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/utils/EnumerableSet.sol\":{\"keccak256\":\"0xae0992eb1ec30fd1ecdf2e04a6036decfc9797bf11dc1ec84b546b74318d5ec2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b61f99a64e999682ad7bfbb3a1c762a20a0a5b30f9f2011693fa857969af61f\",\"dweb:/ipfs/QmZystFY76wkWCf7V3yKh3buZuKVKbswiE7y6yU62kk3zi\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x7194bbdeff9cdab9c9347e326e558bdbe2b6df99b7fa812ec7a8ba07f80c4e2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2570d6d8d182650cdb035ea527a7e53fcaace463dda8eae4fdf91a48b225b693\",\"dweb:/ipfs/Qmbb6bjsVJJxdehZRPyeYwqZ2riY6E4d1cw5ewAzXXgVuj\"]},\"/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x16b5422892fbdd9648f12e59de85b42efd57d76b6d6b2358cb46e0f6d4a71aaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ef38821a4ee756757dc1ce9074ef6096d1b5c760627e92c0852d788dc636ea7\",\"dweb:/ipfs/QmdGwP6BtRMcp4VVJUWwTmXEjYmL52A8WZpBdFJYmzc9pJ\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162002e8838038062002e88833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405260200180516040519392919084640100000000821115620001bc57600080fd5b908301906020820185811115620001d257600080fd5b8251640100000000811182820188101715620001ed57600080fd5b82525081516020918201929091019080838360005b838110156200021c57818101518382015260200162000202565b50505050905090810190601f1680156200024a5780820380516001836020036101000a031916815260200191505b5060405250849150839050620002676301ffc9a760e01b6200035d565b81516200027c9060079060208501906200050e565b508051620002929060089060208401906200050e565b50620002a56380ac58cd60e01b6200035d565b620002b7635b5e139f60e01b6200035d565b620002c963780e9d6360e01b6200035d565b5050600b805460ff19169055620002eb6000620002e5620003e5565b620003e9565b6200031a7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6620002e5620003e5565b620003497f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a620002e5620003e5565b6200035481620003f9565b505050620005aa565b6001600160e01b03198082161415620003bd576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152600160208190526040909120805460ff19169091179055565b3390565b620003f582826200040e565b5050565b8051620003f590600a9060208401906200050e565b600082815260208181526040909120620004339183906200135162000487821b17901c565b15620003f55762000443620003e5565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006200049e836001600160a01b038416620004a7565b90505b92915050565b6000620004b58383620004f6565b620004ed57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620004a1565b506000620004a1565b60009081526001919091016020526040902054151590565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200055157805160ff191683800117855562000581565b8280016001018555821562000581579182015b828111156200058157825182559160200191906001019062000564565b506200058f92915062000593565b5090565b5b808211156200058f576000815560010162000594565b6128ce80620005ba6000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80636a6278421161010f578063a22cb465116100a2578063d539139311610071578063d5391393146106a3578063d547741f146106ab578063e63ab1e9146106d7578063e985e9c5146106df576101f0565b8063a22cb46514610575578063b88d4fde146105a3578063c87b56dd14610669578063ca15c87314610686576101f0565b80639010d07c116100de5780639010d07c1461051657806391d148541461053957806395d89b4114610565578063a217fddf1461056d576101f0565b80636a627842146104ba5780636c0360eb146104e057806370a08231146104e85780638456cb591461050e576101f0565b80632f745c591161018757806342966c681161015657806342966c681461045b5780634f6ccce7146104785780635c975abb146104955780636352211e1461049d576101f0565b80632f745c59146103c557806336568abe146103f15780633f4ba83a1461041d57806342842e0e14610425576101f0565b806318160ddd116101c357806318160ddd1461032c57806323b872dd14610346578063248a9ca31461037c5780632f2ff15d14610399576101f0565b806301ffc9a7146101f557806306fdde0314610248578063081812fc146102c5578063095ea7b3146102fe575b600080fd5b6102346004803603602081101561020b57600080fd5b50357fffffffff000000000000000000000000000000000000000000000000000000001661070d565b604080519115158252519081900360200190f35b610250610748565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561028a578181015183820152602001610272565b50505050905090810190601f1680156102b75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102e2600480360360208110156102db57600080fd5b50356107de565b604080516001600160a01b039092168252519081900360200190f35b61032a6004803603604081101561031457600080fd5b506001600160a01b038135169060200135610840565b005b61033461091b565b60408051918252519081900360200190f35b61032a6004803603606081101561035c57600080fd5b506001600160a01b0381358116916020810135909116906040013561092c565b6103346004803603602081101561039257600080fd5b5035610983565b61032a600480360360408110156103af57600080fd5b50803590602001356001600160a01b0316610998565b610334600480360360408110156103db57600080fd5b506001600160a01b038135169060200135610a04565b61032a6004803603604081101561040757600080fd5b50803590602001356001600160a01b0316610a2f565b61032a610a90565b61032a6004803603606081101561043b57600080fd5b506001600160a01b03813581169160208101359091169060400135610b01565b61032a6004803603602081101561047157600080fd5b5035610b1c565b6103346004803603602081101561048e57600080fd5b5035610b6e565b610234610b84565b6102e2600480360360208110156104b357600080fd5b5035610b8d565b61032a600480360360208110156104d057600080fd5b50356001600160a01b0316610bb5565b610250610c39565b610334600480360360208110156104fe57600080fd5b50356001600160a01b0316610c9a565b61032a610d02565b6102e26004803603604081101561052c57600080fd5b5080359060200135610d71565b6102346004803603604081101561054f57600080fd5b50803590602001356001600160a01b0316610d89565b610250610da1565b610334610e02565b61032a6004803603604081101561058b57600080fd5b506001600160a01b0381351690602001351515610e07565b61032a600480360360808110156105b957600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156105f457600080fd5b82018360208201111561060657600080fd5b8035906020019184600183028401116401000000008311171561062857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610f2a945050505050565b6102506004803603602081101561067f57600080fd5b5035610f88565b6103346004803603602081101561069c57600080fd5b503561126b565b610334611282565b61032a600480360360408110156106c157600080fd5b50803590602001356001600160a01b03166112a6565b6103346112ff565b610234600480360360408110156106f557600080fd5b506001600160a01b0381358116916020013516611323565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081526001602052604090205460ff165b919050565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107d45780601f106107a9576101008083540402835291602001916107d4565b820191906000526020600020905b8154815290600101906020018083116107b757829003601f168201915b5050505050905090565b60006107e982611366565b6108245760405162461bcd60e51b815260040180806020018281038252602c8152602001806126e7602c913960400191505060405180910390fd5b506000908152600560205260409020546001600160a01b031690565b600061084b82610b8d565b9050806001600160a01b0316836001600160a01b0316141561089e5760405162461bcd60e51b815260040180806020018281038252602181526020018061276b6021913960400191505060405180910390fd5b806001600160a01b03166108b0611373565b6001600160a01b031614806108d157506108d1816108cc611373565b611323565b61090c5760405162461bcd60e51b815260040180806020018281038252603881526020018061263a6038913960400191505060405180910390fd5b6109168383611377565b505050565b600061092760036113fd565b905090565b61093d610937611373565b82611408565b6109785760405162461bcd60e51b815260040180806020018281038252603181526020018061278c6031913960400191505060405180910390fd5b6109168383836114ac565b60009081526020819052604090206002015490565b6000828152602081905260409020600201546109bb906109b6611373565b610d89565b6109f65760405162461bcd60e51b815260040180806020018281038252602f81526020018061251b602f913960400191505060405180910390fd5b610a0082826115f8565b5050565b6001600160a01b0382166000908152600260205260408120610a269083611661565b90505b92915050565b610a37611373565b6001600160a01b0316816001600160a01b031614610a865760405162461bcd60e51b815260040180806020018281038252602f81526020018061286a602f913960400191505060405180910390fd5b610a00828261166d565b610abc7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6109b6611373565b610af75760405162461bcd60e51b815260040180806020018281038252604081526020018061282a6040913960400191505060405180910390fd5b610aff6116d6565b565b61091683838360405180602001604052806000815250610f2a565b610b27610937611373565b610b625760405162461bcd60e51b81526004018080602001828103825260308152602001806127fa6030913960400191505060405180910390fd5b610b6b8161179b565b50565b600080610b7c600384611868565b509392505050565b600b5460ff1690565b6000610a298260405180606001604052806029815260200161269c6029913960039190611884565b610be17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66109b6611373565b610c1c5760405162461bcd60e51b815260040180806020018281038252603d8152602001806127bd603d913960400191505060405180910390fd5b610c2f81610c2a600c61189b565b61189f565b610b6b600c6119cd565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107d45780601f106107a9576101008083540402835291602001916107d4565b60006001600160a01b038216610ce15760405162461bcd60e51b815260040180806020018281038252602a815260200180612672602a913960400191505060405180910390fd5b6001600160a01b0382166000908152600260205260409020610a29906113fd565b610d2e7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6109b6611373565b610d695760405162461bcd60e51b815260040180806020018281038252603e81526020018061257c603e913960400191505060405180910390fd5b610aff6119d6565b6000828152602081905260408120610a269083611661565b6000828152602081905260408120610a269083611a82565b60088054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107d45780601f106107a9576101008083540402835291602001916107d4565b600081565b610e0f611373565b6001600160a01b0316826001600160a01b03161415610e75576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060066000610e82611373565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001692151592909217909155610ee4611373565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b610f3b610f35611373565b83611408565b610f765760405162461bcd60e51b815260040180806020018281038252603181526020018061278c6031913960400191505060405180910390fd5b610f8284848484611a97565b50505050565b6060610f9382611366565b610fce5760405162461bcd60e51b815260040180806020018281038252602f81526020018061273c602f913960400191505060405180910390fd5b60008281526009602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156110635780601f1061103857610100808354040283529160200191611063565b820191906000526020600020905b81548152906001019060200180831161104657829003601f168201915b5050600a549394505050506002600019610100600184161502019091160461108c579050610743565b80511561117b57600a8160405160200180838054600181600116156101000203166002900480156110f45780601f106110d25761010080835404028352918201916110f4565b820191906000526020600020905b8154815290600101906020018083116110e0575b5050825160208401908083835b6020831061113e57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611101565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050610743565b600a61118684611ae9565b60405160200180838054600181600116156101000203166002900480156111e45780601f106111c25761010080835404028352918201916111e4565b820191906000526020600020905b8154815290600101906020018083116111d0575b5050825160208401908083835b6020831061122e57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016111f1565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b6000818152602081905260408120610a29906113fd565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6000828152602081905260409020600201546112c4906109b6611373565b610a865760405162461bcd60e51b815260040180806020018281038252603081526020018061260a6030913960400191505060405180910390fd5b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6000610a26836001600160a01b038416611bf8565b6000610a29600383611c42565b3390565b600081815260056020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03841690811790915581906113c482610b8d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610a298261189b565b600061141382611366565b61144e5760405162461bcd60e51b815260040180806020018281038252602c8152602001806125de602c913960400191505060405180910390fd5b600061145983610b8d565b9050806001600160a01b0316846001600160a01b031614806114945750836001600160a01b0316611489846107de565b6001600160a01b0316145b806114a457506114a48185611323565b949350505050565b826001600160a01b03166114bf82610b8d565b6001600160a01b0316146115045760405162461bcd60e51b81526004018080602001828103825260298152602001806127136029913960400191505060405180910390fd5b6001600160a01b0382166115495760405162461bcd60e51b81526004018080602001828103825260248152602001806125ba6024913960400191505060405180910390fd5b611554838383611c4e565b61155f600082611377565b6001600160a01b03831660009081526002602052604090206115819082611c59565b506001600160a01b03821660009081526002602052604090206115a49082611c65565b506115b160038284611c71565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008281526020819052604090206116109082611351565b15610a005761161d611373565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610a268383611c87565b60008281526020819052604090206116859082611ceb565b15610a0057611692611373565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600b5460ff1661172d576040805162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015290519081900360640190fd5b600b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61177e611373565b604080516001600160a01b039092168252519081900360200190a1565b60006117a682610b8d565b90506117b481600084611c4e565b6117bf600083611377565b60008281526009602052604090205460026000196101006001841615020190911604156117fd5760008281526009602052604081206117fd91612475565b6001600160a01b038116600090815260026020526040902061181f9083611c59565b5061182b600383611d00565b5060405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60008080806118778686611d0c565b9097909650945050505050565b6000611891848484611d87565b90505b9392505050565b5490565b6001600160a01b0382166118fa576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b61190381611366565b15611955576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b61196160008383611c4e565b6001600160a01b03821660009081526002602052604090206119839082611c65565b5061199060038284611c71565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80546001019055565b600b5460ff1615611a2e576040805162461bcd60e51b815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015290519081900360640190fd5b600b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861177e611373565b6000610a26836001600160a01b038416611e51565b611aa28484846114ac565b611aae84848484611e69565b610f825760405162461bcd60e51b815260040180806020018281038252603281526020018061254a6032913960400191505060405180910390fd5b606081611b2a575060408051808201909152600181527f30000000000000000000000000000000000000000000000000000000000000006020820152610743565b8160005b8115611b4257600101600a82049150611b2e565b60608167ffffffffffffffff81118015611b5b57600080fd5b506040519080825280601f01601f191660200182016040528015611b86576020820181803683370190505b50859350905060001982015b8315611bef57600a840660300160f81b82828060019003935081518110611bb557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a84049350611b92565b50949350505050565b6000611c048383611e51565b611c3a57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a29565b506000610a29565b6000610a268383611e51565b610916838383612045565b6000610a268383612094565b6000610a268383611bf8565b600061189184846001600160a01b03851661215a565b81546000908210611cc95760405162461bcd60e51b81526004018080602001828103825260228152602001806124ce6022913960400191505060405180910390fd5b826000018281548110611cd857fe5b9060005260206000200154905092915050565b6000610a26836001600160a01b038416612094565b6000610a2683836121f1565b815460009081908310611d505760405162461bcd60e51b81526004018080602001828103825260228152602001806126c56022913960400191505060405180910390fd5b6000846000018481548110611d6157fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008281526001840160205260408120548281611e225760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611de7578181015183820152602001611dcf565b50505050905090810190601f168015611e145780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110611e3557fe5b9060005260206000209060020201600101549150509392505050565b60009081526001919091016020526040902054151590565b6000611e7d846001600160a01b03166122c5565b611e89575060016114a4565b6060611fda7f150b7a0200000000000000000000000000000000000000000000000000000000611eb7611373565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611f1e578181015183820152602001611f06565b50505050905090810190601f168015611f4b5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405180606001604052806032815260200161254a603291396001600160a01b03881691906122cb565b90506000818060200190516020811015611ff357600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001492505050949350505050565b612050838383610916565b612058610b84565b156109165760405162461bcd60e51b815260040180806020018281038252602b8152602001806124f0602b913960400191505060405180910390fd5b6000818152600183016020526040812054801561215057835460001980830191908101906000908790839081106120c757fe5b90600052602060002001549050808760000184815481106120e457fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061211457fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610a29565b6000915050610a29565b6000828152600184016020526040812054806121bf575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055611894565b828560000160018303815481106121d257fe5b9060005260206000209060020201600101819055506000915050611894565b60008181526001830160205260408120548015612150578354600019808301919081019060009087908390811061222457fe5b906000526020600020906002020190508087600001848154811061224457fe5b60009182526020808320845460029093020191825560019384015491840191909155835482528983019052604090209084019055865487908061228357fe5b6000828152602080822060026000199094019384020182815560019081018390559290935588815289820190925260408220919091559450610a299350505050565b3b151590565b60606118918484600085856122df856122c5565b612330576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b6020831061238d57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101612350565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146123ef576040519150601f19603f3d011682016040523d82523d6000602084013e6123f4565b606091505b509150915061240482828661240f565b979650505050505050565b6060831561241e575081611894565b82511561242e5782518084602001fd5b60405162461bcd60e51b8152602060048201818152845160248401528451859391928392604401919085019080838360008315611de7578181015183820152602001611dcf565b50805460018160011615610100020316600290046000825580601f1061249b5750610b6b565b601f016020900490600052602060002090810190610b6b91905b808211156124c957600081556001016124b5565b509056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732315061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e744552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f2070617573654552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b654552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e744552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220bbd43e7f77db75eb58ad7c53bf4549ff7e83fc897b5a219298598a5be4d2f3b464736f6c63430007030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101f05760003560e01c80636a6278421161010f578063a22cb465116100a2578063d539139311610071578063d5391393146106a3578063d547741f146106ab578063e63ab1e9146106d7578063e985e9c5146106df576101f0565b8063a22cb46514610575578063b88d4fde146105a3578063c87b56dd14610669578063ca15c87314610686576101f0565b80639010d07c116100de5780639010d07c1461051657806391d148541461053957806395d89b4114610565578063a217fddf1461056d576101f0565b80636a627842146104ba5780636c0360eb146104e057806370a08231146104e85780638456cb591461050e576101f0565b80632f745c591161018757806342966c681161015657806342966c681461045b5780634f6ccce7146104785780635c975abb146104955780636352211e1461049d576101f0565b80632f745c59146103c557806336568abe146103f15780633f4ba83a1461041d57806342842e0e14610425576101f0565b806318160ddd116101c357806318160ddd1461032c57806323b872dd14610346578063248a9ca31461037c5780632f2ff15d14610399576101f0565b806301ffc9a7146101f557806306fdde0314610248578063081812fc146102c5578063095ea7b3146102fe575b600080fd5b6102346004803603602081101561020b57600080fd5b50357fffffffff000000000000000000000000000000000000000000000000000000001661070d565b604080519115158252519081900360200190f35b610250610748565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561028a578181015183820152602001610272565b50505050905090810190601f1680156102b75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102e2600480360360208110156102db57600080fd5b50356107de565b604080516001600160a01b039092168252519081900360200190f35b61032a6004803603604081101561031457600080fd5b506001600160a01b038135169060200135610840565b005b61033461091b565b60408051918252519081900360200190f35b61032a6004803603606081101561035c57600080fd5b506001600160a01b0381358116916020810135909116906040013561092c565b6103346004803603602081101561039257600080fd5b5035610983565b61032a600480360360408110156103af57600080fd5b50803590602001356001600160a01b0316610998565b610334600480360360408110156103db57600080fd5b506001600160a01b038135169060200135610a04565b61032a6004803603604081101561040757600080fd5b50803590602001356001600160a01b0316610a2f565b61032a610a90565b61032a6004803603606081101561043b57600080fd5b506001600160a01b03813581169160208101359091169060400135610b01565b61032a6004803603602081101561047157600080fd5b5035610b1c565b6103346004803603602081101561048e57600080fd5b5035610b6e565b610234610b84565b6102e2600480360360208110156104b357600080fd5b5035610b8d565b61032a600480360360208110156104d057600080fd5b50356001600160a01b0316610bb5565b610250610c39565b610334600480360360208110156104fe57600080fd5b50356001600160a01b0316610c9a565b61032a610d02565b6102e26004803603604081101561052c57600080fd5b5080359060200135610d71565b6102346004803603604081101561054f57600080fd5b50803590602001356001600160a01b0316610d89565b610250610da1565b610334610e02565b61032a6004803603604081101561058b57600080fd5b506001600160a01b0381351690602001351515610e07565b61032a600480360360808110156105b957600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156105f457600080fd5b82018360208201111561060657600080fd5b8035906020019184600183028401116401000000008311171561062857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610f2a945050505050565b6102506004803603602081101561067f57600080fd5b5035610f88565b6103346004803603602081101561069c57600080fd5b503561126b565b610334611282565b61032a600480360360408110156106c157600080fd5b50803590602001356001600160a01b03166112a6565b6103346112ff565b610234600480360360408110156106f557600080fd5b506001600160a01b0381358116916020013516611323565b7fffffffff00000000000000000000000000000000000000000000000000000000811660009081526001602052604090205460ff165b919050565b60078054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107d45780601f106107a9576101008083540402835291602001916107d4565b820191906000526020600020905b8154815290600101906020018083116107b757829003601f168201915b5050505050905090565b60006107e982611366565b6108245760405162461bcd60e51b815260040180806020018281038252602c8152602001806126e7602c913960400191505060405180910390fd5b506000908152600560205260409020546001600160a01b031690565b600061084b82610b8d565b9050806001600160a01b0316836001600160a01b0316141561089e5760405162461bcd60e51b815260040180806020018281038252602181526020018061276b6021913960400191505060405180910390fd5b806001600160a01b03166108b0611373565b6001600160a01b031614806108d157506108d1816108cc611373565b611323565b61090c5760405162461bcd60e51b815260040180806020018281038252603881526020018061263a6038913960400191505060405180910390fd5b6109168383611377565b505050565b600061092760036113fd565b905090565b61093d610937611373565b82611408565b6109785760405162461bcd60e51b815260040180806020018281038252603181526020018061278c6031913960400191505060405180910390fd5b6109168383836114ac565b60009081526020819052604090206002015490565b6000828152602081905260409020600201546109bb906109b6611373565b610d89565b6109f65760405162461bcd60e51b815260040180806020018281038252602f81526020018061251b602f913960400191505060405180910390fd5b610a0082826115f8565b5050565b6001600160a01b0382166000908152600260205260408120610a269083611661565b90505b92915050565b610a37611373565b6001600160a01b0316816001600160a01b031614610a865760405162461bcd60e51b815260040180806020018281038252602f81526020018061286a602f913960400191505060405180910390fd5b610a00828261166d565b610abc7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6109b6611373565b610af75760405162461bcd60e51b815260040180806020018281038252604081526020018061282a6040913960400191505060405180910390fd5b610aff6116d6565b565b61091683838360405180602001604052806000815250610f2a565b610b27610937611373565b610b625760405162461bcd60e51b81526004018080602001828103825260308152602001806127fa6030913960400191505060405180910390fd5b610b6b8161179b565b50565b600080610b7c600384611868565b509392505050565b600b5460ff1690565b6000610a298260405180606001604052806029815260200161269c6029913960039190611884565b610be17f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66109b6611373565b610c1c5760405162461bcd60e51b815260040180806020018281038252603d8152602001806127bd603d913960400191505060405180910390fd5b610c2f81610c2a600c61189b565b61189f565b610b6b600c6119cd565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107d45780601f106107a9576101008083540402835291602001916107d4565b60006001600160a01b038216610ce15760405162461bcd60e51b815260040180806020018281038252602a815260200180612672602a913960400191505060405180910390fd5b6001600160a01b0382166000908152600260205260409020610a29906113fd565b610d2e7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6109b6611373565b610d695760405162461bcd60e51b815260040180806020018281038252603e81526020018061257c603e913960400191505060405180910390fd5b610aff6119d6565b6000828152602081905260408120610a269083611661565b6000828152602081905260408120610a269083611a82565b60088054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107d45780601f106107a9576101008083540402835291602001916107d4565b600081565b610e0f611373565b6001600160a01b0316826001600160a01b03161415610e75576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060066000610e82611373565b6001600160a01b0390811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001692151592909217909155610ee4611373565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b610f3b610f35611373565b83611408565b610f765760405162461bcd60e51b815260040180806020018281038252603181526020018061278c6031913960400191505060405180910390fd5b610f8284848484611a97565b50505050565b6060610f9382611366565b610fce5760405162461bcd60e51b815260040180806020018281038252602f81526020018061273c602f913960400191505060405180910390fd5b60008281526009602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156110635780601f1061103857610100808354040283529160200191611063565b820191906000526020600020905b81548152906001019060200180831161104657829003601f168201915b5050600a549394505050506002600019610100600184161502019091160461108c579050610743565b80511561117b57600a8160405160200180838054600181600116156101000203166002900480156110f45780601f106110d25761010080835404028352918201916110f4565b820191906000526020600020905b8154815290600101906020018083116110e0575b5050825160208401908083835b6020831061113e57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611101565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050610743565b600a61118684611ae9565b60405160200180838054600181600116156101000203166002900480156111e45780601f106111c25761010080835404028352918201916111e4565b820191906000526020600020905b8154815290600101906020018083116111d0575b5050825160208401908083835b6020831061122e57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe090920191602091820191016111f1565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b6000818152602081905260408120610a29906113fd565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6000828152602081905260409020600201546112c4906109b6611373565b610a865760405162461bcd60e51b815260040180806020018281038252603081526020018061260a6030913960400191505060405180910390fd5b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6000610a26836001600160a01b038416611bf8565b6000610a29600383611c42565b3390565b600081815260056020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03841690811790915581906113c482610b8d565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610a298261189b565b600061141382611366565b61144e5760405162461bcd60e51b815260040180806020018281038252602c8152602001806125de602c913960400191505060405180910390fd5b600061145983610b8d565b9050806001600160a01b0316846001600160a01b031614806114945750836001600160a01b0316611489846107de565b6001600160a01b0316145b806114a457506114a48185611323565b949350505050565b826001600160a01b03166114bf82610b8d565b6001600160a01b0316146115045760405162461bcd60e51b81526004018080602001828103825260298152602001806127136029913960400191505060405180910390fd5b6001600160a01b0382166115495760405162461bcd60e51b81526004018080602001828103825260248152602001806125ba6024913960400191505060405180910390fd5b611554838383611c4e565b61155f600082611377565b6001600160a01b03831660009081526002602052604090206115819082611c59565b506001600160a01b03821660009081526002602052604090206115a49082611c65565b506115b160038284611c71565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008281526020819052604090206116109082611351565b15610a005761161d611373565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610a268383611c87565b60008281526020819052604090206116859082611ceb565b15610a0057611692611373565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b600b5460ff1661172d576040805162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015290519081900360640190fd5b600b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa61177e611373565b604080516001600160a01b039092168252519081900360200190a1565b60006117a682610b8d565b90506117b481600084611c4e565b6117bf600083611377565b60008281526009602052604090205460026000196101006001841615020190911604156117fd5760008281526009602052604081206117fd91612475565b6001600160a01b038116600090815260026020526040902061181f9083611c59565b5061182b600383611d00565b5060405182906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b60008080806118778686611d0c565b9097909650945050505050565b6000611891848484611d87565b90505b9392505050565b5490565b6001600160a01b0382166118fa576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b61190381611366565b15611955576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b61196160008383611c4e565b6001600160a01b03821660009081526002602052604090206119839082611c65565b5061199060038284611c71565b5060405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80546001019055565b600b5460ff1615611a2e576040805162461bcd60e51b815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015290519081900360640190fd5b600b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25861177e611373565b6000610a26836001600160a01b038416611e51565b611aa28484846114ac565b611aae84848484611e69565b610f825760405162461bcd60e51b815260040180806020018281038252603281526020018061254a6032913960400191505060405180910390fd5b606081611b2a575060408051808201909152600181527f30000000000000000000000000000000000000000000000000000000000000006020820152610743565b8160005b8115611b4257600101600a82049150611b2e565b60608167ffffffffffffffff81118015611b5b57600080fd5b506040519080825280601f01601f191660200182016040528015611b86576020820181803683370190505b50859350905060001982015b8315611bef57600a840660300160f81b82828060019003935081518110611bb557fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a84049350611b92565b50949350505050565b6000611c048383611e51565b611c3a57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610a29565b506000610a29565b6000610a268383611e51565b610916838383612045565b6000610a268383612094565b6000610a268383611bf8565b600061189184846001600160a01b03851661215a565b81546000908210611cc95760405162461bcd60e51b81526004018080602001828103825260228152602001806124ce6022913960400191505060405180910390fd5b826000018281548110611cd857fe5b9060005260206000200154905092915050565b6000610a26836001600160a01b038416612094565b6000610a2683836121f1565b815460009081908310611d505760405162461bcd60e51b81526004018080602001828103825260228152602001806126c56022913960400191505060405180910390fd5b6000846000018481548110611d6157fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008281526001840160205260408120548281611e225760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611de7578181015183820152602001611dcf565b50505050905090810190601f168015611e145780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110611e3557fe5b9060005260206000209060020201600101549150509392505050565b60009081526001919091016020526040902054151590565b6000611e7d846001600160a01b03166122c5565b611e89575060016114a4565b6060611fda7f150b7a0200000000000000000000000000000000000000000000000000000000611eb7611373565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611f1e578181015183820152602001611f06565b50505050905090810190601f168015611f4b5780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405180606001604052806032815260200161254a603291396001600160a01b03881691906122cb565b90506000818060200190516020811015611ff357600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a02000000000000000000000000000000000000000000000000000000001492505050949350505050565b612050838383610916565b612058610b84565b156109165760405162461bcd60e51b815260040180806020018281038252602b8152602001806124f0602b913960400191505060405180910390fd5b6000818152600183016020526040812054801561215057835460001980830191908101906000908790839081106120c757fe5b90600052602060002001549050808760000184815481106120e457fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061211457fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610a29565b6000915050610a29565b6000828152600184016020526040812054806121bf575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055611894565b828560000160018303815481106121d257fe5b9060005260206000209060020201600101819055506000915050611894565b60008181526001830160205260408120548015612150578354600019808301919081019060009087908390811061222457fe5b906000526020600020906002020190508087600001848154811061224457fe5b60009182526020808320845460029093020191825560019384015491840191909155835482528983019052604090209084019055865487908061228357fe5b6000828152602080822060026000199094019384020182815560019081018390559290935588815289820190925260408220919091559450610a299350505050565b3b151590565b60606118918484600085856122df856122c5565b612330576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b6020831061238d57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101612350565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146123ef576040519150601f19603f3d011682016040523d82523d6000602084013e6123f4565b606091505b509150915061240482828661240f565b979650505050505050565b6060831561241e575081611894565b82511561242e5782518084602001fd5b60405162461bcd60e51b8152602060048201818152845160248401528451859391928392604401919085019080838360008315611de7578181015183820152602001611dcf565b50805460018160011615610100020316600290046000825580601f1061249b5750610b6b565b601f016020900490600052602060002090810190610b6b91905b808211156124c957600081556001016124b5565b509056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732315061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e744552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f2070617573654552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b654552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e744552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a2646970667358221220bbd43e7f77db75eb58ad7c53bf4549ff7e83fc897b5a219298598a5be4d2f3b464736f6c63430007030033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "899:2608:108:-:0;;;1484:285;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1484:285:108;;;;;;;;;;-1:-1:-1;1484:285:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1484:285:108;;;;;;;;;;-1:-1:-1;1484:285:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1484:285:108;;;;;;;;;;-1:-1:-1;1484:285:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1484:285:108;;-1:-1:-1;1568:4:108;;-1:-1:-1;1574:6:108;;-1:-1:-1;759:40:95;-1:-1:-1;;;759:18:95;:40::i;:::-;3642:13:127;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;3665:17:127;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;3770:40:127;-1:-1:-1;;;3770:18:127;:40::i;:::-;3820:49;-1:-1:-1;;;3820:18:127;:49::i;:::-;3879:51;-1:-1:-1;;;3879:18:127;:51::i;:::-;-1:-1:-1;;931:7:144;:15;;-1:-1:-1;;931:15:144;;;1592:44:108::1;941:5:144::0;1623:12:108::1;:10;:12::i;:::-;1592:10;:44::i;:::-;1647:37;1083:24;1671:12;:10;:12::i;1647:37::-;1694;1151:24;1718:12;:10;:12::i;1694:37::-;1742:20;1754:7:::0;1742:11:::1;:20::i;:::-;1484:285:::0;;;899:2608;;1490:198:95;-1:-1:-1;;;;;;1573:25:95;;;;;1565:66;;;;;-1:-1:-1;;;1565:66:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1641:33:95;;;;;1677:4;1641:33;;;;;;;;:40;;-1:-1:-1;;1641:40:95;;;;;;1490:198::o;598:104:13:-;685:10;598:104;:::o;6586:110:19:-;6664:25;6675:4;6681:7;6664:10;:25::i;:::-;6586:110;;:::o;14655:98:127:-;14727:19;;;;:8;;:19;;;;;:::i;7023:184:19:-;7096:6;:12;;;;;;;;;;;:33;;7121:7;;7096:24;;;;;:33;;:::i;:::-;7092:109;;;7177:12;:10;:12::i;:::-;-1:-1:-1;;;;;7150:40:19;7168:7;-1:-1:-1;;;;;7150:40:19;7162:4;7150:40;;;;;;;;;;7023:184;;:::o;6429:141:143:-;6499:4;6522:41;6527:3;-1:-1:-1;;;;;6547:14:143;;6522:4;:41::i;:::-;6515:48;;6429:141;;;;;:::o;1640:404::-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:143;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:143;2015:12;;3805:127;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;899:2608:108:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;899:2608:108;;;-1:-1:-1;899:2608:108;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "899:2608:108:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;956:140:95;;;;;;;;;;;;;;;;-1:-1:-1;956:140:95;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4493:90:127;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7100:209;;;;;;;;;;;;;;;;-1:-1:-1;7100:209:127;;:::i;:::-;;;;-1:-1:-1;;;;;7100:209:127;;;;;;;;;;;;;;6658:381;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6658:381:127;;;;;;;;:::i;:::-;;6168:200;;;:::i;:::-;;;;;;;;;;;;;;;;7948:300;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7948:300:127;;;;;;;;;;;;;;;;;:::i;4280:112:19:-;;;;;;;;;;;;;;;;-1:-1:-1;4280:112:19;;:::i;4642:223::-;;;;;;;;;;;;;;;;-1:-1:-1;4642:223:19;;;;;;-1:-1:-1;;;;;4642:223:19;;:::i;5945:152:127:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5945:152:127;;;;;;;;:::i;5816:205:19:-;;;;;;;;;;;;;;;;-1:-1:-1;5816:205:19;;;;;;-1:-1:-1;;;;;5816:205:19;;:::i;3132:182:108:-;;;:::i;8314:149:127:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8314:149:127;;;;;;;;;;;;;;;;;:::i;453:241:128:-;;;;;;;;;;;;;;;;-1:-1:-1;453:241:128;;:::i;6440:161:127:-;;;;;;;;;;;;;;;;-1:-1:-1;6440:161:127;;:::i;1048:76:144:-;;;:::i;4264:167:127:-;;;;;;;;;;;;;;;;-1:-1:-1;4264:167:127;;:::i;2144:400:108:-;;;;;;;;;;;;;;;;-1:-1:-1;2144:400:108;-1:-1:-1;;;;;2144:400:108;;:::i;5779:87:127:-;;;:::i;3996:211::-;;;;;;;;;;;;;;;;-1:-1:-1;3996:211:127;-1:-1:-1;;;;;3996:211:127;;:::i;2748:176:108:-;;;:::i;3963:136:19:-;;;;;;;;;;;;;;;;-1:-1:-1;3963:136:19;;;;;;;:::i;2948:137::-;;;;;;;;;;;;;;;;-1:-1:-1;2948:137:19;;;;;;-1:-1:-1;;;;;2948:137:19;;:::i;4647:94:127:-;;;:::i;1725:49:19:-;;;:::i;7376:290:127:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7376:290:127;;;;;;;;;;:::i;8529:282::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8529:282:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8529:282:127;;-1:-1:-1;8529:282:127;;-1:-1:-1;;;;;8529:282:127:i;4807:740::-;;;;;;;;;;;;;;;;-1:-1:-1;4807:740:127;;:::i;3253:125:19:-;;;;;;;;;;;;;;;;-1:-1:-1;3253:125:19;;:::i;1045:62:108:-;;;:::i;5099:226:19:-;;;;;;;;;;;;;;;;-1:-1:-1;5099:226:19;;;;;;-1:-1:-1;;;;;5099:226:19;;:::i;1113:62:108:-;;;:::i;7732:154:127:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7732:154:127;;;;;;;;;;:::i;956:140:95:-;1056:33;;;1033:4;1056:33;;;:20;:33;;;;;;;;956:140;;;;:::o;4493:90:127:-;4571:5;4564:12;;;;;;;;-1:-1:-1;;4564:12:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4539:13;;4564:12;;4571:5;;4564:12;;4571:5;4564:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4493:90;:::o;7100:209::-;7168:7;7195:16;7203:7;7195;:16::i;:::-;7187:73;;;;-1:-1:-1;;;7187:73:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7278:24:127;;;;:15;:24;;;;;;-1:-1:-1;;;;;7278:24:127;;7100:209::o;6658:381::-;6738:13;6754:16;6762:7;6754;:16::i;:::-;6738:32;;6794:5;-1:-1:-1;;;;;6788:11:127;:2;-1:-1:-1;;;;;6788:11:127;;;6780:57;;;;-1:-1:-1;;;6780:57:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6872:5;-1:-1:-1;;;;;6856:21:127;:12;:10;:12::i;:::-;-1:-1:-1;;;;;6856:21:127;;:62;;;;6881:37;6898:5;6905:12;:10;:12::i;:::-;6881:16;:37::i;:::-;6848:152;;;;-1:-1:-1;;;6848:152:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7011:21;7020:2;7024:7;7011:8;:21::i;:::-;6658:381;;;:::o;6168:200::-;6221:7;6340:21;:12;:19;:21::i;:::-;6333:28;;6168:200;:::o;7948:300::-;8107:41;8126:12;:10;:12::i;:::-;8140:7;8107:18;:41::i;:::-;8099:103;;;;-1:-1:-1;;;8099:103:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8213:28;8223:4;8229:2;8233:7;8213:9;:28::i;4280:112:19:-;4337:7;4363:12;;;;;;;;;;:22;;;;4280:112::o;4642:223::-;4733:6;:12;;;;;;;;;;:22;;;4725:45;;4757:12;:10;:12::i;:::-;4725:7;:45::i;:::-;4717:105;;;;-1:-1:-1;;;4717:105:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4833:25;4844:4;4850:7;4833:10;:25::i;:::-;4642:223;;:::o;5945:152:127:-;-1:-1:-1;;;;;6060:20:127;;6034:7;6060:20;;;:13;:20;;;;;:30;;6084:5;6060:23;:30::i;:::-;6053:37;;5945:152;;;;;:::o;5816:205:19:-;5913:12;:10;:12::i;:::-;-1:-1:-1;;;;;5902:23:19;:7;-1:-1:-1;;;;;5902:23:19;;5894:83;;;;-1:-1:-1;;;5894:83:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5988:26;6000:4;6006:7;5988:11;:26::i;3132:182:108:-;3184:34;1151:24;3205:12;:10;:12::i;3184:34::-;3176:111;;;;-1:-1:-1;;;3176:111:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3297:10;:8;:10::i;:::-;3132:182::o;8314:149:127:-;8417:39;8434:4;8440:2;8444:7;8417:39;;;;;;;;;;;;:16;:39::i;453:241:128:-;569:41;588:12;:10;:12::i;569:41::-;561:102;;;;-1:-1:-1;;;561:102:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;673:14;679:7;673:5;:14::i;:::-;453:241;:::o;6440:161:127:-;6507:7;;6548:22;:12;6564:5;6548:15;:22::i;:::-;-1:-1:-1;6526:44:127;6440:161;-1:-1:-1;;;6440:161:127:o;1048:76:144:-;1110:7;;;;1048:76;:::o;4264:167:127:-;4328:7;4354:70;4371:7;4354:70;;;;;;;;;;;;;;;;;:12;;:70;:16;:70::i;2144:400:108:-;2203:34;1083:24;2224:12;:10;:12::i;2203:34::-;2195:108;;;;-1:-1:-1;;;2195:108:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2464:36;2470:2;2474:25;:15;:23;:25::i;:::-;2464:5;:36::i;:::-;2510:27;:15;:25;:27::i;5779:87:127:-;5851:8;5844:15;;;;;;;;-1:-1:-1;;5844:15:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5819:13;;5844:15;;5851:8;;5844:15;;5851:8;5844:15;;;;;;;;;;;;;;;;;;;;;;;;3996:211;4060:7;-1:-1:-1;;;;;4087:19:127;;4079:74;;;;-1:-1:-1;;;4079:74:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4171:20:127;;;;;;:13;:20;;;;;:29;;:27;:29::i;2748:176:108:-;2798:34;1151:24;2819:12;:10;:12::i;2798:34::-;2790:109;;;;-1:-1:-1;;;2790:109:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2909:8;:6;:8::i;3963:136:19:-;4036:7;4062:12;;;;;;;;;;:30;;4086:5;4062:23;:30::i;2948:137::-;3017:4;3040:12;;;;;;;;;;:38;;3070:7;3040:29;:38::i;4647:94:127:-;4727:7;4720:14;;;;;;;;-1:-1:-1;;4720:14:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4695:13;;4720:14;;4727:7;;4720:14;;4727:7;4720:14;;;;;;;;;;;;;;;;;;;;;;;;1725:49:19;1770:4;1725:49;:::o;7376:290:127:-;7490:12;:10;:12::i;:::-;-1:-1:-1;;;;;7478:24:127;:8;-1:-1:-1;;;;;7478:24:127;;;7470:62;;;;;-1:-1:-1;;;7470:62:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;7588:8;7543:18;:32;7562:12;:10;:12::i;:::-;-1:-1:-1;;;;;7543:32:127;;;;;;;;;;;;;;;;;-1:-1:-1;7543:32:127;;;:42;;;;;;;;;;;;:53;;;;;;;;;;;;;;7626:12;:10;:12::i;:::-;-1:-1:-1;;;;;7611:48:127;;7650:8;7611:48;;;;;;;;;;;;;;;;;;;;7376:290;;:::o;8529:282::-;8660:41;8679:12;:10;:12::i;:::-;8693:7;8660:18;:41::i;:::-;8652:103;;;;-1:-1:-1;;;8652:103:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8765:39;8779:4;8785:2;8789:7;8798:5;8765:13;:39::i;:::-;8529:282;;;;:::o;4807:740::-;4872:13;4905:16;4913:7;4905;:16::i;:::-;4897:76;;;;-1:-1:-1;;;4897:76:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5010:19;;;;:10;:19;;;;;;;;;4984:45;;;;;;-1:-1:-1;;4984:45:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;5010:19;4984:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5108:8:127;5102:22;4984:45;;-1:-1:-1;;;;5102:22:127;-1:-1:-1;;5102:22:127;;;;;;;;;;;5098:74;;5152:9;-1:-1:-1;5145:16:127;;5098:74;5274:23;;:27;5270:110;;5348:8;5358:9;5331:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5331:37:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5317:52;;;;;5270:110;5510:8;5520:18;:7;:16;:18::i;:::-;5493:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5493:46:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5479:61;;;4807:740;;;:::o;3253:125:19:-;3316:7;3342:12;;;;;;;;;;:29;;:27;:29::i;1045:62:108:-;1083:24;1045:62;:::o;5099:226:19:-;5191:6;:12;;;;;;;;;;:22;;;5183:45;;5215:12;:10;:12::i;5183:45::-;5175:106;;;;-1:-1:-1;;;5175:106:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1113:62:108;1151:24;1113:62;:::o;7732:154:127:-;-1:-1:-1;;;;;7844:25:127;;;7821:4;7844:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;7732:154::o;6429:141:143:-;6499:4;6522:41;6527:3;-1:-1:-1;;;;;6547:14:143;;6522:4;:41::i;10245:117:127:-;10302:4;10325:30;:12;10347:7;10325:21;:30::i;598:104:13:-;685:10;598:104;:::o;15901:155:127:-;15966:24;;;;:15;:24;;;;;:29;;;;-1:-1:-1;;;;;15966:29:127;;;;;;;;:24;;16019:16;15966:24;16019:7;:16::i;:::-;-1:-1:-1;;;;;16010:39:127;;;;;;;;;;;15901:155;;:::o;7031:121:142:-;7100:7;7126:19;7134:3;7126:7;:19::i;10520:329:127:-;10605:4;10629:16;10637:7;10629;:16::i;:::-;10621:73;;;;-1:-1:-1;;;10621:73:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10704:13;10720:16;10728:7;10720;:16::i;:::-;10704:32;;10765:5;-1:-1:-1;;;;;10754:16:127;:7;-1:-1:-1;;;;;10754:16:127;;:51;;;;10798:7;-1:-1:-1;;;;;10774:31:127;:20;10786:7;10774:11;:20::i;:::-;-1:-1:-1;;;;;10774:31:127;;10754:51;:87;;;;10809:32;10826:5;10833:7;10809:16;:32::i;:::-;10746:96;10520:329;-1:-1:-1;;;;10520:329:127:o;13514:559::-;13631:4;-1:-1:-1;;;;;13611:24:127;:16;13619:7;13611;:16::i;:::-;-1:-1:-1;;;;;13611:24:127;;13603:78;;;;-1:-1:-1;;;13603:78:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13699:16:127;;13691:65;;;;-1:-1:-1;;;13691:65:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13767:39;13788:4;13794:2;13798:7;13767:20;:39::i;:::-;13868:29;13885:1;13889:7;13868:8;:29::i;:::-;-1:-1:-1;;;;;13908:19:127;;;;;;:13;:19;;;;;:35;;13935:7;13908:26;:35::i;:::-;-1:-1:-1;;;;;;13953:17:127;;;;;;:13;:17;;;;;:30;;13975:7;13953:21;:30::i;:::-;-1:-1:-1;13994:29:127;:12;14011:7;14020:2;13994:16;:29::i;:::-;;14058:7;14054:2;-1:-1:-1;;;;;14039:27:127;14048:4;-1:-1:-1;;;;;14039:27:127;;;;;;;;;;;13514:559;;;:::o;7023:184:19:-;7096:6;:12;;;;;;;;;;:33;;7121:7;7096:24;:33::i;:::-;7092:109;;;7177:12;:10;:12::i;:::-;-1:-1:-1;;;;;7150:40:19;7168:7;-1:-1:-1;;;;;7150:40:19;7162:4;7150:40;;;;;;;;;;7023:184;;:::o;9214:135:143:-;9285:7;9319:22;9323:3;9335:5;9319:3;:22::i;7213:188:19:-;7287:6;:12;;;;;;;;;;:36;;7315:7;7287:27;:36::i;:::-;7283:112;;;7371:12;:10;:12::i;:::-;-1:-1:-1;;;;;7344:40:19;7362:7;-1:-1:-1;;;;;7344:40:19;7356:4;7344:40;;;;;;;;;;7213:188;;:::o;2050:117:144:-;1618:7;;;;1610:40;;;;;-1:-1:-1;;;1610:40:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;2108:7:::1;:15:::0;;;::::1;::::0;;2138:22:::1;2147:12;:10;:12::i;:::-;2138:22;::::0;;-1:-1:-1;;;;;2138:22:144;;::::1;::::0;;;;;;;::::1;::::0;;::::1;2050:117::o:0;12688:502:127:-;12747:13;12763:16;12771:7;12763;:16::i;:::-;12747:32;;12790:48;12811:5;12826:1;12830:7;12790:20;:48::i;:::-;12876:29;12893:1;12897:7;12876:8;:29::i;:::-;12961:19;;;;:10;:19;;;;;12955:33;;-1:-1:-1;;12955:33:127;;;;;;;;;;;:38;12951:95;;13016:19;;;;:10;:19;;;;;13009:26;;;:::i;:::-;-1:-1:-1;;;;;13056:20:127;;;;;;:13;:20;;;;;:36;;13084:7;13056:27;:36::i;:::-;-1:-1:-1;13103:28:127;:12;13123:7;13103:19;:28::i;:::-;-1:-1:-1;13147:36:127;;13175:7;;13171:1;;-1:-1:-1;;;;;13147:36:127;;;;;13171:1;;13147:36;12688:502;;:::o;7480:224:142:-;7560:7;;;;7619:22;7623:3;7635:5;7619:3;:22::i;:::-;7588:53;;;;-1:-1:-1;7480:224:142;-1:-1:-1;;;;;7480:224:142:o;8123:202::-;8230:7;8272:44;8277:3;8297;8303:12;8272:4;:44::i;:::-;8264:53;-1:-1:-1;8123:202:142;;;;;;:::o;1106:112:141:-;1197:14;;1106:112::o;12078:393:127:-;-1:-1:-1;;;;;12157:16:127;;12149:61;;;;;-1:-1:-1;;;12149:61:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12229:16;12237:7;12229;:16::i;:::-;12228:17;12220:58;;;;;-1:-1:-1;;;12220:58:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;12289:45;12318:1;12322:2;12326:7;12289:20;:45::i;:::-;-1:-1:-1;;;;;12345:17:127;;;;;;:13;:17;;;;;:30;;12367:7;12345:21;:30::i;:::-;-1:-1:-1;12386:29:127;:12;12403:7;12412:2;12386:16;:29::i;:::-;-1:-1:-1;12431:33:127;;12456:7;;-1:-1:-1;;;;;12431:33:127;;;12448:1;;12431:33;;12448:1;;12431:33;12078:393;;:::o;1224:178:141:-;1376:19;;1394:1;1376:19;;;1224:178::o;1803:115:144:-;1354:7;;;;1353:8;1345:37;;;;;-1:-1:-1;;;1345:37:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;1862:7:::1;:14:::0;;;::::1;1872:4;1862:14;::::0;;1891:20:::1;1898:12;:10;:12::i;6966:156:143:-:0;7046:4;7069:46;7079:3;-1:-1:-1;;;;;7099:14:143;;7069:9;:46::i;9673:269:127:-;9786:28;9796:4;9802:2;9806:7;9786:9;:28::i;:::-;9832:48;9855:4;9861:2;9865:7;9874:5;9832:22;:48::i;:::-;9824:111;;;;-1:-1:-1;;;9824:111:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;210:723:145;266:13;483:10;479:51;;-1:-1:-1;509:10:145;;;;;;;;;;;;;;;;;;;479:51;554:5;539:12;593:75;600:9;;593:75;;625:8;;655:2;647:10;;;;593:75;;;677:19;709:6;699:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;699:17:145;-1:-1:-1;769:5:145;;-1:-1:-1;677:39:145;-1:-1:-1;;;742:10:145;;784:112;791:9;;784:112;;857:2;850:4;:9;845:2;:14;834:27;;816:6;823:7;;;;;;;816:15;;;;;;;;;;;:45;;;;;;;;;;-1:-1:-1;883:2:145;875:10;;;;784:112;;;-1:-1:-1;919:6:145;210:723;-1:-1:-1;;;;210:723:145:o;1640:404:143:-;1703:4;1724:21;1734:3;1739:5;1724:9;:21::i;:::-;1719:319;;-1:-1:-1;1761:23:143;;;;;;;;:11;:23;;;;;;;;;;;;;1941:18;;1919:19;;;:12;;;:19;;;;;;:40;;;;1973:11;;1719:319;-1:-1:-1;2022:5:143;2015:12;;6799:149:142;6883:4;6906:35;6916:3;6936;6906:9;:35::i;3320:185:108:-;3453:45;3480:4;3486:2;3490:7;3453:26;:45::i;8329:135:143:-;8399:4;8422:35;8430:3;8450:5;8422:7;:35::i;8032:129::-;8099:4;8122:32;8127:3;8147:5;8122:4;:32::i;6247:174:142:-;6336:4;6359:55;6364:3;6384;-1:-1:-1;;;;;6398:14:142;;6359:4;:55::i;4452:201:143:-;4546:18;;4519:7;;4546:26;-1:-1:-1;4538:73:143;;;;-1:-1:-1;;;4538:73:143;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4628:3;:11;;4640:5;4628:18;;;;;;;;;;;;;;;;4621:25;;4452:201;;;;:::o;6738:147::-;6811:4;6834:44;6842:3;-1:-1:-1;;;;;6862:14:143;;6834:7;:44::i;6580:140:142:-;6657:4;6680:33;6688:3;6708;6680:7;:33::i;4942:274::-;5045:19;;5009:7;;;;5045:27;-1:-1:-1;5037:74:142;;;;-1:-1:-1;;;5037:74:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5122:22;5147:3;:12;;5160:5;5147:19;;;;;;;;;;;;;;;;;;5122:44;;5184:5;:10;;;5196:5;:12;;;5176:33;;;;;4942:274;;;;;:::o;5623:315::-;5717:7;5755:17;;;:12;;;:17;;;;;;5805:12;5790:13;5782:36;;;;-1:-1:-1;;;5782:36:142;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5871:3;:12;;5895:1;5884:8;:12;5871:26;;;;;;;;;;;;;;;;;;:33;;;5864:40;;;5623:315;;;;;:::o;3805:127:143:-;3878:4;3901:19;;;:12;;;;;:19;;;;;;:24;;;3805:127::o;15306:589:127:-;15426:4;15451:15;:2;-1:-1:-1;;;;;15451:13:127;;:15::i;:::-;15446:58;;-1:-1:-1;15489:4:127;15482:11;;15446:58;15513:23;15539:246;15591:45;15650:12;:10;:12::i;:::-;15676:4;15694:7;15715:5;15555:175;;;;;;-1:-1:-1;;;;;15555:175:127;;;;;;-1:-1:-1;;;;;15555:175:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15539:246;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15539:15:127;;;:246;:15;:246::i;:::-;15513:272;;15795:13;15822:10;15811:32;;;;;;;;;;;;;;;-1:-1:-1;15811:32:127;15861:26;;15871:16;15861:26;;-1:-1:-1;;;15306:589:127;;;;;;:::o;595:237:130:-;704:45;731:4;737:2;741:7;704:26;:45::i;:::-;769:8;:6;:8::i;:::-;768:9;760:65;;;;-1:-1:-1;;;760:65:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2212:1512:143;2278:4;2415:19;;;:12;;;:19;;;;;;2449:15;;2445:1273;;2878:18;;-1:-1:-1;;2830:14:143;;;;2878:22;;;;2806:21;;2878:3;;:22;;3160;;;;;;;;;;;;;;3140:42;;3303:9;3274:3;:11;;3286:13;3274:26;;;;;;;;;;;;;;;;;;;:38;;;;3378:23;;;3420:1;3378:12;;;:23;;;;;;3404:17;;;3378:43;;3527:17;;3378:3;;3527:17;;;;;;;;;;;;;;;;;;;;;;3619:3;:12;;:19;3632:5;3619:19;;;;;;;;;;;3612:26;;;3660:4;3653:11;;;;;;;;2445:1273;3702:5;3695:12;;;;;1836:678:142;1912:4;2045:17;;;:12;;;:17;;;;;;2077:13;2073:435;;-1:-1:-1;;2161:38:142;;;;;;;;;;;;;;;;;;2143:57;;;;;;;;:12;:57;;;;;;;;;;;;;;;;;;;;;;;;2355:19;;2335:17;;;:12;;;:17;;;;;;;:39;2388:11;;2073:435;2466:5;2430:3;:12;;2454:1;2443:8;:12;2430:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2492:5;2485:12;;;;;2682:1517;2746:4;2879:17;;;:12;;;:17;;;;;;2911:13;;2907:1286;;3337:19;;-1:-1:-1;;3291:12:142;;;;3337:23;;;;3267:21;;3337:3;;:23;;3629;;;;;;;;;;;;;;;;3600:52;;3774:9;3744:3;:12;;3757:13;3744:27;;;;;;;;;;;;;;;;:39;;:27;;;;;:39;;;;;;;;;;;;;;;3862:14;;3849:28;;:12;;;:28;;;;;3880:17;;;3849:48;;4003:18;;3849:3;;4003:18;;;;;;;;;;;;;;-1:-1:-1;;4003:18:142;;;;;;;;;;;;;;;;;;;;;4096:17;;;:12;;;:17;;;;;;4089:24;;;;4003:18;-1:-1:-1;4128:11:142;;-1:-1:-1;;;;4128:11:142;726:413:139;1086:20;1124:8;;;726:413::o;3581:193::-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3684;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:139;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:139:o;6111:725::-;6226:12;6254:7;6250:580;;;-1:-1:-1;6284:10:139;6277:17;;6250:580;6395:17;;:21;6391:429;;6653:10;6647:17;6713:15;6700:10;6696:2;6692:19;6685:44;6602:145;6785:20;;-1:-1:-1;;;6785:20:139;;;;;;;;;;;;;;;;;6792:12;;6785:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../access/AccessControl.sol\";\nimport \"../GSN/Context.sol\";\nimport \"../utils/Counters.sol\";\nimport \"../token/ERC721/ERC721.sol\";\nimport \"../token/ERC721/ERC721Burnable.sol\";\nimport \"../token/ERC721/ERC721Pausable.sol\";\n\n/**\n * @dev {ERC721} token, including:\n *\n *  - ability for holders to burn (destroy) their tokens\n *  - a minter role that allows for token minting (creation)\n *  - a pauser role that allows to stop all token transfers\n *  - token ID and URI autogeneration\n *\n * This contract uses {AccessControl} to lock permissioned functions using the\n * different roles - head to its documentation for details.\n *\n * The account that deploys the contract will be granted the minter and pauser\n * roles, as well as the default admin role, which will let it grant both minter\n * and pauser roles to other accounts.\n */\ncontract ERC721PresetMinterPauserAutoId is Context, AccessControl, ERC721Burnable, ERC721Pausable {\n    using Counters for Counters.Counter;\n\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n    Counters.Counter private _tokenIdTracker;\n\n    /**\n     * @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n     * account that deploys the contract.\n     *\n     * Token URIs will be autogenerated based on `baseURI` and their token IDs.\n     * See {ERC721-tokenURI}.\n     */\n    constructor(string memory name, string memory symbol, string memory baseURI) ERC721(name, symbol) {\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n\n        _setupRole(MINTER_ROLE, _msgSender());\n        _setupRole(PAUSER_ROLE, _msgSender());\n\n        _setBaseURI(baseURI);\n    }\n\n    /**\n     * @dev Creates a new token for `to`. Its token ID will be automatically\n     * assigned (and available on the emitted {IERC721-Transfer} event), and the token\n     * URI autogenerated based on the base URI passed at construction.\n     *\n     * See {ERC721-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `MINTER_ROLE`.\n     */\n    function mint(address to) public virtual {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have minter role to mint\");\n\n        // We cannot just use balanceOf to create the new tokenId because tokens\n        // can be burned (destroyed), so we need a separate counter.\n        _mint(to, _tokenIdTracker.current());\n        _tokenIdTracker.increment();\n    }\n\n    /**\n     * @dev Pauses all token transfers.\n     *\n     * See {ERC721Pausable} and {Pausable-_pause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function pause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\");\n        _pause();\n    }\n\n    /**\n     * @dev Unpauses all token transfers.\n     *\n     * See {ERC721Pausable} and {Pausable-_unpause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function unpause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\");\n        _unpause();\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual override(ERC721, ERC721Pausable) {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n}\n",
  "sourcePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/presets/ERC721PresetMinterPauserAutoId.sol",
  "ast": {
    "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/presets/ERC721PresetMinterPauserAutoId.sol",
    "exportedSymbols": {
      "AccessControl": [
        3618
      ],
      "Address": [
        12295
      ],
      "Context": [
        2171
      ],
      "Counters": [
        12430
      ],
      "ERC165": [
        4778
      ],
      "ERC721": [
        10466
      ],
      "ERC721Burnable": [
        10496
      ],
      "ERC721Pausable": [
        10560
      ],
      "ERC721PresetMinterPauserAutoId": [
        6290
      ],
      "EnumerableMap": [
        12885
      ],
      "EnumerableSet": [
        13365
      ],
      "IERC165": [
        4790
      ],
      "IERC721": [
        10676
      ],
      "IERC721Enumerable": [
        10707
      ],
      "IERC721Metadata": [
        10734
      ],
      "IERC721Receiver": [
        10752
      ],
      "Pausable": [
        13455
      ],
      "SafeMath": [
        5149
      ],
      "Strings": [
        13542
      ]
    },
    "id": 6291,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6139,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".0",
          "<",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:31:108"
      },
      {
        "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/access/AccessControl.sol",
        "file": "../access/AccessControl.sol",
        "id": 6140,
        "nodeType": "ImportDirective",
        "scope": 6291,
        "sourceUnit": 3619,
        "src": "66:37:108",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/GSN/Context.sol",
        "file": "../GSN/Context.sol",
        "id": 6141,
        "nodeType": "ImportDirective",
        "scope": 6291,
        "sourceUnit": 2172,
        "src": "104:28:108",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/utils/Counters.sol",
        "file": "../utils/Counters.sol",
        "id": 6142,
        "nodeType": "ImportDirective",
        "scope": 6291,
        "sourceUnit": 12431,
        "src": "133:31:108",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "../token/ERC721/ERC721.sol",
        "id": 6143,
        "nodeType": "ImportDirective",
        "scope": 6291,
        "sourceUnit": 10467,
        "src": "165:36:108",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC721/ERC721Burnable.sol",
        "file": "../token/ERC721/ERC721Burnable.sol",
        "id": 6144,
        "nodeType": "ImportDirective",
        "scope": 6291,
        "sourceUnit": 10497,
        "src": "202:44:108",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC721/ERC721Pausable.sol",
        "file": "../token/ERC721/ERC721Pausable.sol",
        "id": 6145,
        "nodeType": "ImportDirective",
        "scope": 6291,
        "sourceUnit": 10561,
        "src": "247:44:108",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6147,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2171,
              "src": "942:7:108",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$2171",
                "typeString": "contract Context"
              }
            },
            "id": 6148,
            "nodeType": "InheritanceSpecifier",
            "src": "942:7:108"
          },
          {
            "baseName": {
              "id": 6149,
              "name": "AccessControl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3618,
              "src": "951:13:108",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControl_$3618",
                "typeString": "contract AccessControl"
              }
            },
            "id": 6150,
            "nodeType": "InheritanceSpecifier",
            "src": "951:13:108"
          },
          {
            "baseName": {
              "id": 6151,
              "name": "ERC721Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10496,
              "src": "966:14:108",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$10496",
                "typeString": "contract ERC721Burnable"
              }
            },
            "id": 6152,
            "nodeType": "InheritanceSpecifier",
            "src": "966:14:108"
          },
          {
            "baseName": {
              "id": 6153,
              "name": "ERC721Pausable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10560,
              "src": "982:14:108",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Pausable_$10560",
                "typeString": "contract ERC721Pausable"
              }
            },
            "id": 6154,
            "nodeType": "InheritanceSpecifier",
            "src": "982:14:108"
          }
        ],
        "contractDependencies": [
          2171,
          3618,
          4778,
          4790,
          10466,
          10496,
          10560,
          10676,
          10707,
          10734,
          13455
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6146,
          "nodeType": "StructuredDocumentation",
          "src": "293:605:108",
          "text": " @dev {ERC721} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n  - token ID and URI autogeneration\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts."
        },
        "fullyImplemented": true,
        "id": 6290,
        "linearizedBaseContracts": [
          6290,
          10560,
          13455,
          10496,
          10466,
          10707,
          10734,
          10676,
          4778,
          4790,
          3618,
          2171
        ],
        "name": "ERC721PresetMinterPauserAutoId",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6157,
            "libraryName": {
              "id": 6155,
              "name": "Counters",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12430,
              "src": "1009:8:108",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Counters_$12430",
                "typeString": "library Counters"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1003:36:108",
            "typeName": {
              "id": 6156,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12390,
              "src": "1022:16:108",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$12390_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 6162,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 6290,
            "src": "1045:62:108",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6158,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1045:7:108",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 6160,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1093:13:108",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 6159,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1083:9:108",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6161,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1083:24:108",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 6167,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nodeType": "VariableDeclaration",
            "scope": 6290,
            "src": "1113:62:108",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 6163,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1113:7:108",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "5041555345525f524f4c45",
                  "id": 6165,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1161:13:108",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 6164,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1151:9:108",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 6166,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1151:24:108",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6169,
            "mutability": "mutable",
            "name": "_tokenIdTracker",
            "nodeType": "VariableDeclaration",
            "scope": 6290,
            "src": "1182:40:108",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$12390_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 6168,
              "name": "Counters.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 12390,
              "src": "1182:16:108",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$12390_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 6205,
              "nodeType": "Block",
              "src": "1582:187:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6184,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3361,
                        "src": "1603:18:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6185,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2159,
                          "src": "1623:10:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 6186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1623:12:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 6183,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3544,
                      "src": "1592:10:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 6187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1592:44:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6188,
                  "nodeType": "ExpressionStatement",
                  "src": "1592:44:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6190,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6162,
                        "src": "1658:11:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6191,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2159,
                          "src": "1671:10:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 6192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1671:12:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 6189,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3544,
                      "src": "1647:10:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 6193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1647:37:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6194,
                  "nodeType": "ExpressionStatement",
                  "src": "1647:37:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6196,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6167,
                        "src": "1705:11:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 6197,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2159,
                          "src": "1718:10:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 6198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1718:12:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 6195,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3544,
                      "src": "1694:10:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 6199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1694:37:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6200,
                  "nodeType": "ExpressionStatement",
                  "src": "1694:37:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6202,
                        "name": "baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6176,
                        "src": "1754:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 6201,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10374,
                      "src": "1742:11:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 6203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1742:20:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6204,
                  "nodeType": "ExpressionStatement",
                  "src": "1742:20:108"
                }
              ]
            },
            "documentation": {
              "id": 6170,
              "nodeType": "StructuredDocumentation",
              "src": "1229:250:108",
              "text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n Token URIs will be autogenerated based on `baseURI` and their token IDs.\n See {ERC721-tokenURI}."
            },
            "id": 6206,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 6179,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6172,
                    "src": "1568:4:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 6180,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6174,
                    "src": "1574:6:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 6181,
                "modifierName": {
                  "id": 6178,
                  "name": "ERC721",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 10466,
                  "src": "1561:6:108",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721_$10466_$",
                    "typeString": "type(contract ERC721)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1561:20:108"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6172,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 6206,
                  "src": "1496:18:108",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6171,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1496:6:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6174,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 6206,
                  "src": "1516:20:108",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6173,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1516:6:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6176,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "scope": 6206,
                  "src": "1538:21:108",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6175,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1538:6:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1495:65:108"
            },
            "returnParameters": {
              "id": 6182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1582:0:108"
            },
            "scope": 6290,
            "src": "1484:285:108",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6233,
              "nodeType": "Block",
              "src": "2185:359:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6214,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6162,
                            "src": "2211:11:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 6215,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2159,
                              "src": "2224:10:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 6216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2224:12:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 6213,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3407,
                          "src": "2203:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 6217,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2203:34:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 6218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2239:63:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        }
                      ],
                      "id": 6212,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2195:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2195:108:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6220,
                  "nodeType": "ExpressionStatement",
                  "src": "2195:108:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6222,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6209,
                        "src": "2470:2:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 6223,
                            "name": "_tokenIdTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6169,
                            "src": "2474:15:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$12390_storage",
                              "typeString": "struct Counters.Counter storage ref"
                            }
                          },
                          "id": 6224,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12401,
                          "src": "2474:23:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$12390_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$12390_storage_ptr_$",
                            "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 6225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2474:25:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6221,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10202,
                      "src": "2464:5:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 6226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2464:36:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6227,
                  "nodeType": "ExpressionStatement",
                  "src": "2464:36:108"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 6228,
                        "name": "_tokenIdTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6169,
                        "src": "2510:15:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$12390_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 6230,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12413,
                      "src": "2510:25:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$12390_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$12390_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 6231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2510:27:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6232,
                  "nodeType": "ExpressionStatement",
                  "src": "2510:27:108"
                }
              ]
            },
            "documentation": {
              "id": 6207,
              "nodeType": "StructuredDocumentation",
              "src": "1775:364:108",
              "text": " @dev Creates a new token for `to`. Its token ID will be automatically\n assigned (and available on the emitted {IERC721-Transfer} event), and the token\n URI autogenerated based on the base URI passed at construction.\n See {ERC721-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
            },
            "functionSelector": "6a627842",
            "id": 6234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6209,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 6234,
                  "src": "2158:10:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2158:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2157:12:108"
            },
            "returnParameters": {
              "id": 6211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2185:0:108"
            },
            "scope": 6290,
            "src": "2144:400:108",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6250,
              "nodeType": "Block",
              "src": "2780:144:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6240,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6167,
                            "src": "2806:11:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 6241,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2159,
                              "src": "2819:10:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 6242,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2819:12:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 6239,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3407,
                          "src": "2798:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 6243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2798:34:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f207061757365",
                        "id": 6244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2834:64:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        }
                      ],
                      "id": 6238,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2790:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2790:109:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6246,
                  "nodeType": "ExpressionStatement",
                  "src": "2790:109:108"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6247,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13438,
                      "src": "2909:6:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 6248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2909:8:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6249,
                  "nodeType": "ExpressionStatement",
                  "src": "2909:8:108"
                }
              ]
            },
            "documentation": {
              "id": 6235,
              "nodeType": "StructuredDocumentation",
              "src": "2550:193:108",
              "text": " @dev Pauses all token transfers.\n See {ERC721Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "8456cb59",
            "id": 6251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6236,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2762:2:108"
            },
            "returnParameters": {
              "id": 6237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2780:0:108"
            },
            "scope": 6290,
            "src": "2748:176:108",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6267,
              "nodeType": "Block",
              "src": "3166:148:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6257,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6167,
                            "src": "3192:11:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 6258,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2159,
                              "src": "3205:10:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 6259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3205:12:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 6256,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3407,
                          "src": "3184:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 6260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3184:34:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                        "id": 6261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3220:66:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        }
                      ],
                      "id": 6255,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3176:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3176:111:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6263,
                  "nodeType": "ExpressionStatement",
                  "src": "3176:111:108"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 6264,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13454,
                      "src": "3297:8:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 6265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3297:10:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6266,
                  "nodeType": "ExpressionStatement",
                  "src": "3297:10:108"
                }
              ]
            },
            "documentation": {
              "id": 6252,
              "nodeType": "StructuredDocumentation",
              "src": "2930:197:108",
              "text": " @dev Unpauses all token transfers.\n See {ERC721Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "3f4ba83a",
            "id": 6268,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3148:2:108"
            },
            "returnParameters": {
              "id": 6254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3166:0:108"
            },
            "scope": 6290,
            "src": "3132:182:108",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              10465,
              10559
            ],
            "body": {
              "id": 6288,
              "nodeType": "Block",
              "src": "3443:62:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6283,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6270,
                        "src": "3480:4:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6284,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6272,
                        "src": "3486:2:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6285,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6274,
                        "src": "3490:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 6280,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "3453:5:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721PresetMinterPauserAutoId_$6290",
                          "typeString": "contract super ERC721PresetMinterPauserAutoId"
                        }
                      },
                      "id": 6282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10559,
                      "src": "3453:26:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 6286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3453:45:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6287,
                  "nodeType": "ExpressionStatement",
                  "src": "3453:45:108"
                }
              ]
            },
            "id": 6289,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6278,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 6276,
                  "name": "ERC721",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 10466,
                  "src": "3419:6:108",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$10466",
                    "typeString": "contract ERC721"
                  }
                },
                {
                  "id": 6277,
                  "name": "ERC721Pausable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 10560,
                  "src": "3427:14:108",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721Pausable_$10560",
                    "typeString": "contract ERC721Pausable"
                  }
                }
              ],
              "src": "3410:32:108"
            },
            "parameters": {
              "id": 6275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6270,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 6289,
                  "src": "3350:12:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3350:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6272,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 6289,
                  "src": "3364:10:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6271,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3364:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6274,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 6289,
                  "src": "3376:15:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6273,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3376:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3349:43:108"
            },
            "returnParameters": {
              "id": 6279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3443:0:108"
            },
            "scope": 6290,
            "src": "3320:185:108",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 6291,
        "src": "899:2608:108"
      }
    ],
    "src": "33:3475:108"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/presets/ERC721PresetMinterPauserAutoId.sol",
      "exportedSymbols": {
        "AccessControl": [
          3618
        ],
        "Address": [
          12295
        ],
        "Context": [
          2171
        ],
        "Counters": [
          12430
        ],
        "ERC165": [
          4778
        ],
        "ERC721": [
          10466
        ],
        "ERC721Burnable": [
          10496
        ],
        "ERC721Pausable": [
          10560
        ],
        "ERC721PresetMinterPauserAutoId": [
          6290
        ],
        "EnumerableMap": [
          12885
        ],
        "EnumerableSet": [
          13365
        ],
        "IERC165": [
          4790
        ],
        "IERC721": [
          10676
        ],
        "IERC721Enumerable": [
          10707
        ],
        "IERC721Metadata": [
          10734
        ],
        "IERC721Receiver": [
          10752
        ],
        "Pausable": [
          13455
        ],
        "SafeMath": [
          5149
        ],
        "Strings": [
          13542
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.6",
            ".0",
            "<",
            "0.8",
            ".0"
          ]
        },
        "id": 6139,
        "name": "PragmaDirective",
        "src": "33:31:108"
      },
      {
        "attributes": {
          "SourceUnit": 3619,
          "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/access/AccessControl.sol",
          "file": "../access/AccessControl.sol",
          "scope": 6291,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6140,
        "name": "ImportDirective",
        "src": "66:37:108"
      },
      {
        "attributes": {
          "SourceUnit": 2172,
          "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/GSN/Context.sol",
          "file": "../GSN/Context.sol",
          "scope": 6291,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6141,
        "name": "ImportDirective",
        "src": "104:28:108"
      },
      {
        "attributes": {
          "SourceUnit": 12431,
          "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/utils/Counters.sol",
          "file": "../utils/Counters.sol",
          "scope": 6291,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6142,
        "name": "ImportDirective",
        "src": "133:31:108"
      },
      {
        "attributes": {
          "SourceUnit": 10467,
          "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC721/ERC721.sol",
          "file": "../token/ERC721/ERC721.sol",
          "scope": 6291,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6143,
        "name": "ImportDirective",
        "src": "165:36:108"
      },
      {
        "attributes": {
          "SourceUnit": 10497,
          "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC721/ERC721Burnable.sol",
          "file": "../token/ERC721/ERC721Burnable.sol",
          "scope": 6291,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6144,
        "name": "ImportDirective",
        "src": "202:44:108"
      },
      {
        "attributes": {
          "SourceUnit": 10561,
          "absolutePath": "/Volumes/Work/Crypto/GameCredits/bondingcontracts/contracts/openzeppelin/contracts/token/ERC721/ERC721Pausable.sol",
          "file": "../token/ERC721/ERC721Pausable.sol",
          "scope": 6291,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 6145,
        "name": "ImportDirective",
        "src": "247:44:108"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            2171,
            3618,
            4778,
            4790,
            10466,
            10496,
            10560,
            10676,
            10707,
            10734,
            13455
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            6290,
            10560,
            13455,
            10496,
            10466,
            10707,
            10734,
            10676,
            4778,
            4790,
            3618,
            2171
          ],
          "name": "ERC721PresetMinterPauserAutoId",
          "scope": 6291
        },
        "children": [
          {
            "attributes": {
              "text": " @dev {ERC721} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n  - token ID and URI autogeneration\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts."
            },
            "id": 6146,
            "name": "StructuredDocumentation",
            "src": "293:605:108"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "Context",
                  "referencedDeclaration": 2171,
                  "type": "contract Context"
                },
                "id": 6147,
                "name": "UserDefinedTypeName",
                "src": "942:7:108"
              }
            ],
            "id": 6148,
            "name": "InheritanceSpecifier",
            "src": "942:7:108"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "AccessControl",
                  "referencedDeclaration": 3618,
                  "type": "contract AccessControl"
                },
                "id": 6149,
                "name": "UserDefinedTypeName",
                "src": "951:13:108"
              }
            ],
            "id": 6150,
            "name": "InheritanceSpecifier",
            "src": "951:13:108"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC721Burnable",
                  "referencedDeclaration": 10496,
                  "type": "contract ERC721Burnable"
                },
                "id": 6151,
                "name": "UserDefinedTypeName",
                "src": "966:14:108"
              }
            ],
            "id": 6152,
            "name": "InheritanceSpecifier",
            "src": "966:14:108"
          },
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "ERC721Pausable",
                  "referencedDeclaration": 10560,
                  "type": "contract ERC721Pausable"
                },
                "id": 6153,
                "name": "UserDefinedTypeName",
                "src": "982:14:108"
              }
            ],
            "id": 6154,
            "name": "InheritanceSpecifier",
            "src": "982:14:108"
          },
          {
            "children": [
              {
                "attributes": {
                  "name": "Counters",
                  "referencedDeclaration": 12430,
                  "type": "library Counters"
                },
                "id": 6155,
                "name": "UserDefinedTypeName",
                "src": "1009:8:108"
              },
              {
                "attributes": {
                  "name": "Counters.Counter",
                  "referencedDeclaration": 12390,
                  "type": "struct Counters.Counter"
                },
                "id": 6156,
                "name": "UserDefinedTypeName",
                "src": "1022:16:108"
              }
            ],
            "id": 6157,
            "name": "UsingForDirective",
            "src": "1003:36:108"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "d5391393",
              "mutability": "constant",
              "name": "MINTER_ROLE",
              "scope": 6290,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bytes32",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "bytes32",
                  "type": "bytes32"
                },
                "id": 6158,
                "name": "ElementaryTypeName",
                "src": "1045:7:108"
              },
              {
                "attributes": {
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "isStructConstructorCall": false,
                  "lValueRequested": false,
                  "names": [
                    null
                  ],
                  "tryCall": false,
                  "type": "bytes32",
                  "type_conversion": false
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        }
                      ],
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": -8,
                      "type": "function (bytes memory) pure returns (bytes32)",
                      "value": "keccak256"
                    },
                    "id": 6159,
                    "name": "Identifier",
                    "src": "1083:9:108"
                  },
                  {
                    "attributes": {
                      "hexvalue": "4d494e5445525f524f4c45",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"MINTER_ROLE\"",
                      "value": "MINTER_ROLE"
                    },
                    "id": 6160,
                    "name": "Literal",
                    "src": "1093:13:108"
                  }
                ],
                "id": 6161,
                "name": "FunctionCall",
                "src": "1083:24:108"
              }
            ],
            "id": 6162,
            "name": "VariableDeclaration",
            "src": "1045:62:108"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "e63ab1e9",
              "mutability": "constant",
              "name": "PAUSER_ROLE",
              "scope": 6290,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bytes32",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "bytes32",
                  "type": "bytes32"
                },
                "id": 6163,
                "name": "ElementaryTypeName",
                "src": "1113:7:108"
              },
              {
                "attributes": {
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "isStructConstructorCall": false,
                  "lValueRequested": false,
                  "names": [
                    null
                  ],
                  "tryCall": false,
                  "type": "bytes32",
                  "type_conversion": false
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                          "typeString": "literal_string \"PAUSER_ROLE\""
                        }
                      ],
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": -8,
                      "type": "function (bytes memory) pure returns (bytes32)",
                      "value": "keccak256"
                    },
                    "id": 6164,
                    "name": "Identifier",
                    "src": "1151:9:108"
                  },
                  {
                    "attributes": {
                      "hexvalue": "5041555345525f524f4c45",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "string",
                      "type": "literal_string \"PAUSER_ROLE\"",
                      "value": "PAUSER_ROLE"
                    },
                    "id": 6165,
                    "name": "Literal",
                    "src": "1161:13:108"
                  }
                ],
                "id": 6166,
                "name": "FunctionCall",
                "src": "1151:24:108"
              }
            ],
            "id": 6167,
            "name": "VariableDeclaration",
            "src": "1113:62:108"
          },
          {
            "attributes": {
              "constant": false,
              "mutability": "mutable",
              "name": "_tokenIdTracker",
              "scope": 6290,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct Counters.Counter",
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "name": "Counters.Counter",
                  "referencedDeclaration": 12390,
                  "type": "struct Counters.Counter"
                },
                "id": 6168,
                "name": "UserDefinedTypeName",
                "src": "1182:16:108"
              }
            ],
            "id": 6169,
            "name": "VariableDeclaration",
            "src": "1182:40:108"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 6290,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n Token URIs will be autogenerated based on `baseURI` and their token IDs.\n See {ERC721-tokenURI}."
                },
                "id": 6170,
                "name": "StructuredDocumentation",
                "src": "1229:250:108"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "name",
                      "scope": 6206,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 6171,
                        "name": "ElementaryTypeName",
                        "src": "1496:6:108"
                      }
                    ],
                    "id": 6172,
                    "name": "VariableDeclaration",
                    "src": "1496:18:108"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "symbol",
                      "scope": 6206,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 6173,
                        "name": "ElementaryTypeName",
                        "src": "1516:6:108"
                      }
                    ],
                    "id": 6174,
                    "name": "VariableDeclaration",
                    "src": "1516:20:108"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "scope": 6206,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 6175,
                        "name": "ElementaryTypeName",
                        "src": "1538:6:108"
                      }
                    ],
                    "id": 6176,
                    "name": "VariableDeclaration",
                    "src": "1538:21:108"
                  }
                ],
                "id": 6177,
                "name": "ParameterList",
                "src": "1495:65:108"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6182,
                "name": "ParameterList",
                "src": "1582:0:108"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 10466,
                      "type": "type(contract ERC721)",
                      "value": "ERC721"
                    },
                    "id": 6178,
                    "name": "Identifier",
                    "src": "1561:6:108"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6172,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 6179,
                    "name": "Identifier",
                    "src": "1568:4:108"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 6174,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 6180,
                    "name": "Identifier",
                    "src": "1574:6:108"
                  }
                ],
                "id": 6181,
                "name": "ModifierInvocation",
                "src": "1561:20:108"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3544,
                              "type": "function (bytes32,address)",
                              "value": "_setupRole"
                            },
                            "id": 6183,
                            "name": "Identifier",
                            "src": "1592:10:108"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3361,
                              "type": "bytes32",
                              "value": "DEFAULT_ADMIN_ROLE"
                            },
                            "id": 6184,
                            "name": "Identifier",
                            "src": "1603:18:108"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2159,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 6185,
                                "name": "Identifier",
                                "src": "1623:10:108"
                              }
                            ],
                            "id": 6186,
                            "name": "FunctionCall",
                            "src": "1623:12:108"
                          }
                        ],
                        "id": 6187,
                        "name": "FunctionCall",
                        "src": "1592:44:108"
                      }
                    ],
                    "id": 6188,
                    "name": "ExpressionStatement",
                    "src": "1592:44:108"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3544,
                              "type": "function (bytes32,address)",
                              "value": "_setupRole"
                            },
                            "id": 6189,
                            "name": "Identifier",
                            "src": "1647:10:108"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6162,
                              "type": "bytes32",
                              "value": "MINTER_ROLE"
                            },
                            "id": 6190,
                            "name": "Identifier",
                            "src": "1658:11:108"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2159,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 6191,
                                "name": "Identifier",
                                "src": "1671:10:108"
                              }
                            ],
                            "id": 6192,
                            "name": "FunctionCall",
                            "src": "1671:12:108"
                          }
                        ],
                        "id": 6193,
                        "name": "FunctionCall",
                        "src": "1647:37:108"
                      }
                    ],
                    "id": 6194,
                    "name": "ExpressionStatement",
                    "src": "1647:37:108"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3544,
                              "type": "function (bytes32,address)",
                              "value": "_setupRole"
                            },
                            "id": 6195,
                            "name": "Identifier",
                            "src": "1694:10:108"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6167,
                              "type": "bytes32",
                              "value": "PAUSER_ROLE"
                            },
                            "id": 6196,
                            "name": "Identifier",
                            "src": "1705:11:108"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address payable",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2159,
                                  "type": "function () view returns (address payable)",
                                  "value": "_msgSender"
                                },
                                "id": 6197,
                                "name": "Identifier",
                                "src": "1718:10:108"
                              }
                            ],
                            "id": 6198,
                            "name": "FunctionCall",
                            "src": "1718:12:108"
                          }
                        ],
                        "id": 6199,
                        "name": "FunctionCall",
                        "src": "1694:37:108"
                      }
                    ],
                    "id": 6200,
                    "name": "ExpressionStatement",
                    "src": "1694:37:108"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10374,
                              "type": "function (string memory)",
                              "value": "_setBaseURI"
                            },
                            "id": 6201,
                            "name": "Identifier",
                            "src": "1742:11:108"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6176,
                              "type": "string memory",
                              "value": "baseURI"
                            },
                            "id": 6202,
                            "name": "Identifier",
                            "src": "1754:7:108"
                          }
                        ],
                        "id": 6203,
                        "name": "FunctionCall",
                        "src": "1742:20:108"
                      }
                    ],
                    "id": 6204,
                    "name": "ExpressionStatement",
                    "src": "1742:20:108"
                  }
                ],
                "id": 6205,
                "name": "Block",
                "src": "1582:187:108"
              }
            ],
            "id": 6206,
            "name": "FunctionDefinition",
            "src": "1484:285:108"
          },
          {
            "attributes": {
              "functionSelector": "6a627842",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 6290,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Creates a new token for `to`. Its token ID will be automatically\n assigned (and available on the emitted {IERC721-Transfer} event), and the token\n URI autogenerated based on the base URI passed at construction.\n See {ERC721-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
                },
                "id": 6207,
                "name": "StructuredDocumentation",
                "src": "1775:364:108"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 6234,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6208,
                        "name": "ElementaryTypeName",
                        "src": "2158:7:108"
                      }
                    ],
                    "id": 6209,
                    "name": "VariableDeclaration",
                    "src": "2158:10:108"
                  }
                ],
                "id": 6210,
                "name": "ParameterList",
                "src": "2157:12:108"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6211,
                "name": "ParameterList",
                "src": "2185:0:108"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                                  "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 6212,
                            "name": "Identifier",
                            "src": "2195:7:108"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3407,
                                  "type": "function (bytes32,address) view returns (bool)",
                                  "value": "hasRole"
                                },
                                "id": 6213,
                                "name": "Identifier",
                                "src": "2203:7:108"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6162,
                                  "type": "bytes32",
                                  "value": "MINTER_ROLE"
                                },
                                "id": 6214,
                                "name": "Identifier",
                                "src": "2211:11:108"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2159,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 6215,
                                    "name": "Identifier",
                                    "src": "2224:10:108"
                                  }
                                ],
                                "id": 6216,
                                "name": "FunctionCall",
                                "src": "2224:12:108"
                              }
                            ],
                            "id": 6217,
                            "name": "FunctionCall",
                            "src": "2203:34:108"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\"",
                              "value": "ERC721PresetMinterPauserAutoId: must have minter role to mint"
                            },
                            "id": 6218,
                            "name": "Literal",
                            "src": "2239:63:108"
                          }
                        ],
                        "id": 6219,
                        "name": "FunctionCall",
                        "src": "2195:108:108"
                      }
                    ],
                    "id": 6220,
                    "name": "ExpressionStatement",
                    "src": "2195:108:108"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10202,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 6221,
                            "name": "Identifier",
                            "src": "2464:5:108"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6209,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 6222,
                            "name": "Identifier",
                            "src": "2470:2:108"
                          },
                          {
                            "attributes": {
                              "arguments": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "current",
                                  "referencedDeclaration": 12401,
                                  "type": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6169,
                                      "type": "struct Counters.Counter storage ref",
                                      "value": "_tokenIdTracker"
                                    },
                                    "id": 6223,
                                    "name": "Identifier",
                                    "src": "2474:15:108"
                                  }
                                ],
                                "id": 6224,
                                "name": "MemberAccess",
                                "src": "2474:23:108"
                              }
                            ],
                            "id": 6225,
                            "name": "FunctionCall",
                            "src": "2474:25:108"
                          }
                        ],
                        "id": 6226,
                        "name": "FunctionCall",
                        "src": "2464:36:108"
                      }
                    ],
                    "id": 6227,
                    "name": "ExpressionStatement",
                    "src": "2464:36:108"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "increment",
                              "referencedDeclaration": 12413,
                              "type": "function (struct Counters.Counter storage pointer)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6169,
                                  "type": "struct Counters.Counter storage ref",
                                  "value": "_tokenIdTracker"
                                },
                                "id": 6228,
                                "name": "Identifier",
                                "src": "2510:15:108"
                              }
                            ],
                            "id": 6230,
                            "name": "MemberAccess",
                            "src": "2510:25:108"
                          }
                        ],
                        "id": 6231,
                        "name": "FunctionCall",
                        "src": "2510:27:108"
                      }
                    ],
                    "id": 6232,
                    "name": "ExpressionStatement",
                    "src": "2510:27:108"
                  }
                ],
                "id": 6233,
                "name": "Block",
                "src": "2185:359:108"
              }
            ],
            "id": 6234,
            "name": "FunctionDefinition",
            "src": "2144:400:108"
          },
          {
            "attributes": {
              "functionSelector": "8456cb59",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "pause",
              "scope": 6290,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Pauses all token transfers.\n See {ERC721Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
                },
                "id": 6235,
                "name": "StructuredDocumentation",
                "src": "2550:193:108"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6236,
                "name": "ParameterList",
                "src": "2762:2:108"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6237,
                "name": "ParameterList",
                "src": "2780:0:108"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                                  "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 6238,
                            "name": "Identifier",
                            "src": "2790:7:108"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3407,
                                  "type": "function (bytes32,address) view returns (bool)",
                                  "value": "hasRole"
                                },
                                "id": 6239,
                                "name": "Identifier",
                                "src": "2798:7:108"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6167,
                                  "type": "bytes32",
                                  "value": "PAUSER_ROLE"
                                },
                                "id": 6240,
                                "name": "Identifier",
                                "src": "2806:11:108"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2159,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 6241,
                                    "name": "Identifier",
                                    "src": "2819:10:108"
                                  }
                                ],
                                "id": 6242,
                                "name": "FunctionCall",
                                "src": "2819:12:108"
                              }
                            ],
                            "id": 6243,
                            "name": "FunctionCall",
                            "src": "2798:34:108"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f207061757365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\"",
                              "value": "ERC721PresetMinterPauserAutoId: must have pauser role to pause"
                            },
                            "id": 6244,
                            "name": "Literal",
                            "src": "2834:64:108"
                          }
                        ],
                        "id": 6245,
                        "name": "FunctionCall",
                        "src": "2790:109:108"
                      }
                    ],
                    "id": 6246,
                    "name": "ExpressionStatement",
                    "src": "2790:109:108"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 13438,
                              "type": "function ()",
                              "value": "_pause"
                            },
                            "id": 6247,
                            "name": "Identifier",
                            "src": "2909:6:108"
                          }
                        ],
                        "id": 6248,
                        "name": "FunctionCall",
                        "src": "2909:8:108"
                      }
                    ],
                    "id": 6249,
                    "name": "ExpressionStatement",
                    "src": "2909:8:108"
                  }
                ],
                "id": 6250,
                "name": "Block",
                "src": "2780:144:108"
              }
            ],
            "id": 6251,
            "name": "FunctionDefinition",
            "src": "2748:176:108"
          },
          {
            "attributes": {
              "functionSelector": "3f4ba83a",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "unpause",
              "scope": 6290,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @dev Unpauses all token transfers.\n See {ERC721Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
                },
                "id": 6252,
                "name": "StructuredDocumentation",
                "src": "2930:197:108"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6253,
                "name": "ParameterList",
                "src": "3148:2:108"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6254,
                "name": "ParameterList",
                "src": "3166:0:108"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                                  "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 6255,
                            "name": "Identifier",
                            "src": "3176:7:108"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 3407,
                                  "type": "function (bytes32,address) view returns (bool)",
                                  "value": "hasRole"
                                },
                                "id": 6256,
                                "name": "Identifier",
                                "src": "3184:7:108"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 6167,
                                  "type": "bytes32",
                                  "value": "PAUSER_ROLE"
                                },
                                "id": 6257,
                                "name": "Identifier",
                                "src": "3192:11:108"
                              },
                              {
                                "attributes": {
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2159,
                                      "type": "function () view returns (address payable)",
                                      "value": "_msgSender"
                                    },
                                    "id": 6258,
                                    "name": "Identifier",
                                    "src": "3205:10:108"
                                  }
                                ],
                                "id": 6259,
                                "name": "FunctionCall",
                                "src": "3205:12:108"
                              }
                            ],
                            "id": 6260,
                            "name": "FunctionCall",
                            "src": "3184:34:108"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\"",
                              "value": "ERC721PresetMinterPauserAutoId: must have pauser role to unpause"
                            },
                            "id": 6261,
                            "name": "Literal",
                            "src": "3220:66:108"
                          }
                        ],
                        "id": 6262,
                        "name": "FunctionCall",
                        "src": "3176:111:108"
                      }
                    ],
                    "id": 6263,
                    "name": "ExpressionStatement",
                    "src": "3176:111:108"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 13454,
                              "type": "function ()",
                              "value": "_unpause"
                            },
                            "id": 6264,
                            "name": "Identifier",
                            "src": "3297:8:108"
                          }
                        ],
                        "id": 6265,
                        "name": "FunctionCall",
                        "src": "3297:10:108"
                      }
                    ],
                    "id": 6266,
                    "name": "ExpressionStatement",
                    "src": "3297:10:108"
                  }
                ],
                "id": 6267,
                "name": "Block",
                "src": "3166:148:108"
              }
            ],
            "id": 6268,
            "name": "FunctionDefinition",
            "src": "3132:182:108"
          },
          {
            "attributes": {
              "baseFunctions": [
                10465,
                10559
              ],
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_beforeTokenTransfer",
              "scope": 6290,
              "stateMutability": "nonpayable",
              "virtual": true,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "name": "ERC721",
                      "referencedDeclaration": 10466,
                      "type": "contract ERC721"
                    },
                    "id": 6276,
                    "name": "UserDefinedTypeName",
                    "src": "3419:6:108"
                  },
                  {
                    "attributes": {
                      "name": "ERC721Pausable",
                      "referencedDeclaration": 10560,
                      "type": "contract ERC721Pausable"
                    },
                    "id": 6277,
                    "name": "UserDefinedTypeName",
                    "src": "3427:14:108"
                  }
                ],
                "id": 6278,
                "name": "OverrideSpecifier",
                "src": "3410:32:108"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "from",
                      "scope": 6289,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6269,
                        "name": "ElementaryTypeName",
                        "src": "3350:7:108"
                      }
                    ],
                    "id": 6270,
                    "name": "VariableDeclaration",
                    "src": "3350:12:108"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "scope": 6289,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 6271,
                        "name": "ElementaryTypeName",
                        "src": "3364:7:108"
                      }
                    ],
                    "id": 6272,
                    "name": "VariableDeclaration",
                    "src": "3364:10:108"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "scope": 6289,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 6273,
                        "name": "ElementaryTypeName",
                        "src": "3376:7:108"
                      }
                    ],
                    "id": 6274,
                    "name": "VariableDeclaration",
                    "src": "3376:15:108"
                  }
                ],
                "id": 6275,
                "name": "ParameterList",
                "src": "3349:43:108"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 6279,
                "name": "ParameterList",
                "src": "3443:0:108"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_beforeTokenTransfer",
                              "referencedDeclaration": 10559,
                              "type": "function (address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -25,
                                  "type": "contract super ERC721PresetMinterPauserAutoId",
                                  "value": "super"
                                },
                                "id": 6280,
                                "name": "Identifier",
                                "src": "3453:5:108"
                              }
                            ],
                            "id": 6282,
                            "name": "MemberAccess",
                            "src": "3453:26:108"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6270,
                              "type": "address",
                              "value": "from"
                            },
                            "id": 6283,
                            "name": "Identifier",
                            "src": "3480:4:108"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6272,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 6284,
                            "name": "Identifier",
                            "src": "3486:2:108"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 6274,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 6285,
                            "name": "Identifier",
                            "src": "3490:7:108"
                          }
                        ],
                        "id": 6286,
                        "name": "FunctionCall",
                        "src": "3453:45:108"
                      }
                    ],
                    "id": 6287,
                    "name": "ExpressionStatement",
                    "src": "3453:45:108"
                  }
                ],
                "id": 6288,
                "name": "Block",
                "src": "3443:62:108"
              }
            ],
            "id": 6289,
            "name": "FunctionDefinition",
            "src": "3320:185:108"
          }
        ],
        "id": 6290,
        "name": "ContractDefinition",
        "src": "899:2608:108"
      }
    ],
    "id": 6291,
    "name": "SourceUnit",
    "src": "33:3475:108"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.3+commit.9bfce1f6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-14T01:48:59.896Z",
  "devdoc": {
    "details": "{ERC721} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers  - token ID and URI autogeneration This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "burn(uint256)": {
        "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
      },
      "constructor": {
        "details": "Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the account that deploys the contract. Token URIs will be autogenerated based on `baseURI` and their token IDs. See {ERC721-tokenURI}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "mint(address)": {
        "details": "Creates a new token for `to`. Its token ID will be automatically assigned (and available on the emitted {IERC721-Transfer} event), and the token URI autogenerated based on the base URI passed at construction. See {ERC721-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "pause()": {
        "details": "Pauses all token transfers. See {ERC721Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "unpause()": {
        "details": "Unpauses all token transfers. See {ERC721Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}